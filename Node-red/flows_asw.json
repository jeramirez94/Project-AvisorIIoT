[
    {
        "id": "f640fd6ee29efded",
        "type": "tab",
        "label": "ListenWebsockets",
        "disabled": false,
        "info": "",
        "env": [
            {
                "name": "NAME",
                "value": "Tab_ListenWebsockets",
                "type": "str"
            }
        ]
    },
    {
        "id": "b567b8d0aa74c819",
        "type": "tab",
        "label": "IndicadoresGPIO ",
        "disabled": false,
        "info": "",
        "env": [
            {
                "name": "NAME",
                "value": "Tab_IndicadoresGPIO",
                "type": "str"
            }
        ]
    },
    {
        "id": "c62bf2524e0fc96c",
        "type": "tab",
        "label": "GPIO",
        "disabled": false,
        "info": "",
        "env": [
            {
                "name": "NAME",
                "value": "Tab_GPIO",
                "type": "str"
            }
        ]
    },
    {
        "id": "da106467599aeba9",
        "type": "tab",
        "label": "CajasManuales",
        "disabled": false,
        "info": "",
        "env": [
            {
                "name": "NAME",
                "value": "Tab_CajasManuales",
                "type": "str"
            }
        ]
    },
    {
        "id": "495668b9.69db98",
        "type": "tab",
        "label": "PLC",
        "disabled": false,
        "info": "",
        "env": [
            {
                "name": "NAME",
                "value": "Tab_PLC",
                "type": "str"
            }
        ]
    },
    {
        "id": "00b935ea496cf142",
        "type": "tab",
        "label": "MQTT",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "92e911a9.3fbda",
        "type": "tab",
        "label": "COMM",
        "disabled": false,
        "info": "",
        "env": [
            {
                "name": "NAME",
                "value": "Tab_COMM",
                "type": "str"
            }
        ]
    },
    {
        "id": "20acafb7.9aa8c",
        "type": "tab",
        "label": "EstatusProduccion",
        "disabled": false,
        "info": "",
        "env": [
            {
                "name": "NAME",
                "value": "Tab_EstatusProduccion",
                "type": "str"
            }
        ]
    },
    {
        "id": "810e3309.5f05f",
        "type": "tab",
        "label": "SQLITE",
        "disabled": false,
        "info": "",
        "env": [
            {
                "name": "NAME",
                "value": "Tab_SQLITE",
                "type": "str"
            }
        ]
    },
    {
        "id": "77acd0d5.a92eb",
        "type": "tab",
        "label": "SQLSERVER",
        "disabled": false,
        "info": "",
        "env": [
            {
                "name": "NAME",
                "value": "Tab_SQLSERVER",
                "type": "str"
            }
        ]
    },
    {
        "id": "c4ab0b6f.953d68",
        "type": "tab",
        "label": "ConfLocal",
        "disabled": false,
        "info": "",
        "env": [
            {
                "name": "NAME",
                "value": "Tab_ConfLocal",
                "type": "str"
            },
            {
                "name": "VersionNR",
                "value": "3.1.5",
                "type": "str"
            }
        ]
    },
    {
        "id": "c58c4e92.63ec8",
        "type": "tab",
        "label": "CargaInicialSQLite",
        "disabled": false,
        "info": "",
        "env": [
            {
                "name": "NAME",
                "value": "Tab_CargaInicialSQLite",
                "type": "str"
            }
        ]
    },
    {
        "id": "2a221ba6.391554",
        "type": "tab",
        "label": "WebSockets",
        "disabled": false,
        "info": "",
        "env": [
            {
                "name": "NAME",
                "value": "Tab_WebSockets",
                "type": "str"
            }
        ]
    },
    {
        "id": "5aa1551.3cbbcac",
        "type": "tab",
        "label": "Seguridad",
        "disabled": false,
        "info": "",
        "env": [
            {
                "name": "NAME",
                "value": "Tab_Seguridad",
                "type": "str"
            }
        ]
    },
    {
        "id": "1293646e.b28ebc",
        "type": "tab",
        "label": "FileStorage",
        "disabled": false,
        "info": "",
        "env": [
            {
                "name": "NAME",
                "value": "Tab_Seguridad",
                "type": "str"
            }
        ]
    },
    {
        "id": "99758b54.d258a8",
        "type": "tab",
        "label": "ReplicaServidorBD",
        "disabled": false,
        "info": "\nActualizar la informacion en DB",
        "env": [
            {
                "name": "NAME",
                "value": "Tab_ReplicaServidorBD",
                "type": "str"
            }
        ]
    },
    {
        "id": "fe9ad1fa376c5db1",
        "type": "tab",
        "label": "Depuration",
        "disabled": false,
        "info": "",
        "env": [
            {
                "name": "NAME",
                "value": "Tab_Depuration",
                "type": "str"
            }
        ]
    },
    {
        "id": "12e72f71.814db1",
        "type": "tab",
        "label": "DescargaOPM",
        "disabled": false,
        "info": "",
        "env": [
            {
                "name": "NAME",
                "value": "Tab_DescargaOPM",
                "type": "str"
            }
        ]
    },
    {
        "id": "9fb701b29f864573",
        "type": "tab",
        "label": "Validacion",
        "disabled": false,
        "info": "",
        "env": [
            {
                "name": "NAME",
                "value": "Tab_Validacion",
                "type": "str"
            }
        ]
    },
    {
        "id": "0417ef263c3d97ea",
        "type": "tab",
        "label": "SQLiteUpdate",
        "disabled": false,
        "info": "",
        "env": [
            {
                "name": "NAME",
                "value": "Tab_SQLiteUpdate",
                "type": "str"
            }
        ]
    },
    {
        "id": "afaa7b91ac218e5e",
        "type": "tab",
        "label": "Deployment",
        "disabled": false,
        "info": "",
        "env": [
            {
                "name": "NAME",
                "value": "Deployment",
                "type": "str"
            },
            {
                "name": "VersionNR",
                "value": "3.1.5",
                "type": "str"
            }
        ]
    },
    {
        "id": "16b4315fad4e3401",
        "type": "tab",
        "label": "Alertas",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "1a581aaa.0ee6f5",
        "type": "subflow",
        "name": "SelArticulos",
        "info": "",
        "category": "",
        "in": [],
        "out": [],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "e42240c4.434d2",
        "type": "subflow",
        "name": "EjParseUpdate",
        "info": "",
        "category": "",
        "in": [],
        "out": [],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "6271978d.4d6ac8",
        "type": "subflow",
        "name": "SP_Execute",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 160,
                "y": 60,
                "wires": [
                    {
                        "id": "71e7ff2d.92bde"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 420,
                "y": 60,
                "wires": [
                    {
                        "id": "71e7ff2d.92bde",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "22430c84.47da24",
        "type": "subflow",
        "name": "DescargaReplica",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 100,
                "wires": [
                    {
                        "id": "4839effa.55167"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1720,
                "y": 60,
                "wires": [
                    {
                        "id": "c341dba7.e59f28",
                        "port": 0
                    },
                    {
                        "id": "a4aa08c2.f7c668",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "54a4792c.863048",
        "type": "subflow",
        "name": "FnParseSelect",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 80,
                "y": 60,
                "wires": [
                    {
                        "id": "5bb4302.36339d"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 360,
                "y": 60,
                "wires": [
                    {
                        "id": "5bb4302.36339d",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "3ce020fc.06235",
        "type": "subflow",
        "name": "CU162_Pag1_ProcesarFinCaja",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 140,
                "y": 100,
                "wires": [
                    {
                        "id": "ac6b0044.fb62d"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1220,
                "y": 686,
                "wires": [
                    {
                        "id": "dd093b9b.0c0a68",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "NAME",
                "type": "str",
                "value": "CU162_Pag1_ProcesarFinCaja"
            }
        ],
        "meta": {},
        "color": "#fd4f00",
        "icon": "node-red/cog.svg"
    },
    {
        "id": "9d73bd39.a6086",
        "type": "subflow",
        "name": "AgregarCajaNueva",
        "info": "Este nodo agrega una caja nueva a la OP en curso y actualiza la tabla de variables. \n\n**Uso: **\n\nAgrega al msg una propiedad IdComponente con el Id del componente correspondiente. \n\n**Salida:**\nmsg.payload es el payload original del mensaje antes de llamarlo. ",
        "category": "",
        "in": [
            {
                "x": 20,
                "y": 140,
                "wires": [
                    {
                        "id": "b34d99b0.b8cb18"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1140,
                "y": 180,
                "wires": [
                    {
                        "id": "55e72386.42854c",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99",
        "icon": "font-awesome/fa-inbox"
    },
    {
        "id": "54823eeb.898e9",
        "type": "subflow",
        "name": "CU157_Pag2_IdentificaParoCambioPO",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 151,
                "wires": [
                    {
                        "id": "f3a5dbf7.5155d8"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1580,
                "y": 120,
                "wires": [
                    {
                        "id": "f428c991.05dc28",
                        "port": 0
                    },
                    {
                        "id": "cefcc922.e6a538",
                        "port": 0
                    },
                    {
                        "id": "10ce0940.fef217",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "NAME",
                "type": "str",
                "value": "CU157_Pag2_IdentificaParoCambioPO"
            }
        ],
        "meta": {},
        "color": "#fd4f00",
        "icon": "node-red/cog.svg"
    },
    {
        "id": "39e21cf9.935554",
        "type": "subflow",
        "name": "CajasXHoraProducto",
        "info": "recibe la clave del artgiculo \n    en **msg.ClaArticulo**\n\ndevuelve las Cajas por Hora esperadas\n    en **msg.CajasXHora**",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 180,
                "wires": [
                    {
                        "id": "221383d3.1d936c"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 920,
                "y": 180,
                "wires": [
                    {
                        "id": "251d58bb.7d48d8",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "7d171618.276858",
        "type": "subflow",
        "name": "CU164_Pag1_CalculaOEE",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 80,
                "y": 60,
                "wires": [
                    {
                        "id": "66c76deb.108a04"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1220,
                "y": 320,
                "wires": [
                    {
                        "id": "a32b20a0.5b8ff",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "NAME",
                "type": "str",
                "value": "CU164_Pag1_CalculaOEE"
            }
        ],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "761998e1.8728f8",
        "type": "subflow",
        "name": "CU202_Pag1_BitacoraProduccion",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 380,
                "wires": [
                    {
                        "id": "1362bd83.91f622"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 2020,
                "y": 420,
                "wires": [
                    {
                        "id": "39bdd9ae.a777f6",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "NAME",
                "type": "str",
                "value": "CU202_Pag1_BitacoraProduccion"
            }
        ],
        "meta": {},
        "color": "#FD4F00"
    },
    {
        "id": "86ffa80d.aef248",
        "type": "subflow",
        "name": "CU165_Pag1_CheckInOut",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 80,
                "wires": [
                    {
                        "id": "586454cebe8a4ed6"
                    }
                ]
            }
        ],
        "out": [],
        "env": [
            {
                "name": "NAME",
                "type": "str",
                "value": "CU165_Pag1_CheckInOut"
            }
        ],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "554af14f.5b6cb",
        "type": "subflow",
        "name": "CU153_Pag1_FinInmediato_Op",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 63,
                "y": 181,
                "wires": [
                    {
                        "id": "b8f1679c.736b08"
                    }
                ]
            }
        ],
        "out": [],
        "env": [
            {
                "name": "NAME",
                "type": "str",
                "value": "CU153_Pag1_FinInmediato_Op"
            }
        ],
        "meta": {},
        "color": "#fd4f00"
    },
    {
        "id": "2bb83287.f44a8e",
        "type": "subflow",
        "name": "CU167_Pag1_FinCajaMCSW",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 100,
                "y": 160,
                "wires": [
                    {
                        "id": "fdc22f6e.4e246"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1160,
                "y": 160,
                "wires": [
                    {
                        "id": "f8e2ed76.39eee",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "NAME",
                "type": "str",
                "value": "CU167_Pag1_FinCajaMCSW"
            }
        ],
        "meta": {},
        "color": "#fd4f00"
    },
    {
        "id": "871820c8.db65d",
        "type": "subflow",
        "name": "CU166_Pag1_ChangeOver",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 47,
                "wires": [
                    {
                        "id": "7a774595.50feec"
                    }
                ]
            }
        ],
        "out": [],
        "env": [
            {
                "name": "NAME",
                "type": "str",
                "value": "CU166_Pag1_ChangeOver"
            }
        ],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "72c19d2d.532ce4",
        "type": "subflow",
        "name": "CU402_Pag2_BluePrints",
        "info": "",
        "category": "",
        "in": [],
        "out": [],
        "env": [
            {
                "name": "NAME",
                "type": "str",
                "value": "CU402_Pag2_BluePrints"
            }
        ],
        "meta": {},
        "color": "#fd4f00"
    },
    {
        "id": "c1f3db55.552f78",
        "type": "subflow",
        "name": "CU544_Pag1_AutojustificaParo",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 20,
                "y": 140,
                "wires": [
                    {
                        "id": "dbbfeb1f.0dae78"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 2580,
                "y": 140,
                "wires": [
                    {
                        "id": "ca1caf4f.bb292",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "NAME",
                "type": "str",
                "value": "CU544_Pag1_AutojustificaParo"
            }
        ],
        "meta": {},
        "color": "#FD4F00"
    },
    {
        "id": "86d5434a.cfc9c",
        "type": "subflow",
        "name": "CU710_Pag1_ConsultaOts",
        "info": "",
        "category": "",
        "in": [],
        "out": [],
        "env": [
            {
                "name": "NAME",
                "type": "str",
                "value": "CU710_Pag1_ConsultaOts"
            }
        ],
        "meta": {},
        "color": "#fd4f00"
    },
    {
        "id": "f57bfe69.a6a55",
        "type": "subflow",
        "name": "CU159_Pag2_AvisoGeneral",
        "info": "payload = {\n    type:error\n    key:i18n key\n    message:message to display\n    }",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 60,
                "wires": [
                    {
                        "id": "6657b62b.d1a998"
                    }
                ]
            }
        ],
        "out": [],
        "env": [],
        "color": "#3FADB5",
        "inputLabels": [
            "message"
        ],
        "icon": "font-awesome/fa-bullhorn"
    },
    {
        "id": "d3a37898.3d3278",
        "type": "subflow",
        "name": "ActualizaVariablesProduccion",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 0,
                "y": 120,
                "wires": [
                    {
                        "id": "27f09de8.0d4322"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1260,
                "y": 140,
                "wires": [
                    {
                        "id": "ac146f8c.25278",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "27a291e8.5fa3be",
        "type": "subflow",
        "name": "InicializaVariablesProduccion",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 240,
                "y": 160,
                "wires": [
                    {
                        "id": "26d4b0cb.266ff"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 860,
                "y": 260,
                "wires": [
                    {
                        "id": "95318346.d82a8",
                        "port": 0
                    }
                ]
            },
            {
                "x": 860,
                "y": 320,
                "wires": [
                    {
                        "id": "95318346.d82a8",
                        "port": 1
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "e4f0e9b3.dbf928",
        "type": "subflow",
        "name": "parseUpdate",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 80,
                "wires": [
                    {
                        "id": "d3f1a89f.7b3138"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 360,
                "y": 80,
                "wires": [
                    {
                        "id": "d3f1a89f.7b3138",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "690d6306.10b5ec",
        "type": "subflow",
        "name": "ObtenerComponentes",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 260,
                "wires": [
                    {
                        "id": "bac261c9.512af"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1320,
                "y": 260,
                "wires": [
                    {
                        "id": "7b3e6b61.537e84",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#fd4f00",
        "icon": "node-red/split.svg"
    },
    {
        "id": "16e2ce83.628ca1",
        "type": "subflow",
        "name": "AddAssetInfo",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 80,
                "wires": [
                    {
                        "id": "308f7150.26785e"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 420,
                "y": 80,
                "wires": [
                    {
                        "id": "308f7150.26785e",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "1144a4b6.dd0f6b",
        "type": "subflow",
        "name": "pulse counter",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 120,
                "wires": [
                    {
                        "id": "24d6500dba8675d9"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1420,
                "y": 120,
                "wires": [
                    {
                        "id": "bc38d56f.1e60b8",
                        "port": 0
                    },
                    {
                        "id": "54d8547e6e979d63",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "b568b641.da5428",
        "type": "subflow",
        "name": "ON_OFF",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 80,
                "wires": [
                    {
                        "id": "9313dfb8.1f1f2"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 540,
                "y": 80,
                "wires": [
                    {
                        "id": "9313dfb8.1f1f2",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "e10e5505.0b2a38",
        "type": "subflow",
        "name": "strip counter",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 120,
                "wires": [
                    {
                        "id": "b1718fbf.9fe02"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1220,
                "y": 140,
                "wires": [
                    {
                        "id": "a9cb3150.84142",
                        "port": 0
                    },
                    {
                        "id": "10ed720d.26a21e",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "4a12be2e.080d7",
        "type": "subflow",
        "name": "strip rejected counter",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 160,
                "wires": [
                    {
                        "id": "a3c59532.945ac8"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 820,
                "y": 160,
                "wires": [
                    {
                        "id": "292c858.584ad7a",
                        "port": 0
                    },
                    {
                        "id": "2e57145.877c2ec",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "ebe34ea7.4705a",
        "type": "subflow",
        "name": "box counter",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 160,
                "wires": [
                    {
                        "id": "468ccb6a.33ba94"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1100,
                "y": 180,
                "wires": [
                    {
                        "id": "e4e871e0.e7916",
                        "port": 0
                    },
                    {
                        "id": "16d9e01f.c6734",
                        "port": 0
                    },
                    {
                        "id": "1be0ed04.eb48c3",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "518934b7c7fabd9f",
        "type": "subflow",
        "name": "CU201_Pag2_AgrupaParos",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 100,
                "wires": [
                    {
                        "id": "1abd9a240c7e6206"
                    }
                ]
            }
        ],
        "out": [],
        "env": [
            {
                "name": "NAME",
                "type": "str",
                "value": "CU201_Pag2_AgrupaParos"
            }
        ],
        "meta": {},
        "color": "#fd4f00",
        "icon": "font-awesome/fa-object-group"
    },
    {
        "id": "1b4307314ea43f2e",
        "type": "subflow",
        "name": "CU1_Pag5_FoliosBitacoras",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 100,
                "wires": [
                    {
                        "id": "c9f2ee07aa821f5d"
                    },
                    {
                        "id": "7cba273e444218e3"
                    },
                    {
                        "id": "169ea06529cb0e3d"
                    },
                    {
                        "id": "b2b1b10d05d9eb40"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1420,
                "y": 180,
                "wires": [
                    {
                        "id": "ce74f9ef6d62c3aa",
                        "port": 0
                    },
                    {
                        "id": "e7c044e85c3a461e",
                        "port": 0
                    },
                    {
                        "id": "f75cbe4fb23d2fae",
                        "port": 0
                    },
                    {
                        "id": "6d834d496374dbc2",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "NAME",
                "type": "str",
                "value": "CU1_Pag5_FoliosBitacoras"
            }
        ],
        "meta": {},
        "color": "#fd4f00",
        "icon": "node-red/parser-csv.svg"
    },
    {
        "id": "a593733916e04f5f",
        "type": "subflow",
        "name": "CU999_Pag5_CheckOver",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 50,
                "y": 30,
                "wires": [
                    {
                        "id": "6e020f97920a5601"
                    },
                    {
                        "id": "2532e1189fa1d397"
                    },
                    {
                        "id": "db1d4fc0ca65fda3"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 2880,
                "y": 140,
                "wires": [
                    {
                        "id": "26a5a6f180143e39",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "NAME",
                "type": "str",
                "value": "CU999_Pag5_CheckOver"
            }
        ],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "63ea8e21528482a0",
        "type": "subflow",
        "name": "CU999_Pag7_SugerenciaHorometros",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 120,
                "wires": [
                    {
                        "id": "d97c5487aeea4c53"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1260,
                "y": 120,
                "wires": [
                    {
                        "id": "c1354023c2a269b6",
                        "port": 0
                    },
                    {
                        "id": "e7d092a0b7ea4ab0",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "NAME",
                "type": "str",
                "value": "CU999_Pag7_SugerenciaHorometros"
            }
        ],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "10996779f0a53f03",
        "type": "subflow",
        "name": "SqliteProc",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 120,
                "wires": [
                    {
                        "id": "49ca4d5db6f0c5b3"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 940,
                "y": 120,
                "wires": [
                    {
                        "id": "874b53093e592fa3",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "NAME",
                "type": "str",
                "value": "SF_SqliteProc"
            }
        ],
        "meta": {},
        "color": "#FF6B00",
        "icon": "node-red/leveldb.png"
    },
    {
        "id": "210c126b27629e8d",
        "type": "subflow",
        "name": "CU157_Pag2_IdentificaParoCambioPO (2)",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 151,
                "wires": [
                    {
                        "id": "0a243c54267d1090"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1580,
                "y": 120,
                "wires": [
                    {
                        "id": "a7483730cd08ce48",
                        "port": 0
                    },
                    {
                        "id": "4c5223a486ef76e3",
                        "port": 0
                    },
                    {
                        "id": "172e590142a4de47",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "NAME",
                "type": "str",
                "value": "CU157_Pag2_IdentificaParoCambioPO (2)"
            }
        ],
        "meta": {},
        "color": "#fd4f00",
        "icon": "node-red/cog.svg"
    },
    {
        "id": "12c081a0a0519d8d",
        "type": "subflow",
        "name": "AgregarCajaNueva (2)",
        "info": "Este nodo agrega una caja nueva a la OP en curso y actualiza la tabla de variables. \n\n**Uso: **\n\nAgrega al msg una propiedad IdComponente con el Id del componente correspondiente. \n\n**Salida:**\nmsg.payload es el payload original del mensaje antes de llamarlo. ",
        "category": "",
        "in": [
            {
                "x": 20,
                "y": 140,
                "wires": [
                    {
                        "id": "977fb61bc162160d"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1140,
                "y": 180,
                "wires": [
                    {
                        "id": "f5699bda6a000d0d",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99",
        "icon": "font-awesome/fa-inbox"
    },
    {
        "id": "1ae9450.7021cbb",
        "type": "subflow",
        "name": "parseInsert",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 200,
                "y": 60,
                "wires": [
                    {
                        "id": "422165bb.e98b0c"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 480,
                "y": 60,
                "wires": [
                    {
                        "id": "422165bb.e98b0c",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "NAME",
                "type": "str",
                "value": "SF_parseInsert"
            }
        ],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "c8128109.41391",
        "type": "subflow",
        "name": "CU201_Pag1_BitacoraParos",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 50,
                "y": 30,
                "wires": [
                    {
                        "id": "f159b4f7d7e07ce1"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 3020,
                "y": 560,
                "wires": [
                    {
                        "id": "ad086bec899ac253",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "NAME",
                "type": "str",
                "value": "CU201_Pag1_BitacoraParos"
            }
        ],
        "meta": {},
        "color": "#fd4f00",
        "icon": "node-red/cog.svg"
    },
    {
        "id": "deda2d839f7f8b3b",
        "type": "subflow",
        "name": "CU204_Pag1_SolucionarCerrarAgrupados_Proc",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 50,
                "y": 30,
                "wires": [
                    {
                        "id": "fb4b754859f0d1f4"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1200,
                "y": 140,
                "wires": [
                    {
                        "id": "85b12d9bb05fa86f",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "NAME",
                "type": "str",
                "value": "CU204_Pag1_SolucionarCerrarAgrupados_Proc"
            }
        ],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "6b0d45cf53597d13",
        "type": "subflow",
        "name": "Subflow 1",
        "info": "",
        "in": [
            {
                "x": 60,
                "y": 80,
                "wires": [
                    {
                        "id": "83dc4e058c0bea85"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 680,
                "y": 80,
                "wires": [
                    {
                        "id": "3fa489e36faebd52",
                        "port": "0"
                    }
                ]
            }
        ]
    },
    {
        "id": "5af6fa3c2a72a88e",
        "type": "subflow",
        "name": "Subflow 12",
        "info": "",
        "in": [
            {
                "x": 20,
                "y": 80,
                "wires": [
                    {
                        "id": "e47fdc18cdead769"
                    }
                ]
            }
        ],
        "out": []
    },
    {
        "id": "2ba697921f82ce42",
        "type": "subflow",
        "name": "Subflow 11",
        "info": "",
        "in": [
            {
                "x": 20,
                "y": 80,
                "wires": [
                    {
                        "id": "a740ee5adf3808d8"
                    }
                ]
            }
        ],
        "out": []
    },
    {
        "id": "b4e7e623dc29aacd",
        "type": "subflow",
        "name": "Subflow 8",
        "info": "",
        "in": [
            {
                "x": 60,
                "y": 80,
                "wires": [
                    {
                        "id": "106c1ad3667914eb"
                    }
                ]
            }
        ],
        "out": []
    },
    {
        "id": "ca8c668f.a8c948",
        "type": "sqlitedb",
        "db": "${DBLitePath}",
        "mode": "RWC"
    },
    {
        "id": "955d262e.b17988",
        "type": "MSSQL-CN",
        "tdsVersion": "7_4",
        "name": "DCSDTII02",
        "server": "{{{SQL_IP}}}",
        "port": "1433",
        "encyption": false,
        "trustServerCertificate": false,
        "database": "{{{SQL_DB}}}",
        "useUTC": false,
        "connectTimeout": "150000",
        "requestTimeout": "200000",
        "cancelTimeout": "90000",
        "pool": "15",
        "parseJSON": false,
        "enableArithAbort": true
    },
    {
        "id": "41f56a3b.0f2a14",
        "type": "websocket-listener",
        "path": "/ws/CU151_Pag1_RefreshPO",
        "wholemsg": "false"
    },
    {
        "id": "c550d915.c86fa8",
        "type": "websocket-listener",
        "path": "/ws/CU154_Pag1_AvisoFinPO",
        "wholemsg": "false"
    },
    {
        "id": "4ee455ce.df989c",
        "type": "s7 endpoint",
        "z": "92e911a9.3fbda",
        "d": true,
        "transport": "iso-on-tcp",
        "address": "172.29.84.148",
        "port": "102",
        "rack": "0",
        "slot": "4",
        "localtsaphi": "01",
        "localtsaplo": "00",
        "remotetsaphi": "01",
        "remotetsaplo": "00",
        "connmode": "rack-slot",
        "busaddr": "2",
        "cycletime": "4000",
        "timeout": "15000",
        "name": "Lectrua_plc",
        "vartable": [
            {
                "addr": "DB300,X0.0",
                "name": "ON_OFF_ARM"
            },
            {
                "addr": "DB300,R2",
                "name": "SPEED_NAILS_MINUTE"
            },
            {
                "addr": "DB300,R6",
                "name": "NAIL_PRODUCTION"
            },
            {
                "addr": "DB300,R10",
                "name": "BOX_PRODUCTION"
            },
            {
                "addr": "DB300,X14.0",
                "name": "BOX_COMPLETED"
            },
            {
                "addr": "DB300,X14.1",
                "name": "BATCH_COMPLETED"
            },
            {
                "addr": "DB300,X14.2",
                "name": "ON_OFF_EQ_1"
            },
            {
                "addr": "DB300,X14.3",
                "name": "ON_OFF_EQ_2"
            },
            {
                "addr": "DB300,X14.4",
                "name": "ON_OFF_EQ_3"
            }
        ]
    },
    {
        "id": "e4608a94.38e1b8",
        "type": "websocket-listener",
        "path": "/plc/CU2_Pag3_ON_OFF",
        "wholemsg": "false"
    },
    {
        "id": "5b0b780c.c97958",
        "type": "websocket-listener",
        "path": "/plc/CU2_Pag3_SPEED",
        "wholemsg": "false"
    },
    {
        "id": "a0436d66.7ad9",
        "type": "websocket-listener",
        "path": "/plc/CU2_Pag3_UNIT_PRODUCTION",
        "wholemsg": "false"
    },
    {
        "id": "6bed0f86.923c5",
        "type": "websocket-listener",
        "path": "/plc/CU2_Pag3_PACK_PRODUCTION",
        "wholemsg": "false"
    },
    {
        "id": "8adde370.767ba",
        "type": "websocket-listener",
        "path": "/plc/CU2_Pag3_Error_PLC",
        "wholemsg": "false"
    },
    {
        "id": "4a0608b8.235408",
        "type": "s7 endpoint",
        "z": "92e911a9.3fbda",
        "d": true,
        "transport": "iso-on-tcp",
        "address": "172.29.84.148",
        "port": "102",
        "rack": "0",
        "slot": "4",
        "localtsaphi": "01",
        "localtsaplo": "00",
        "remotetsaphi": "01",
        "remotetsaplo": "00",
        "connmode": "rack-slot",
        "busaddr": "2",
        "cycletime": "5000",
        "timeout": "1500",
        "name": "",
        "vartable": [
            {
                "addr": "DB300,X0.0",
                "name": "ON_OFF_ARM"
            },
            {
                "addr": "DB300,X14.1",
                "name": "BATCH_COMPLETED"
            },
            {
                "addr": "DB300,X14.0",
                "name": "BOX_COMPLETED"
            },
            {
                "addr": "DB300,R2",
                "name": "SPEED_NAILS_MINUTE"
            }
        ]
    },
    {
        "id": "29ac71ab.07396e",
        "type": "s7 endpoint",
        "d": true,
        "transport": "iso-on-tcp",
        "address": "172.29.84.148",
        "port": "102",
        "rack": "0",
        "slot": "4",
        "localtsaphi": "01",
        "localtsaplo": "00",
        "remotetsaphi": "01",
        "remotetsaplo": "00",
        "connmode": "rack-slot",
        "busaddr": "2",
        "cycletime": "2000",
        "timeout": "1500",
        "name": "Lectura_PLC_SIMULA",
        "vartable": [
            {
                "addr": "DB300,X0.0",
                "name": "ON_OFF_ARM"
            },
            {
                "addr": "DB300,R2",
                "name": "SPEED_NAILS_MINUTE"
            },
            {
                "addr": "DB300,R6",
                "name": "NAIL_PRODUCTION"
            },
            {
                "addr": "DB300,R10",
                "name": "BOX_PRODUCTION"
            },
            {
                "addr": "DB300,X14.0",
                "name": "BOX_COMPLETED"
            },
            {
                "addr": "DB300,X14.1",
                "name": "BATCH_COMPLETED"
            }
        ]
    },
    {
        "id": "41cd94e5.1ec25c",
        "type": "FINS Connection",
        "name": "NX1P2",
        "host": "172.29.84.150",
        "port": "9600",
        "MODE": "",
        "ICF": "0x80",
        "DNA": "0",
        "DA1": "150",
        "DA2": "0",
        "SNA": "0",
        "SA1": "179",
        "SA2": "0"
    },
    {
        "id": "e0616b50.907e48",
        "type": "websocket-listener",
        "path": "/ws/CU152_Pag2_ErrorSyncMP_Proc",
        "wholemsg": "false"
    },
    {
        "id": "84b7e28b.f067f",
        "type": "websocket-listener",
        "path": "/ws/CU155_Pag2_CambioTurno",
        "wholemsg": "false"
    },
    {
        "id": "1d5ffd59.5c2643",
        "type": "websocket-listener",
        "path": "/ws/CU159_Pag1_AvisoBajaVelocidad",
        "wholemsg": "false"
    },
    {
        "id": "be72ffdf.b3434",
        "type": "websocket-listener",
        "path": "/ws/CU164_Pag3_Oee",
        "wholemsg": "false"
    },
    {
        "id": "471b1d6d.e22694",
        "type": "websocket-listener",
        "path": "/ws/CU524_Pag1_AndonLight",
        "wholemsg": "false"
    },
    {
        "id": "c24395de.c40a18",
        "type": "websocket-listener",
        "path": "/ws/CU506_Pag1_PerformanceLight",
        "wholemsg": "false"
    },
    {
        "id": "7fb8f2b5.e7f0ac",
        "type": "websocket-listener",
        "path": "/ws/CU159_Pag2_AvisoGeneral",
        "wholemsg": "false"
    },
    {
        "id": "c45ac354.88b06",
        "type": "eth-ip endpoint",
        "z": "495668b9.69db98",
        "d": true,
        "address": "192.168.250.1",
        "slot": "0",
        "cycletime": "1000",
        "name": "OMRON IP",
        "vartable": {
            "": {
                "DATABASE.ON_OFF_ARM": {
                    "type": "BOOL"
                },
                "DATABASE.SPEED_NAILS_MINUTE": {
                    "type": "REAL"
                },
                "DATABASE.NAIL_PRODUCTION": {
                    "type": "REAL"
                },
                "DATABASE.BOX_PRODUCTION": {
                    "type": "REAL"
                },
                "DATABASE.BOX_COMPLETED": {
                    "type": "BOOL"
                },
                "DATABASE.COMM_COUNTER_EQ": {
                    "type": "INT"
                },
                "DATABASE.BATCH_COMPLETE": {
                    "type": "BOOL"
                }
            }
        }
    },
    {
        "id": "81f6431d.47b76",
        "type": "eth-ip endpoint",
        "z": "495668b9.69db98",
        "d": true,
        "address": "192.168.250.2",
        "slot": "0",
        "cycletime": "500",
        "name": "OMROM IP 2",
        "vartable": {
            "": {
                "DATABASE.ON_OFF_ARM": {
                    "type": "BOOL"
                },
                "DATABASE.SPEED_NAILS_MINUTE": {
                    "type": "REAL"
                },
                "DATABASE.NAIL_PRODUCTION": {
                    "type": "REAL"
                },
                "DATABASE.BOX_PRODUCTION": {
                    "type": "REAL"
                },
                "DATABASE.BOX_COMPLETED": {
                    "type": "BOOL"
                },
                "DATABASE.COMM_COUNTER_EQ": {
                    "type": "INT"
                },
                "DATABASE.BATCH_COMPLETE": {
                    "type": "BOOL"
                }
            }
        }
    },
    {
        "id": "b7101100.e4b07",
        "type": "websocket-listener",
        "path": "/plc/CU2_Pag3_PACK_COMPLETED",
        "wholemsg": "false"
    },
    {
        "id": "9b7a44f60e2ce987",
        "type": "websocket-listener",
        "path": "/ws/CU5_Pag1_TipoCelda",
        "wholemsg": "true"
    },
    {
        "id": "4b775d0f3829009c",
        "type": "websocket-listener",
        "path": "/ws/CU5_Pag1_Port29",
        "wholemsg": "false"
    },
    {
        "id": "08a6a58b4cdfb39a",
        "type": "websocket-listener",
        "path": "/ws/CU5_Pag1_Port26",
        "wholemsg": "false"
    },
    {
        "id": "d33e40fb8e6a7101",
        "type": "websocket-listener",
        "path": "/ws/CU5_Pag1_Port24",
        "wholemsg": "false"
    },
    {
        "id": "ac191a2f19ae672e",
        "type": "websocket-listener",
        "path": "/ws/CU5_Pag1_Port21",
        "wholemsg": "false"
    },
    {
        "id": "6be2f2819d010882",
        "type": "websocket-listener",
        "path": "/ws/CU5_Pag1_Port31",
        "wholemsg": "false"
    },
    {
        "id": "10fcc5a2ad246159",
        "type": "websocket-listener",
        "path": "/ws/CU5_Pag1_Port7",
        "wholemsg": "false"
    },
    {
        "id": "d396fd97ca5c27bd",
        "type": "websocket-listener",
        "path": "/plc/CU2_Pag3_BATCH_COMPLETED",
        "wholemsg": "false"
    },
    {
        "id": "beec311999171edb",
        "type": "websocket-listener",
        "path": "/ws/CU5_Pag1_Inputs",
        "wholemsg": "false"
    },
    {
        "id": "544e07b16f7301bc",
        "type": "websocket-listener",
        "path": "/ws/CU5_Pag1_NombreMaquinas",
        "wholemsg": "true"
    },
    {
        "id": "be02628b9f71157b",
        "type": "websocket-listener",
        "path": "/ws/CU5_Pag1_Port11",
        "wholemsg": "false"
    },
    {
        "id": "6df9bb9b709ea040",
        "type": "websocket-listener",
        "path": "/ws/CU5_Pag1_Port35",
        "wholemsg": "false"
    },
    {
        "id": "8bf9ed92aa0b5da8",
        "type": "websocket-listener",
        "path": "/ws/CU5_Pag1_Port33",
        "wholemsg": "false"
    },
    {
        "id": "0df558ab8c7782f2",
        "type": "websocket-listener",
        "path": "/ws/CU5_Pag1_Port15",
        "wholemsg": "false"
    },
    {
        "id": "4719b2d7eb23de26",
        "type": "websocket-listener",
        "path": "/ws/CU5_Pag1_Port13",
        "wholemsg": "false"
    },
    {
        "id": "bae194823201145d",
        "type": "websocket-listener",
        "path": "/ws/ContadorCajasManuales",
        "wholemsg": "false"
    },
    {
        "id": "a8d818edba4274f2",
        "type": "ui_spacer",
        "z": "9fb701b29f864573",
        "name": "spacer",
        "group": "5d195279b189ed80",
        "order": 5,
        "width": 1,
        "height": 1
    },
    {
        "id": "2e90b06c70c3dd34",
        "type": "ui_group",
        "name": "Pulses per minute",
        "tab": "f2468e8b3e3cf64c",
        "order": 1,
        "disp": true,
        "width": "4",
        "collapse": false,
        "className": ""
    },
    {
        "id": "0cfb7380f43ae1fd",
        "type": "ui_group",
        "name": "Pulses per hour",
        "tab": "f2468e8b3e3cf64c",
        "order": 2,
        "disp": true,
        "width": "3",
        "collapse": false,
        "className": ""
    },
    {
        "id": "2622bdaaceca2895",
        "type": "ui_group",
        "name": "Counter",
        "tab": "f2468e8b3e3cf64c",
        "order": 3,
        "disp": true,
        "width": "3",
        "collapse": false,
        "className": ""
    },
    {
        "id": "5d195279b189ed80",
        "type": "ui_group",
        "name": "State",
        "tab": "f2468e8b3e3cf64c",
        "order": 4,
        "disp": true,
        "width": "3",
        "collapse": false,
        "className": ""
    },
    {
        "id": "317ee2addbf066fa",
        "type": "ui_group",
        "name": "ON_OFF",
        "tab": "f2468e8b3e3cf64c",
        "order": 6,
        "disp": true,
        "width": "30",
        "collapse": false,
        "className": ""
    },
    {
        "id": "b6f2f3c56f4a2778",
        "type": "ui_group",
        "name": "Frequency",
        "tab": "f2468e8b3e3cf64c",
        "order": 7,
        "disp": true,
        "width": "30",
        "collapse": false,
        "className": ""
    },
    {
        "id": "a788790a5efc8671",
        "type": "eth-ip endpoint",
        "d": true,
        "address": "192.168.250.1",
        "slot": "0",
        "cycletime": "1000",
        "name": "OMRON IP",
        "vartable": {
            "": {
                "DATABASE.ON_OFF_ARM": {
                    "type": "BOOL"
                },
                "DATABASE.SPEED_NAILS_MINUTE": {
                    "type": "REAL"
                },
                "DATABASE.NAIL_PRODUCTION": {
                    "type": "REAL"
                },
                "DATABASE.BOX_PRODUCTION": {
                    "type": "REAL"
                },
                "DATABASE.BOX_COMPLETED": {
                    "type": "BOOL"
                },
                "DATABASE.COMM_COUNTER_EQ": {
                    "type": "INT"
                },
                "DATABASE.BATCH_COMPLETE": {
                    "type": "BOOL"
                }
            }
        }
    },
    {
        "id": "cc47106f07b78728",
        "type": "ui_group",
        "name": "PLC",
        "tab": "f2468e8b3e3cf64c",
        "order": 5,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "f2468e8b3e3cf64c",
        "type": "ui_tab",
        "name": "Signals",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "2d897956fca50be2",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "b9aa418a1b1568cb",
        "type": "websocket-listener",
        "path": "/ws/CU204_Pag1_AlertaParos",
        "wholemsg": "true"
    },
    {
        "id": "112dfb4fc50ebef5",
        "type": "websocket-listener",
        "path": "ws/CU165_Pag1_CajasTurno",
        "wholemsg": "false"
    },
    {
        "id": "93537e3111ba5ea4",
        "type": "websocket-listener",
        "z": "c8128109.41391",
        "path": "/CU201_Pag1_WS_BitacoraParos",
        "wholemsg": "false"
    },
    {
        "id": "9ae849ca91d35300",
        "type": "mqtt-broker",
        "name": "",
        "broker": "https://test.mosquitto.org/",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "312219315c68d611",
        "type": "mqtt-broker",
        "name": "",
        "broker": "srvhoubd01",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": "100"
    },
    {
        "id": "804f26ad.086408",
        "type": "function",
        "z": "e42240c4.434d2",
        "name": "fnParseUpdateEjemplo",
        "func": "let Datos = [{\"nombretabla\":\"ASWLite_TraOrdenProduccion\",\"ClaUbicacion\":\"68\",\"IdPO\":3,\"IdCelda\":\"1\",\"ClaArticulo\":\"611645\",\"ClaveArticulo\":\"611645\",\"Orden\":\"3\",\"ClaEstatus\":\"1\",\"BajaLogica\":\"0\",\"ClaUsuarioMod\":\"0\",\"NombrePcMod\":\"302NGALAZ\",\"FechaUltimaMod\":\"2020-03-05T01:43:57.713\"}]\nDatos = Datos[0];\nlet NombreTabla = Datos.nombretabla;\nlet CteStr = 'WITH CteTmp (';\nlet CteSelectStr = 'AS ( SELECT '\nlet UpdateStr = `UPDATE ${NombreTabla} SET `;\nlet CamposUpdateStr = '';\nlet WhereUpdateStr = ''\nlet QryFinal = '';\n//LISTA DE CAMPOS DE LA CTE\nObject.keys(Datos).forEach((key,idx) => {\n    if(key != 'nombretabla'){\n        CteStr += key,idx;\n        CteStr += (idx != (Object.keys(Datos).length -1) ) ? ',':') ';\n        CteSelectStr += (typeof(Datos[key]) == 'string') ? `'${Datos[key]}'` : `${Datos[key]}`;\n        CteSelectStr += (idx != (Object.keys(Datos).length -1) ) ? ',':') ';\n    }\n});\n\n//COMPLETAMOS STRING PARA CREAR CTE\nCteStr += CteStr+CteSelectStr;\n\nObject.keys(Datos).forEach((key,idx) => {\n    let campo = key;\n    let valor = (typeof(Datos[key]) == 'string') ? `'${Datos[key]}'` : Datos[key];\n    if(campo != 'nombretabla'){\n        CamposUpdateStr += `${key} = (SELECT ${campo} FROM CteTmp WHERE IdPO = ${Datos[\"IdPO\"]})`\n        CamposUpdateStr += (idx != (Object.keys(Datos).length -1) ) ? ',':' ';\n    }\n    \n})\n//AGREGAMOS CLAUSULA WHERE AL UPDATE\nWhereUpdateStr = ` WHERE IdPO = ${Datos[\"IdPO\"]} `\n\n//COMPLETAR UPDATE\nUpdateStr += CamposUpdateStr + WhereUpdateStr;\n\n//COMPLETAR QUERY\nQryFinal = CteStr+UpdateStr;\n\n\n//msg.payload={NombreTabla,CteStr,CteSelectStr,CamposUpdateStr,WhereUpdateStr,UpdateStr}\nmsg.payload=`ESTE NODO SOLO ES UN A PLANTILLA DEBE MODIFICARSE SEGUN LA IMPLEMENTACION QUE ESTE HACIENDO:\nENTRE AL SUBFLUJO, COPIE EL NODO FUNCION A SU FLUJO Y HAGA LA MODIFICACION AL CODIGO`;\nreturn msg;\n\n\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 474,
        "y": 99,
        "wires": [
            []
        ],
        "info": "CREA EL UPDATE A EJECUTAR PARA ACTUALIZAR ORDENES DE TRABAJO\n *    ** SOLO PROCESA UN REGISTRO**"
    },
    {
        "id": "71e7ff2d.92bde",
        "type": "function",
        "z": "6271978d.4d6ac8",
        "name": "fnExecute",
        "func": "let qry = `EXECUTE ${msg.payload[\"sp_name\"]} `;\nlet params = msg.payload[\"params\"];\n\nif(params){\n    let paramsCount = Object.keys(params).length;\n\nObject.keys(params).forEach((key,idx)=>{\n    //console.log({key})\n    \n    //SI ES STRING HAY QUE AGREGAR COMILLAS\n    switch(typeof(params[key])){\n        case 'string':\n            qry += `@${key} = '${params[key]}'`;\n            break;\n        default: \n            qry += `@${key} = ${params[key]}`;\n            break;\n\n    }\n    //QUITAMOS LA COMA CUANDO ES EL ULITMO PARAMETRO           \n    qry += (idx === (paramsCount - 1)) ? '' : ',';\n\n\n})\n}\n\n\nmsg.payload = qry;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "5666973c.1ac248",
        "type": "MSSQL",
        "z": "22430c84.47da24",
        "mssqlCN": "955d262e.b17988",
        "name": "ASWMSSQL",
        "outField": "payload",
        "returnType": "0",
        "throwErrors": "1",
        "query": "",
        "modeOpt": "",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "msg",
        "paramsOpt": "queryParams",
        "paramsOptType": "msg",
        "params": [],
        "x": 330,
        "y": 100,
        "wires": [
            [
                "fdd14fa2.52b6d"
            ]
        ]
    },
    {
        "id": "fdd14fa2.52b6d",
        "type": "function",
        "z": "22430c84.47da24",
        "name": "revisaExistenDatos",
        "func": "\nif(msg.payload.length > 0){\n    msg.tabla = msg.payload[0].nombretabla\n    msg.keys = msg.payload[0].keys\n    msg.fuc = msg.payload[0].fuc\n    msg.topic = `DELETE FROM ${msg.tabla}`;\n    msg.insert = msg.payload;\n}\nelse{\n    msg = null\n}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 100,
        "wires": [
            [
                "e5eaa744.c421e8"
            ]
        ]
    },
    {
        "id": "6d3cab8d.a91134",
        "type": "sqlite",
        "z": "22430c84.47da24",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 830,
        "y": 60,
        "wires": [
            [
                "21260b64.762834"
            ]
        ]
    },
    {
        "id": "21260b64.762834",
        "type": "change",
        "z": "22430c84.47da24",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "insert",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 980,
        "y": 60,
        "wires": [
            [
                "c341dba7.e59f28"
            ]
        ]
    },
    {
        "id": "4839effa.55167",
        "type": "subflow:6271978d.4d6ac8",
        "z": "22430c84.47da24",
        "name": "",
        "env": [],
        "x": 170,
        "y": 100,
        "wires": [
            [
                "5666973c.1ac248"
            ]
        ]
    },
    {
        "id": "c341dba7.e59f28",
        "type": "subflow:1ae9450.7021cbb",
        "z": "22430c84.47da24",
        "name": "",
        "env": [],
        "x": 1150,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "e5eaa744.c421e8",
        "type": "switch",
        "z": "22430c84.47da24",
        "name": "",
        "property": "keys",
        "propertyType": "msg",
        "rules": [
            {
                "t": "null"
            },
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 670,
        "y": 100,
        "wires": [
            [
                "6d3cab8d.a91134"
            ],
            [
                "883e3f65.ec29b"
            ]
        ]
    },
    {
        "id": "17d0056f.b32dab",
        "type": "comment",
        "z": "22430c84.47da24",
        "name": "Borra e inserta",
        "info": "version 1.0",
        "x": 860,
        "y": 20,
        "wires": []
    },
    {
        "id": "1c1eb822.7fcff8",
        "type": "comment",
        "z": "22430c84.47da24",
        "name": "Insert-Update-Delete",
        "info": "version 2.0\n\nSELECT\n\t  nombretabla = 'ASWLite_CfgConfiguracion'\n\t  ,keys = 'ClaUbicacion,ClaveConfiguracion'\n\t  ,fuc = 'FechaUltimaMod'",
        "x": 880,
        "y": 120,
        "wires": []
    },
    {
        "id": "26eab008.eb606",
        "type": "split",
        "z": "22430c84.47da24",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1010,
        "y": 160,
        "wires": [
            [
                "b67f44b8.849098"
            ]
        ]
    },
    {
        "id": "883e3f65.ec29b",
        "type": "change",
        "z": "22430c84.47da24",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "insert",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 860,
        "y": 160,
        "wires": [
            [
                "26eab008.eb606"
            ]
        ]
    },
    {
        "id": "b67f44b8.849098",
        "type": "function",
        "z": "22430c84.47da24",
        "name": "ver si existe",
        "func": "//guardo el payload en el mensaje\nmsg.record = msg.payload\nlet condicion = {}\n\nmsg.record.keys.split(\",\").forEach((key, idx) => {\n    condicion[key] = msg.record[key] \n})\n\nmsg.payload = {\n                nombreTabla: msg.record.nombretabla,\n                ifExists: 1,\n                condicion\n            }\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1150,
        "y": 160,
        "wires": [
            [
                "173bf6bd.121d89"
            ]
        ]
    },
    {
        "id": "e64eb3d0.6fab5",
        "type": "subflow:1ae9450.7021cbb",
        "z": "22430c84.47da24",
        "name": "",
        "env": [],
        "x": 1230,
        "y": 280,
        "wires": [
            [
                "26bb5d8f.37eca2"
            ]
        ]
    },
    {
        "id": "93a8a187.9f54f",
        "type": "sqlite",
        "z": "22430c84.47da24",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 1470,
        "y": 160,
        "wires": [
            [
                "97c2e4b5.659428"
            ]
        ]
    },
    {
        "id": "da87df5e.e967d",
        "type": "function",
        "z": "22430c84.47da24",
        "name": "crear payload update",
        "func": "delete msg.record.fuc;\nmsg.payload = msg.record\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 240,
        "wires": [
            [
                "db49305e.0fc74"
            ]
        ]
    },
    {
        "id": "173bf6bd.121d89",
        "type": "subflow:54a4792c.863048",
        "z": "22430c84.47da24",
        "name": "",
        "env": [],
        "x": 1320,
        "y": 160,
        "wires": [
            [
                "93a8a187.9f54f"
            ]
        ]
    },
    {
        "id": "97c2e4b5.659428",
        "type": "switch",
        "z": "22430c84.47da24",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "empty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 830,
        "y": 260,
        "wires": [
            [
                "da87df5e.e967d"
            ],
            [
                "76569ded.e948d4"
            ]
        ]
    },
    {
        "id": "76569ded.e948d4",
        "type": "function",
        "z": "22430c84.47da24",
        "name": "crear payload insert",
        "func": "delete msg.record.keys;\ndelete msg.record.fuc;\nmsg.payload = [msg.record]\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 280,
        "wires": [
            [
                "e64eb3d0.6fab5"
            ]
        ]
    },
    {
        "id": "26bb5d8f.37eca2",
        "type": "sqlite",
        "z": "22430c84.47da24",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 1390,
        "y": 280,
        "wires": [
            [
                "54ed5dbf.3d15e4"
            ]
        ]
    },
    {
        "id": "d3079f08.01e69",
        "type": "sqlite",
        "z": "22430c84.47da24",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 1390,
        "y": 240,
        "wires": [
            [
                "54ed5dbf.3d15e4"
            ]
        ]
    },
    {
        "id": "db49305e.0fc74",
        "type": "subflow:e4f0e9b3.dbf928",
        "z": "22430c84.47da24",
        "name": "",
        "env": [],
        "x": 1230,
        "y": 240,
        "wires": [
            [
                "d3079f08.01e69"
            ]
        ]
    },
    {
        "id": "54ed5dbf.3d15e4",
        "type": "join",
        "z": "22430c84.47da24",
        "name": "",
        "mode": "auto",
        "build": "string",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": "false",
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "x": 1530,
        "y": 260,
        "wires": [
            [
                "320d5f3e.dea57"
            ]
        ]
    },
    {
        "id": "a4aa08c2.f7c668",
        "type": "function",
        "z": "22430c84.47da24",
        "name": "crear payload delete",
        "func": "//borra todos los registros no actualizados en la ultima hora\nmsg.topic = `DELETE FROM ${msg.tabla} WHERE ${msg.fuc} < datetime('now','localtime','-1 hour')`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "320d5f3e.dea57",
        "type": "switch",
        "z": "22430c84.47da24",
        "name": "",
        "property": "fuc",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 830,
        "y": 360,
        "wires": [
            [
                "a4aa08c2.f7c668"
            ]
        ]
    },
    {
        "id": "9ab14a55.979fd8",
        "type": "comment",
        "z": "22430c84.47da24",
        "name": "Borra los registros no actualizados en la ultima hora",
        "info": "",
        "x": 1110,
        "y": 360,
        "wires": []
    },
    {
        "id": "5bb4302.36339d",
        "type": "function",
        "z": "54a4792c.863048",
        "name": "FnParseSelect",
        "func": "let valorCampo = null;\nlet query;\nlet validacion = msg.payload;\n\nquery = 'SELECT '\n\nif (validacion.ifExists == 1) {\n    query += '1 AS Existe '\n} else {\n    if (validacion.columnas) {\n        validacion.columnas.forEach((value, idx) => {\n            //SE AGREGA AL QUERY EL LISTADO DE CAMPOS DE LA TABLA\n            query += validacion.columnas.length !== (idx + 1) ? `${value}, ` : `${value} `;\n\n\n        });\n    }\n\n}\n\nquery += `FROM ${validacion.nombreTabla} `\n\nif (validacion.condicion && (Object.keys(validacion.condicion).length > 0)) {\n    query += `WHERE `\n    Object.keys(validacion.condicion).forEach((key, idx) => {\n        valorCampo = (typeof(validacion.condicion[key]) === 'string') ? `'${validacion.condicion[key]}'` : `${validacion.condicion[key]}`;\n        //SE AGREGA AL QUERY EL LISTADO DE CAMPOS DE LA TABLA\n        query += (Object.keys(validacion.condicion).length !== (idx + 1)) ? `${key} = ${valorCampo} AND ` : `${key} = ${valorCampo} `;\n\n    });\n\n}\n\nif(validacion.orden) {\n    query += `ORDER BY `\n        validacion.orden.forEach((value, idx) => {\n            //SE AGREGA AL QUERY EL LISTADO DE CAMPOS DE LA TABLA\n            query += validacion.orden.length !== (idx + 1) ? `${value}, ` : `${value} `;\n\n\n        });\n    }\n\nmsg.topic = query;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 220,
        "y": 60,
        "wires": [
            []
        ],
        "info": "OPs locales"
    },
    {
        "id": "9ccec61f.67c718",
        "type": "comment",
        "z": "3ce020fc.06235",
        "name": "CU162_Pag1_PROCESAR FIN DE CAJA",
        "info": "este proceso debe monitoriar el fin de caja, llenar los datos de finalizacion de la caja actual y actualizar las ordenes producidas y pendientes, y si la orden sigue en proceso se carga la nueva caja en el registro de la misma, si esta terminada se carga a la orden con estatus 2 abriendo el registro de la primera caja y se envia el fin de batch, se debe actualizar la tabla de variables con la caja nueva (y la op obvi), si tiene materia prima se debe descontar lo consumido. tomar en cuenta que la maquina se dtiene al menos 30 minutos para el change over si la ultima aja no se termino no se cuenta.",
        "x": 220,
        "y": 40,
        "wires": []
    },
    {
        "id": "82c2fd5e.ad36f",
        "type": "function",
        "z": "3ce020fc.06235",
        "name": "fnProcFinCaja",
        "func": "var finDeCaja = msg.payload.Valor;\nvar IdComponente = msg.payload.IdComponente\nconst fechaAdm = global.get('FechaAdm');\nconst claTurnoFin = global.get('ClaTurno');\n\n//node.warn(`IdComponente: ${IdComponente}, Valor: ${finDeCaja}`)\n\nvar fechaHoraFinCaja = now();\nvar nombretabla = 'ASWLite_TraOrdenProduccionDet'\n//INICIALIZAMOS EL OBJETO CON EL NOMBRE DE LA TABLA\n    objDetCaja = {nombretabla:nombretabla}\n\n\nif(finDeCaja === true && typeof(IdComponente) === \"number\"){\n    node.warn(\"fnProcFinCaja\")\n    objDetCaja[\"IdComponente\"]=IdComponente\n    objDetCaja[\"FechaFinReal\"]='currentDate';\n    objDetCaja[\"EsTerminado\"] = 1\n    objDetCaja[\"ClaEstatusReplica\"]=1\n    objDetCaja[\"FechaUltimamod\"]='currentDate'\n    //objDetCaja[\"ClaUsuariomod\"]=0\n    objDetCaja[\"NombrePcMod\"]=\"RB\";\n    objDetCaja[\"FechaFinAdm\"] = fechaAdm;\n    objDetCaja[\"ClaTurnoFin\"] = claTurnoFin;\n    \n\n//DEFINIR PAYLOAD\n    msg.payload = [objDetCaja];\n    \n}else{\n    msg.payload = null\n}\n\nreturn msg;\n\nfunction now(){\n    let date = new Date();\n    let strdate = date.toISOString();\n    return strdate\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 496,
        "wires": [
            [
                "490b89a4.c88c98"
            ]
        ]
    },
    {
        "id": "982b0e25.41172",
        "type": "function",
        "z": "3ce020fc.06235",
        "name": "fnUpdateFinCaja",
        "func": "let Datos = msg.payload //[{\"nombretabla\":\"ASWLite_TraOrdenProduccion\",\"ClaUbicacion\":\"68\",\"IdPO\":3,\"IdCelda\":\"1\",\"ClaArticulo\":\"611645\",\"ClaveArticulo\":\"611645\",\"Orden\":\"3\",\"ClaEstatus\":\"1\",\"BajaLogica\":\"0\",\"ClaUsuarioMod\":\"0\",\"NombrePcMod\":\"302NGALAZ\",\"FechaUltimaMod\":\"2020-03-05T01:43:57.713\"}]\nif(!Array.isArray(Datos)){\n    node.warn(\"fnUpdateFinCaja \"+\"El payload debe ser un array\")\n}\nDatos = Datos[0];\nlet NombreTabla = Datos.nombretabla;\nlet CteStr = 'WITH CteTmp (';\nlet CteSelectStr = 'AS ( SELECT '\nlet UpdateStr = `UPDATE ${NombreTabla} SET `;\nlet CamposUpdateStr = '';\nlet WhereUpdateStr = ''\nlet QryFinal = '';\n//LISTA DE CAMPOS DE LA CTE\nObject.keys(Datos).forEach((key,idx) => {\n   \n    if(key != 'nombretabla'){\n        CteStr += key,idx;\n        CteStr += (idx != (Object.keys(Datos).length -1) ) ? ',':') ';\n        CteSelectStr += (Datos[key] == 'currentDate') ? \"datetime('now','localtime')\" : (typeof(Datos[key]) == 'string' && Datos[key] != 'currentDate') ? `'${Datos[key]}'` : `${Datos[key]}`;\n        CteSelectStr += (idx != (Object.keys(Datos).length -1) ) ? ',':') ';\n    }\n});\n\n//COMPLETAMOS STRING PARA CREAR CTE\nCteStr += CteSelectStr;\n\nObject.keys(Datos).forEach((key,idx) => {\n    let campo = key;\n   \n    let valor = (typeof(Datos[key]) == 'string') ? `'${Datos[key]}'` : Datos[key];\n    if(campo != 'nombretabla'){\n        CamposUpdateStr += `${key} = (SELECT ${campo} FROM CteTmp )`\n        CamposUpdateStr += (idx != (Object.keys(Datos).length -1) ) ? ',':' ';\n    }\n    \n})\n//AGREGAMOS CLAUSULA WHERE AL UPDATE\nWhereUpdateStr = ` WHERE IdComponente = ${Datos[\"IdComponente\"]} \nAND idUnidad IN (SELECT idUnidadCaja FROM ASWLite_VariablesProduccion WHERE IdComponente =  ${Datos[\"IdComponente\"]} )\nAND EsTerminado = 0`\n\n//COMPLETAR UPDATE\nUpdateStr += CamposUpdateStr + WhereUpdateStr;\n\n//COMPLETAR QUERY\nQryFinal = CteStr+UpdateStr;\n\n\n//msg.payload={NombreTabla,CteStr,CteSelectStr,CamposUpdateStr,WhereUpdateStr,UpdateStr}\nmsg.topic=QryFinal;\n//node.warn(\"1.-Actualizando ASWLite_TraOrdenProduccionDet para terminar caja\")\nreturn msg;\n\n\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 651,
        "y": 496,
        "wires": [
            [
                "d7f3e51e.f0e238"
            ]
        ],
        "info": "CREA EL UPDATE A EJECUTAR PARA ACTUALIZAR ORDENES DE TRABAJO\n *    ** SOLO PROCESA UN REGISTRO**"
    },
    {
        "id": "c3a345a7.8c00c8",
        "type": "function",
        "z": "3ce020fc.06235",
        "name": "fnUpdateEncabezadoOp",
        "func": "//AUMENTAMOS EN 1 LAS CAJAS PRODUCIDAS DE LA OP REGISTRADA PRA EL \n//COMPONENTE EN LA TABLA DE VARIABLES\n\nmsg.topic = `UPDATE ASWLite_TraOrdenProduccion\nSET UnidadesProducidas = COALESCE(UnidadesProducidas,0) + 1\n    ,ClaEstatusReplica=1\n    ,FechaUltimaMod = strftime('%Y-%m-%d %H:%M:%S', datetime('now','localtime'))\nWHERE IdPO = (SELECT IdPO FROM ASWLite_VariablesProduccion WHERE IdComponente = ${msg.IdComponente})`\n\n//node.warn('2.-ACTUALIZAMOS UNIDADES PRODUCIDAS EN EL ENCABEZADO')\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1091,
        "y": 496,
        "wires": [
            [
                "a16be082.99902"
            ]
        ]
    },
    {
        "id": "eb1721b3.687e1",
        "type": "http request",
        "z": "3ce020fc.06235",
        "name": "CurrentProductionOrder_Sel",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://localhost:18800/sqlite/CU151_Pag1_CurrentProductionOrder_Sel",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 305,
        "y": 596,
        "wires": [
            [
                "6349843d.6a62fc"
            ]
        ]
    },
    {
        "id": "dcb291e8.3110a",
        "type": "link out",
        "z": "3ce020fc.06235",
        "name": "1",
        "links": [
            "a19dfd2c.cf0f2"
        ],
        "x": 1436,
        "y": 496,
        "wires": []
    },
    {
        "id": "a19dfd2c.cf0f2",
        "type": "link in",
        "z": "3ce020fc.06235",
        "name": "",
        "links": [
            "dcb291e8.3110a"
        ],
        "x": 140,
        "y": 596,
        "wires": [
            [
                "eb1721b3.687e1"
            ]
        ]
    },
    {
        "id": "6349843d.6a62fc",
        "type": "function",
        "z": "3ce020fc.06235",
        "name": "",
        "func": "var result = JSON.parse(msg.payload)\nvar IdPO=result[0]?result[0].IdPO:null\nmsg.topic = `SELECT 1 FROM ASWLite_VariablesProduccion\nWHERE IdPO = ${IdPO}\nAND IdComponente = ${msg.IdComponente}`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 515,
        "y": 596,
        "wires": [
            [
                "9697f0a8.f139a"
            ]
        ]
    },
    {
        "id": "9697f0a8.f139a",
        "type": "sqlite",
        "z": "3ce020fc.06235",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 655,
        "y": 596,
        "wires": [
            [
                "4bfad97c.fdb368"
            ]
        ]
    },
    {
        "id": "4bfad97c.fdb368",
        "type": "switch",
        "z": "3ce020fc.06235",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "empty"
            },
            {
                "t": "nempty"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 795,
        "y": 596,
        "wires": [
            [
                "1fd5aee.90c6f51"
            ],
            [
                "9e2b5f98.10fa3"
            ]
        ]
    },
    {
        "id": "deee6103.91622",
        "type": "comment",
        "z": "3ce020fc.06235",
        "name": "Revisar que la orden actual sea igual a la tabla de variables, sino se envai fin de batch",
        "info": "",
        "x": 429,
        "y": 556,
        "wires": []
    },
    {
        "id": "8b128683.156778",
        "type": "comment",
        "z": "3ce020fc.06235",
        "name": "Iniciar caja nueva",
        "info": "",
        "x": 203,
        "y": 646,
        "wires": []
    },
    {
        "id": "9e2b5f98.10fa3",
        "type": "link out",
        "z": "3ce020fc.06235",
        "name": "2",
        "links": [
            "918c943d.48d408"
        ],
        "x": 2220,
        "y": 602,
        "wires": []
    },
    {
        "id": "11cabc0a.d51484",
        "type": "function",
        "z": "3ce020fc.06235",
        "name": "InsertCajaNueva",
        "func": "\nmsg.topic = `INSERT INTO ASWLite_TraOrdenProduccionDet(ClaUbicacion,IdPO,IdComponente,IdUnidad,EsTerminado,EsAdicional,FechaInicioReal,ClaEstatusReplica,BajaLogica,ClaUsuarioMod,NombrePcMod,FechaUltimaMod,IdMateriaPrimaInicio,FechaInicioAdm,ClaTurno)\n    SELECT \n        (SELECT Valor1 FROM ASWLite_CfgConfiguracion WHERE ClaveConfiguracion = 'UBI_DEFAULT') as ClaUbicacion\n        , var.IdPO\n        ,var.IdComponente\n        ,(SELECT (COALESCE(MAX(UnidadesProducidas),0) + 1 ) FROM ASWLite_TraOrdenProduccion WHERE IdPO = var.IdPO) as IdUnidad\n        ,0 as EsTerminado\n        ,0 as EsAdicional\n        ,datetime('now','localtime') as FechaInicioReal\n        ,1 as ClaEstatusReplica\n        ,0 as BajaLogica\n        ,${global.get('ClaUsuarioMod')||104} as ClaUsuarioMod\n        ,'RB' as NombrePcMod\n        ,datetime('now','localtime') as FechaUltimaMod\n        ,(SELECT IdBarCode FROM ASWLite_TraMateriaPrima WHERE IdPO = var.IdPO and EsEnUso = 1) as IdMateriaPrimaInicio\n        ,Var.FechaAdministrativa as FechaInicioAdm\n        ,Var.ClaTurno as ClaTurno\n    FROM ASWLite_VariablesProduccion Var\n    WHERE var.idcomponente = ${msg.IdComponente}\n        AND var.IdPO is not null`\n//node.warn('3.-AGREGAR CAJA NUEVA')\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 313,
        "y": 686,
        "wires": [
            [
                "9e16e9d1.7f9768"
            ]
        ]
    },
    {
        "id": "918c943d.48d408",
        "type": "link in",
        "z": "3ce020fc.06235",
        "name": "",
        "links": [
            "9e2b5f98.10fa3"
        ],
        "x": 138,
        "y": 686,
        "wires": [
            [
                "11cabc0a.d51484"
            ]
        ]
    },
    {
        "id": "d7f3e51e.f0e238",
        "type": "sqlite",
        "z": "3ce020fc.06235",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 831,
        "y": 496,
        "wires": [
            [
                "c3a345a7.8c00c8"
            ]
        ]
    },
    {
        "id": "a16be082.99902",
        "type": "sqlite",
        "z": "3ce020fc.06235",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 1311,
        "y": 496,
        "wires": [
            [
                "dcb291e8.3110a"
            ]
        ]
    },
    {
        "id": "9e16e9d1.7f9768",
        "type": "sqlite",
        "z": "3ce020fc.06235",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 473,
        "y": 686,
        "wires": [
            [
                "16a71054.9d662"
            ]
        ]
    },
    {
        "id": "16a71054.9d662",
        "type": "function",
        "z": "3ce020fc.06235",
        "name": "CajaNuevaTblVariables",
        "func": "msg.topic=`WITH CteTmp (IdUnidad) AS ( SELECT MAX(IdUnidad) as IdUnidad FROM ASWLite_TraOrdenProduccionDet\n                                        WHERE idComponente = ${msg.IdComponente}\n                                        AND IdPO in (SELECT IdPO FROM ASWLite_VariablesProduccion WHERE IdComponente = ${msg.IdComponente}))\nUPDATE ASWLite_VariablesProduccion \nSET IdUnidadCaja = (SELECT IdUnidad FROM CteTmp )\nWHERE IdComponente = ${msg.IdComponente};`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 673,
        "y": 686,
        "wires": [
            [
                "41af7992.fbd918"
            ]
        ]
    },
    {
        "id": "41af7992.fbd918",
        "type": "sqlite",
        "z": "3ce020fc.06235",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 865,
        "y": 686,
        "wires": [
            [
                "dd093b9b.0c0a68"
            ]
        ]
    },
    {
        "id": "369b7ac3.efd5a6",
        "type": "comment",
        "z": "3ce020fc.06235",
        "name": "Actualizar Caja con su informacion de terminacion.",
        "info": "",
        "x": 310,
        "y": 456,
        "wires": []
    },
    {
        "id": "1fd5aee.90c6f51",
        "type": "function",
        "z": "3ce020fc.06235",
        "name": "IndicarElComponente",
        "func": "msg.payload = {IdComponente:msg.IdComponente}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 975,
        "y": 556,
        "wires": [
            [
                "9e2b5f98.10fa3"
            ]
        ]
    },
    {
        "id": "b37aed08.86323",
        "type": "comment",
        "z": "3ce020fc.06235",
        "name": "Actualizar encabezado de OP",
        "info": "",
        "x": 680,
        "y": 456,
        "wires": []
    },
    {
        "id": "490b89a4.c88c98",
        "type": "switch",
        "z": "3ce020fc.06235",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 450,
        "y": 496,
        "wires": [
            [
                "982b0e25.41172"
            ]
        ]
    },
    {
        "id": "ac6b0044.fb62d",
        "type": "function",
        "z": "3ce020fc.06235",
        "name": "guardarIdComponente",
        "func": "var IdComponente = msg.payload.IdComponente\n\n//DEFINIMOS EN EL MENSAJE EL IDCOMPONENTE PARA USAR POSTERIORMENTE EN EL FLUJO\nmsg.IdComponente = IdComponente\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 100,
        "wires": [
            [
                "e1db8fea.dad4"
            ]
        ]
    },
    {
        "id": "62a4f640.e080c8",
        "type": "link out",
        "z": "3ce020fc.06235",
        "name": "recibeFinCaja",
        "links": [
            "f103e7e5.7b6688",
            "61112560.5c571c"
        ],
        "x": 1180,
        "y": 180,
        "wires": [],
        "l": true
    },
    {
        "id": "61112560.5c571c",
        "type": "link in",
        "z": "3ce020fc.06235",
        "name": "",
        "links": [
            "62a4f640.e080c8"
        ],
        "x": 135,
        "y": 496,
        "wires": [
            [
                "82c2fd5e.ad36f"
            ]
        ]
    },
    {
        "id": "f103e7e5.7b6688",
        "type": "link in",
        "z": "3ce020fc.06235",
        "name": "",
        "links": [
            "62a4f640.e080c8"
        ],
        "x": 135,
        "y": 300,
        "wires": [
            [
                "1158c18e.41432e"
            ]
        ]
    },
    {
        "id": "dd3a149a.740208",
        "type": "comment",
        "z": "3ce020fc.06235",
        "name": "Descontar Materia Prima",
        "info": "",
        "x": 230,
        "y": 260,
        "wires": []
    },
    {
        "id": "c92e19ca.66cb18",
        "type": "function",
        "z": "3ce020fc.06235",
        "name": "BuscarMPEnUso",
        "func": "msg.topic = `\nSELECT \n'ASWLite_TraMateriaPrima' as nombretabla \n,IdBarcode\n,CASE WHEN COALESCE(Peso,0) = 0 THEN COALESCE(PesoInicial,0) - comp.cantidad ELSE Peso - comp.cantidad END as PesoNuevo\n,COALESCE(Peso,0) as Peso\n,comp.cantidad - ABS(comp.cantidad - COALESCE(Peso,PesoInicial)) Remanente\n,datetime('now','localtime') as FechaUltimaMod\n,var.IdUnidadCaja\n,var.IdPO\n,comp.cantidad\n,COALESCE(mp.PesoInicial,0) as PesoInicial\nFROM ASWLite_VariablesProduccion var\nJOIN ASWLite_TraOrdenProduccion enc\n    ON var.IdPO = enc.IdPO\nJOIN ASWLite_CatArticuloComposicion comp\n    ON  enc.ClaArticulo = comp.ClaArticulo\n    AND comp.EsAlambre = 1\nJOIN ASWLite_TraMateriaPrima mp\n    ON mp.IdPO = var.IdPO\nWHERE Var.IdComponente = ${msg.IdComponente}\nAND mp.EsEnUso = 1`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 630,
        "y": 300,
        "wires": [
            [
                "7fe6fcd8.661074"
            ]
        ]
    },
    {
        "id": "7fe6fcd8.661074",
        "type": "sqlite",
        "z": "3ce020fc.06235",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 790,
        "y": 300,
        "wires": [
            [
                "8e663453.59b888"
            ]
        ]
    },
    {
        "id": "15ae3f47.b75401",
        "type": "switch",
        "z": "3ce020fc.06235",
        "name": "RevisarPesoNuevo",
        "property": "payload[0].PesoNuevo",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gte",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "lt",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 1370,
        "y": 300,
        "wires": [
            [
                "8e8527ca.0d1dc8"
            ],
            [
                "4d1e065a.500f08"
            ]
        ]
    },
    {
        "id": "8e8527ca.0d1dc8",
        "type": "switch",
        "z": "3ce020fc.06235",
        "name": "RevisarSiTerminaMP",
        "property": "payload[0].PesoNuevo",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "gt",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1620,
        "y": 232,
        "wires": [
            [
                "7c33efce.b541f"
            ],
            [
                "36188aa7.e6b6f6"
            ]
        ],
        "outputLabels": [
            "TerminoMP",
            "NoTerminoMP"
        ]
    },
    {
        "id": "7c33efce.b541f",
        "type": "function",
        "z": "3ce020fc.06235",
        "name": "ActualizaobjMP",
        "func": "var data = msg.payload[0]\n\nvar objMateriaPrima = [{\n     nombretabla: data.nombretabla\n    ,IdBarcode: data.IdBarcode\n    ,Peso: data.PesoNuevo\n    ,esConsumido: 1\n    ,esEnUso:0\n    ,ClaEstatusReplica:1\n    ,ClaEventoConsume:1\n    ,FechaUltimaMod: data.FechaUltimaMod\n}]\n\nmsg.payload = objMateriaPrima;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1880,
        "y": 160,
        "wires": [
            [
                "171cb7cc.3cf058"
            ]
        ]
    },
    {
        "id": "171cb7cc.3cf058",
        "type": "function",
        "z": "3ce020fc.06235",
        "name": "fnParseUpdate",
        "func": "let Datos = msg.payload //[{\"nombretabla\":\"ASWLite_TraOrdenProduccion\",\"ClaUbicacion\":\"68\",\"IdPO\":3,\"IdCelda\":\"1\",\"ClaArticulo\":\"611645\",\"ClaveArticulo\":\"611645\",\"Orden\":\"3\",\"ClaEstatus\":\"1\",\"BajaLogica\":\"0\",\"ClaUsuarioMod\":\"0\",\"NombrePcMod\":\"302NGALAZ\",\"FechaUltimaMod\":\"2020-03-05T01:43:57.713\"}]\nDatos = Datos[0];\nlet NombreTabla = Datos.nombretabla;\nlet CteStr = 'WITH CteTmp (';\nlet CteSelectStr = 'AS ( SELECT '\nlet UpdateStr = `UPDATE ${NombreTabla} SET `;\nlet CamposUpdateStr = '';\nlet WhereUpdateStr = ''\nlet QryFinal = '';\n//LISTA DE CAMPOS DE LA CTE\nObject.keys(Datos).forEach((key,idx) => {\n    if(key != 'nombretabla'){\n        CteStr += key,idx;\n        CteStr += (idx != (Object.keys(Datos).length -1) ) ? ',':') ';\n        CteSelectStr += (typeof(Datos[key]) == 'string') ? `'${Datos[key]}'` : `${Datos[key]}`;\n        CteSelectStr += (idx != (Object.keys(Datos).length -1) ) ? ',':') ';\n    }\n});\n\n//COMPLETAMOS STRING PARA CREAR CTE\nCteStr += CteSelectStr;\n\nObject.keys(Datos).forEach((key,idx) => {\n    let campo = key;\n    let valor = (typeof(Datos[key]) == 'string') ? `'${Datos[key]}'` : Datos[key];\n    if(campo != 'nombretabla'){\n        CamposUpdateStr += `${key} = (SELECT ${campo} FROM CteTmp )`\n        CamposUpdateStr += (idx != (Object.keys(Datos).length -1) ) ? ',':' ';\n    }\n    \n})\n//AGREGAMOS CLAUSULA WHERE AL UPDATE\nWhereUpdateStr = ` WHERE IdBarcode =  ${Datos[\"IdBarcode\"]}  `\n\n//COMPLETAR UPDATE\nUpdateStr += CamposUpdateStr + WhereUpdateStr;\n\n//COMPLETAR QUERY\nQryFinal = CteStr+UpdateStr;\n\n\n//msg.payload={NombreTabla,CteStr,CteSelectStr,CamposUpdateStr,WhereUpdateStr,UpdateStr}\nmsg.topic=QryFinal;\nreturn msg;\n\n\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2060,
        "y": 160,
        "wires": [
            [
                "160e2d5.9dbd9d3"
            ]
        ],
        "info": "CREA EL UPDATE A EJECUTAR PARA ACTUALIZAR ORDENES DE TRABAJO\n *    ** SOLO PROCESA UN REGISTRO**"
    },
    {
        "id": "160e2d5.9dbd9d3",
        "type": "sqlite",
        "z": "3ce020fc.06235",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 2210,
        "y": 160,
        "wires": [
            [
                "f9fc43df.063fb"
            ]
        ]
    },
    {
        "id": "f9fc43df.063fb",
        "type": "function",
        "z": "3ce020fc.06235",
        "name": "BuscarActivarSiguienteMP",
        "func": "msg.topic = `\nSELECT  'ASWLite_TraMateriaPrima' as nombretabla\n        ,mat1.IdPO\n        ,mat1.IdBarcode\n        ,1 as EsEnUso\n        ,mat1.Peso \n        ,1 as ClaEstatusReplica\n        ,1 as ClaEventoUse\n        ,date('now','localtime') as FechaUltimamod\n      FROM ASWLite_TraMateriaPrima mat1\n      JOIN  ASWLite_VariablesProduccion var1\n      ON var1.IdPO = mat1.IdPO\n      WHERE EsEnUso = 0\n      AND COALESCE(mat1.PesoInicial,0) > 0\n      AND COALESCE(EsConsumido,0) = 0\n      AND var1.IdComponente = ${msg.IdComponente}\n      ORDER BY IdBarcode ASC\n      LIMIT 1`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2400,
        "y": 160,
        "wires": [
            [
                "57e1595f.a326e8"
            ]
        ]
    },
    {
        "id": "57e1595f.a326e8",
        "type": "sqlite",
        "z": "3ce020fc.06235",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 2590,
        "y": 160,
        "wires": [
            [
                "5753b266.99a20c"
            ]
        ]
    },
    {
        "id": "4ff1d9c4.8936d8",
        "type": "function",
        "z": "3ce020fc.06235",
        "name": "fnParseUpdate",
        "func": "let Datos = msg.payload //[{\"nombretabla\":\"ASWLite_TraOrdenProduccion\",\"ClaUbicacion\":\"68\",\"IdPO\":3,\"IdCelda\":\"1\",\"ClaArticulo\":\"611645\",\"ClaveArticulo\":\"611645\",\"Orden\":\"3\",\"ClaEstatus\":\"1\",\"BajaLogica\":\"0\",\"ClaUsuarioMod\":\"0\",\"NombrePcMod\":\"302NGALAZ\",\"FechaUltimaMod\":\"2020-03-05T01:43:57.713\"}]\nDatos = Datos[0];\nlet NombreTabla = Datos.nombretabla;\nlet CteStr = 'WITH CteTmp (';\nlet CteSelectStr = 'AS ( SELECT '\nlet UpdateStr = `UPDATE ${NombreTabla} SET `;\nlet CamposUpdateStr = '';\nlet WhereUpdateStr = ''\nlet QryFinal = '';\n//LISTA DE CAMPOS DE LA CTE\nObject.keys(Datos).forEach((key,idx) => {\n    if(key != 'nombretabla'){\n        CteStr += key,idx;\n        CteStr += (idx != (Object.keys(Datos).length -1) ) ? ',':') ';\n        CteSelectStr += (typeof(Datos[key]) == 'string') ? `'${Datos[key]}'` : `${Datos[key]}`;\n        CteSelectStr += (idx != (Object.keys(Datos).length -1) ) ? ',':') ';\n    }\n});\n\n//COMPLETAMOS STRING PARA CREAR CTE\nCteStr += CteSelectStr;\n\nObject.keys(Datos).forEach((key,idx) => {\n    let campo = key;\n    let valor = (typeof(Datos[key]) == 'string') ? `'${Datos[key]}'` : Datos[key];\n    if(campo != 'nombretabla'){\n        CamposUpdateStr += `${key} = (SELECT ${campo} FROM CteTmp )`\n        CamposUpdateStr += (idx != (Object.keys(Datos).length -1) ) ? ',':' ';\n    }\n    \n})\n//AGREGAMOS CLAUSULA WHERE AL UPDATE\nWhereUpdateStr = ` WHERE IdBarcode =  ${Datos[\"IdBarcode\"]}  `\n\n//COMPLETAR UPDATE\nUpdateStr += CamposUpdateStr + WhereUpdateStr;\n\n//COMPLETAR QUERY\nQryFinal = CteStr+UpdateStr;\n\n\n//msg.payload={NombreTabla,CteStr,CteSelectStr,CamposUpdateStr,WhereUpdateStr,UpdateStr}\nmsg.topic=QryFinal;\nreturn msg;\n\n\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 3020,
        "y": 160,
        "wires": [
            [
                "2a670665.c4aeba"
            ]
        ],
        "info": "CREA EL UPDATE A EJECUTAR PARA ACTUALIZAR ORDENES DE TRABAJO\n *    ** SOLO PROCESA UN REGISTRO**"
    },
    {
        "id": "2a670665.c4aeba",
        "type": "sqlite",
        "z": "3ce020fc.06235",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 3190,
        "y": 160,
        "wires": [
            [
                "dd0fd05f.3e46"
            ]
        ]
    },
    {
        "id": "36188aa7.e6b6f6",
        "type": "function",
        "z": "3ce020fc.06235",
        "name": "ActualizaobjMP",
        "func": "var data = msg.payload[0]\n\nvar objMateriaPrima = [{\n     nombretabla: data.nombretabla\n    ,IdBarcode: data.IdBarcode\n    ,Peso: data.PesoNuevo\n    ,ClaEstatusReplica:1\n    ,FechaUltimaMod: data.FechaUltimaMod\n}]\n\nmsg.payload = objMateriaPrima;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1880,
        "y": 240,
        "wires": [
            [
                "699d42ec.5be2ec"
            ]
        ]
    },
    {
        "id": "699d42ec.5be2ec",
        "type": "function",
        "z": "3ce020fc.06235",
        "name": "fnParseUpdate",
        "func": "let Datos = msg.payload //[{\"nombretabla\":\"ASWLite_TraOrdenProduccion\",\"ClaUbicacion\":\"68\",\"IdPO\":3,\"IdCelda\":\"1\",\"ClaArticulo\":\"611645\",\"ClaveArticulo\":\"611645\",\"Orden\":\"3\",\"ClaEstatus\":\"1\",\"BajaLogica\":\"0\",\"ClaUsuarioMod\":\"0\",\"NombrePcMod\":\"302NGALAZ\",\"FechaUltimaMod\":\"2020-03-05T01:43:57.713\"}]\nDatos = Datos[0];\nlet NombreTabla = Datos.nombretabla;\nlet CteStr = 'WITH CteTmp (';\nlet CteSelectStr = 'AS ( SELECT '\nlet UpdateStr = `UPDATE ${NombreTabla} SET `;\nlet CamposUpdateStr = '';\nlet WhereUpdateStr = ''\nlet QryFinal = '';\n//LISTA DE CAMPOS DE LA CTE\nObject.keys(Datos).forEach((key,idx) => {\n    if(key != 'nombretabla'){\n        CteStr += key,idx;\n        CteStr += (idx != (Object.keys(Datos).length -1) ) ? ',':') ';\n        CteSelectStr += (typeof(Datos[key]) == 'string') ? `'${Datos[key]}'` : `${Datos[key]}`;\n        CteSelectStr += (idx != (Object.keys(Datos).length -1) ) ? ',':') ';\n    }\n});\n\n//COMPLETAMOS STRING PARA CREAR CTE\nCteStr += CteSelectStr;\n\nObject.keys(Datos).forEach((key,idx) => {\n    let campo = key;\n    let valor = (typeof(Datos[key]) == 'string') ? `'${Datos[key]}'` : Datos[key];\n    if(campo != 'nombretabla'){\n        CamposUpdateStr += `${key} = (SELECT ${campo} FROM CteTmp )`\n        CamposUpdateStr += (idx != (Object.keys(Datos).length -1) ) ? ',':' ';\n    }\n    \n})\n//AGREGAMOS CLAUSULA WHERE AL UPDATE\nWhereUpdateStr = ` WHERE IdBarcode =  ${Datos[\"IdBarcode\"]}  `\n\n//COMPLETAR UPDATE\nUpdateStr += CamposUpdateStr + WhereUpdateStr;\n\n//COMPLETAR QUERY\nQryFinal = CteStr+UpdateStr;\n\n\n//msg.payload={NombreTabla,CteStr,CteSelectStr,CamposUpdateStr,WhereUpdateStr,UpdateStr}\nmsg.topic=QryFinal;\nreturn msg;\n\n\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 2060,
        "y": 240,
        "wires": [
            [
                "df7f8d02.15559"
            ]
        ],
        "info": "CREA EL UPDATE A EJECUTAR PARA ACTUALIZAR ORDENES DE TRABAJO\n *    ** SOLO PROCESA UN REGISTRO**"
    },
    {
        "id": "df7f8d02.15559",
        "type": "sqlite",
        "z": "3ce020fc.06235",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 2210,
        "y": 240,
        "wires": [
            [
                "dd0fd05f.3e46"
            ]
        ]
    },
    {
        "id": "e3d7a4aa.868858",
        "type": "function",
        "z": "3ce020fc.06235",
        "name": "ActualizaobjMP",
        "func": "var data = msg.payload[0]\n\nvar objMateriaPrima = [{\n     nombretabla: data.nombretabla\n    ,IdBarcode: data.IdBarcode\n    ,Peso: data.Peso - data.Remanente\n    ,PesoFinal: data.Peso - data.Remanente\n    ,EsEnUso: 0\n    ,EsConsumido: 1\n    ,ClaEstatusReplica:1\n    ,ClaEventoConsume:1\n    ,FechaUltimaMod: data.FechaUltimaMod\n}]\n\nmsg.payload = objMateriaPrima;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1600,
        "y": 340,
        "wires": [
            [
                "321ae81e.33a4c8"
            ]
        ]
    },
    {
        "id": "321ae81e.33a4c8",
        "type": "function",
        "z": "3ce020fc.06235",
        "name": "fnParseUpdate",
        "func": "let Datos = msg.payload //[{\"nombretabla\":\"ASWLite_TraOrdenProduccion\",\"ClaUbicacion\":\"68\",\"IdPO\":3,\"IdCelda\":\"1\",\"ClaArticulo\":\"611645\",\"ClaveArticulo\":\"611645\",\"Orden\":\"3\",\"ClaEstatus\":\"1\",\"BajaLogica\":\"0\",\"ClaUsuarioMod\":\"0\",\"NombrePcMod\":\"302NGALAZ\",\"FechaUltimaMod\":\"2020-03-05T01:43:57.713\"}]\nDatos = Datos[0];\nlet NombreTabla = Datos.nombretabla;\nlet CteStr = 'WITH CteTmp (';\nlet CteSelectStr = 'AS ( SELECT '\nlet UpdateStr = `UPDATE ${NombreTabla} SET `;\nlet CamposUpdateStr = '';\nlet WhereUpdateStr = ''\nlet QryFinal = '';\n//LISTA DE CAMPOS DE LA CTE\nObject.keys(Datos).forEach((key,idx) => {\n    if(key != 'nombretabla'){\n        CteStr += key,idx;\n        CteStr += (idx != (Object.keys(Datos).length -1) ) ? ',':') ';\n        CteSelectStr += (typeof(Datos[key]) == 'string') ? `'${Datos[key]}'` : `${Datos[key]}`;\n        CteSelectStr += (idx != (Object.keys(Datos).length -1) ) ? ',':') ';\n    }\n});\n\n//COMPLETAMOS STRING PARA CREAR CTE\nCteStr += CteSelectStr;\n\nObject.keys(Datos).forEach((key,idx) => {\n    let campo = key;\n    let valor = (typeof(Datos[key]) == 'string') ? `'${Datos[key]}'` : Datos[key];\n    if(campo != 'nombretabla'){\n        CamposUpdateStr += `${key} = (SELECT ${campo} FROM CteTmp )`\n        CamposUpdateStr += (idx != (Object.keys(Datos).length -1) ) ? ',':' ';\n    }\n    \n})\n//AGREGAMOS CLAUSULA WHERE AL UPDATE\nWhereUpdateStr = ` WHERE IdBarcode =  ${Datos[\"IdBarcode\"]}  `\n\n//COMPLETAR UPDATE\nUpdateStr += CamposUpdateStr + WhereUpdateStr;\n\n//COMPLETAR QUERY\nQryFinal = CteStr+UpdateStr;\n\n\n//msg.payload={NombreTabla,CteStr,CteSelectStr,CamposUpdateStr,WhereUpdateStr,UpdateStr}\nmsg.topic=QryFinal;\nreturn msg;\n\n\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1780,
        "y": 340,
        "wires": [
            [
                "339241c5.8b38ee"
            ]
        ],
        "info": "CREA EL UPDATE A EJECUTAR PARA ACTUALIZAR ORDENES DE TRABAJO\n *    ** SOLO PROCESA UN REGISTRO**"
    },
    {
        "id": "339241c5.8b38ee",
        "type": "sqlite",
        "z": "3ce020fc.06235",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 1950,
        "y": 340,
        "wires": [
            [
                "99c31f30.fda92"
            ]
        ]
    },
    {
        "id": "99c31f30.fda92",
        "type": "function",
        "z": "3ce020fc.06235",
        "name": "BuscarActivarSiguienteMP",
        "func": "msg.topic = `\nSELECT  'ASWLite_TraMateriaPrima' as nombretabla\n        ,mat1.IdPO\n        ,mat1.IdBarcode\n        ,1 as EsEnUso\n        ,mat1.PesoInicial - (${msg.Cantidad} - ${msg.Remanente}) as Peso\n        ,mat1.PesoInicial - (${msg.Cantidad} - ${msg.Remanente}) as PesoFinal\n        ,1 as ClaEstatusReplica\n        ,1 as ClaEventoUse\n        ,datetime('now','localhost') as FechaUltimamod\n      FROM ASWLite_TraMateriaPrima mat1\n      JOIN  ASWLite_VariablesProduccion var1\n      ON var1.IdPO = mat1.IdPO\n      WHERE EsEnUso = 0\n      AND COALESCE(PesoInicial,0) > 0 \n      AND COALESCE(EsConsumido,0) = 0\n      AND var1.IdComponente = ${msg.IdComponente}\n      ORDER BY IdBarcode ASC\n      LIMIT 1`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 2160,
        "y": 340,
        "wires": [
            [
                "23894514.8d148a"
            ]
        ]
    },
    {
        "id": "23894514.8d148a",
        "type": "sqlite",
        "z": "3ce020fc.06235",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 2370,
        "y": 340,
        "wires": [
            [
                "f041dac9.2cdda8"
            ]
        ]
    },
    {
        "id": "d09ed4d5.d908d8",
        "type": "function",
        "z": "3ce020fc.06235",
        "name": "fnParseUpdate",
        "func": "let Datos = msg.payload //[{\"nombretabla\":\"ASWLite_TraOrdenProduccion\",\"ClaUbicacion\":\"68\",\"IdPO\":3,\"IdCelda\":\"1\",\"ClaArticulo\":\"611645\",\"ClaveArticulo\":\"611645\",\"Orden\":\"3\",\"ClaEstatus\":\"1\",\"BajaLogica\":\"0\",\"ClaUsuarioMod\":\"0\",\"NombrePcMod\":\"302NGALAZ\",\"FechaUltimaMod\":\"2020-03-05T01:43:57.713\"}]\nDatos = Datos[0];\nlet NombreTabla = Datos.nombretabla;\nlet CteStr = 'WITH CteTmp (';\nlet CteSelectStr = 'AS ( SELECT '\nlet UpdateStr = `UPDATE ${NombreTabla} SET `;\nlet CamposUpdateStr = '';\nlet WhereUpdateStr = ''\nlet QryFinal = '';\n//LISTA DE CAMPOS DE LA CTE\nObject.keys(Datos).forEach((key,idx) => {\n    if(key != 'nombretabla'){\n        CteStr += key,idx;\n        CteStr += (idx != (Object.keys(Datos).length -1) ) ? ',':') ';\n        CteSelectStr += (typeof(Datos[key]) == 'string') ? `'${Datos[key]}'` : `${Datos[key]}`;\n        CteSelectStr += (idx != (Object.keys(Datos).length -1) ) ? ',':') ';\n    }\n});\n\n//COMPLETAMOS STRING PARA CREAR CTE\nCteStr += CteSelectStr;\n\nObject.keys(Datos).forEach((key,idx) => {\n    let campo = key;\n    let valor = (typeof(Datos[key]) == 'string') ? `'${Datos[key]}'` : Datos[key];\n    if(campo != 'nombretabla'){\n        CamposUpdateStr += `${key} = (SELECT ${campo} FROM CteTmp )`\n        CamposUpdateStr += (idx != (Object.keys(Datos).length -1) ) ? ',':' ';\n    }\n    \n})\n//AGREGAMOS CLAUSULA WHERE AL UPDATE\nWhereUpdateStr = ` WHERE IdBarcode =  ${Datos[\"IdBarcode\"]}  `\n\n//COMPLETAR UPDATE\nUpdateStr += CamposUpdateStr + WhereUpdateStr;\n\n//COMPLETAR QUERY\nQryFinal = CteStr+UpdateStr;\n\n\n//msg.payload={NombreTabla,CteStr,CteSelectStr,CamposUpdateStr,WhereUpdateStr,UpdateStr}\nmsg.topic=QryFinal;\nreturn msg;\n\n\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 2860,
        "y": 340,
        "wires": [
            [
                "22ffb1a4.adb3fe"
            ]
        ],
        "info": "CREA EL UPDATE A EJECUTAR PARA ACTUALIZAR ORDENES DE TRABAJO\n *    ** SOLO PROCESA UN REGISTRO**"
    },
    {
        "id": "22ffb1a4.adb3fe",
        "type": "sqlite",
        "z": "3ce020fc.06235",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 3070,
        "y": 340,
        "wires": [
            [
                "dd0fd05f.3e46"
            ]
        ]
    },
    {
        "id": "6d973ea.6a05cc",
        "type": "comment",
        "z": "3ce020fc.06235",
        "name": "MP suficiente para continuar produccion",
        "info": "",
        "x": 1950,
        "y": 200,
        "wires": []
    },
    {
        "id": "7dc5e48.ed3fd1c",
        "type": "comment",
        "z": "3ce020fc.06235",
        "name": "Con esta caja se termina la MP y se cambia MP",
        "info": "",
        "x": 1980,
        "y": 120,
        "wires": []
    },
    {
        "id": "13598c25.a5e884",
        "type": "comment",
        "z": "3ce020fc.06235",
        "name": "Se consume lo ultimo de mp y se activa la siguiente",
        "info": "",
        "x": 1710,
        "y": 300,
        "wires": []
    },
    {
        "id": "e1db8fea.dad4",
        "type": "switch",
        "z": "3ce020fc.06235",
        "name": "",
        "property": "payload.Valor",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 580,
        "y": 100,
        "wires": [
            [
                "a09af111.d867f"
            ]
        ]
    },
    {
        "id": "dd0fd05f.3e46",
        "type": "function",
        "z": "3ce020fc.06235",
        "name": "AsignaIdMateriaFin",
        "func": "ObjUpdateDet = { \n    nombretabla: 'ASWLite_TraOrdenProduccionDet'\n    ,IdPO: msg.IdPO\n    ,IdUnidad: msg.IdUnidadCaja\n    ,IdMateriaPrimaFin: msg.IdBarcode\n    ,ClaEstatusReplica: 1\n    ,FechaUltimaMod: msg.FechaUltimaMod\n}\nmsg.payload = [ObjUpdateDet]\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 3430,
        "y": 240,
        "wires": [
            [
                "dc705c8e.f58b1"
            ]
        ]
    },
    {
        "id": "46173cf6.40e2f4",
        "type": "function",
        "z": "3ce020fc.06235",
        "name": "GuardarVariablesEnMsg",
        "func": "msg.IdUnidadCaja = msg.payload[0].IdUnidadCaja\nmsg.IdPO = msg.payload[0].IdPO\nmsg.IdBarcode = msg.payload[0].IdBarcode\nmsg.FechaUltimaMod = msg.payload[0].FechaUltimaMod\nmsg.Cantidad = msg.payload[0].Cantidad\nmsg.Remanente = msg.payload[0].Remanente\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1130,
        "y": 300,
        "wires": [
            [
                "15ae3f47.b75401"
            ]
        ]
    },
    {
        "id": "dc705c8e.f58b1",
        "type": "function",
        "z": "3ce020fc.06235",
        "name": "fnParseUpdate",
        "func": "let Datos = msg.payload //[{\"nombretabla\":\"ASWLite_TraOrdenProduccion\",\"ClaUbicacion\":\"68\",\"IdPO\":3,\"IdCelda\":\"1\",\"ClaArticulo\":\"611645\",\"ClaveArticulo\":\"611645\",\"Orden\":\"3\",\"ClaEstatus\":\"1\",\"BajaLogica\":\"0\",\"ClaUsuarioMod\":\"0\",\"NombrePcMod\":\"302NGALAZ\",\"FechaUltimaMod\":\"2020-03-05T01:43:57.713\"}]\nDatos = Datos[0];\nlet NombreTabla = Datos.nombretabla;\nlet CteStr = 'WITH CteTmp (';\nlet CteSelectStr = 'AS ( SELECT '\nlet UpdateStr = `UPDATE ${NombreTabla} SET `;\nlet CamposUpdateStr = '';\nlet WhereUpdateStr = ''\nlet QryFinal = '';\n//LISTA DE CAMPOS DE LA CTE\nObject.keys(Datos).forEach((key,idx) => {\n    if(key != 'nombretabla'){\n        CteStr += key,idx;\n        CteStr += (idx != (Object.keys(Datos).length -1) ) ? ',':') ';\n        CteSelectStr += (typeof(Datos[key]) == 'string') ? `'${Datos[key]}'` : `${Datos[key]}`;\n        CteSelectStr += (idx != (Object.keys(Datos).length -1) ) ? ',':') ';\n    }\n});\n\n//COMPLETAMOS STRING PARA CREAR CTE\nCteStr += CteSelectStr;\n\nObject.keys(Datos).forEach((key,idx) => {\n    let campo = key;\n    let valor = (typeof(Datos[key]) == 'string') ? `'${Datos[key]}'` : Datos[key];\n    if(campo != 'nombretabla'){\n        CamposUpdateStr += `${key} = (SELECT ${campo} FROM CteTmp )`\n        CamposUpdateStr += (idx != (Object.keys(Datos).length -1) ) ? ',':' ';\n    }\n    \n})\n//AGREGAMOS CLAUSULA WHERE AL UPDATE\nWhereUpdateStr = ` WHERE IdPO =  ${Datos[\"IdPO\"]} and IdUnidad = ${Datos[\"IdUnidad\"]}`\n\n//COMPLETAR UPDATE\nUpdateStr += CamposUpdateStr + WhereUpdateStr;\n\n//COMPLETAR QUERY\nQryFinal = CteStr+UpdateStr;\n\n\n//msg.payload={NombreTabla,CteStr,CteSelectStr,CamposUpdateStr,WhereUpdateStr,UpdateStr}\nmsg.topic=QryFinal;\nreturn msg;\n\n\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 3640,
        "y": 240,
        "wires": [
            [
                "44bc79be.71ed08"
            ]
        ],
        "info": "CREA EL UPDATE A EJECUTAR PARA ACTUALIZAR ORDENES DE TRABAJO\n *    ** SOLO PROCESA UN REGISTRO**"
    },
    {
        "id": "44bc79be.71ed08",
        "type": "sqlite",
        "z": "3ce020fc.06235",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 3790,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "934d9e17.70a1",
        "type": "comment",
        "z": "3ce020fc.06235",
        "name": "Asignar MP con la que termino la caja",
        "info": "",
        "x": 3490,
        "y": 200,
        "wires": []
    },
    {
        "id": "1158c18e.41432e",
        "type": "function",
        "z": "3ce020fc.06235",
        "name": "ActivarEnCasoDeNoHaber",
        "func": "msg.topic = `SELECT  'ASWLite_TraMateriaPrima' as nombretabla\n        ,mat1.IdPO\n        ,mat1.IdBarcode\n        ,1 as EsEnUso\n        ,1 as ClaEstatusReplica\n        ,1 as ClaEventoUse\n        ,1 as EsEnUso\n        ,datetime('now','localtime') as FechaUltimamod\n      FROM ASWLite_TraMateriaPrima mat1\n      JOIN  ASWLite_VariablesProduccion var1\n      ON var1.IdPO = mat1.IdPO\n      WHERE COALESCE(EsEnUso,0) = 0\n      AND COALESCE(EsConsumido,0) = 0\n      AND COALESCE(EsRemovido,0) = 0\n      AND var1.IdComponente = ${msg.IdComponente}\n      /*AND COALESCE(mat1.PesoInicial,0) > 0*/\n      AND NOT EXISTS (SELECT 1 FROM ASWLite_TraMateriaPrima WHERE idPO = var1.IdPO AND EsEnUso = 1)\n      ORDER BY IdBarcode ASC\n      LIMIT 1`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 300,
        "wires": [
            [
                "15c31930.964c57"
            ]
        ]
    },
    {
        "id": "15c31930.964c57",
        "type": "sqlite",
        "z": "3ce020fc.06235",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 230,
        "y": 340,
        "wires": [
            [
                "95ea20a8.37f54"
            ]
        ]
    },
    {
        "id": "c72993ff.622cc",
        "type": "function",
        "z": "3ce020fc.06235",
        "name": "fnParseUpdate",
        "func": "let Datos = msg.payload //[{\"nombretabla\":\"ASWLite_TraOrdenProduccion\",\"ClaUbicacion\":\"68\",\"IdPO\":3,\"IdCelda\":\"1\",\"ClaArticulo\":\"611645\",\"ClaveArticulo\":\"611645\",\"Orden\":\"3\",\"ClaEstatus\":\"1\",\"BajaLogica\":\"0\",\"ClaUsuarioMod\":\"0\",\"NombrePcMod\":\"302NGALAZ\",\"FechaUltimaMod\":\"2020-03-05T01:43:57.713\"}]\nDatos = Datos[0];\nlet NombreTabla = Datos.nombretabla;\nlet CteStr = 'WITH CteTmp (';\nlet CteSelectStr = 'AS ( SELECT '\nlet UpdateStr = `UPDATE ${NombreTabla} SET `;\nlet CamposUpdateStr = '';\nlet WhereUpdateStr = ''\nlet QryFinal = '';\n//LISTA DE CAMPOS DE LA CTE\nObject.keys(Datos).forEach((key,idx) => {\n    if(key != 'nombretabla'){\n        CteStr += key,idx;\n        CteStr += (idx != (Object.keys(Datos).length -1) ) ? ',':') ';\n        CteSelectStr += (typeof(Datos[key]) == 'string') ? `'${Datos[key]}'` : `${Datos[key]}`;\n        CteSelectStr += (idx != (Object.keys(Datos).length -1) ) ? ',':') ';\n    }\n});\n\n//COMPLETAMOS STRING PARA CREAR CTE\nCteStr += CteSelectStr;\n\nObject.keys(Datos).forEach((key,idx) => {\n    let campo = key;\n    let valor = (typeof(Datos[key]) == 'string') ? `'${Datos[key]}'` : Datos[key];\n    if(campo != 'nombretabla'){\n        CamposUpdateStr += `${key} = (SELECT ${campo} FROM CteTmp )`\n        CamposUpdateStr += (idx != (Object.keys(Datos).length -1) ) ? ',':' ';\n    }\n    \n})\n//AGREGAMOS CLAUSULA WHERE AL UPDATE\nWhereUpdateStr = ` WHERE IdBarcode =  ${Datos[\"IdBarcode\"]}  `\n\n//COMPLETAR UPDATE\nUpdateStr += CamposUpdateStr + WhereUpdateStr;\n\n//COMPLETAR QUERY\nQryFinal = CteStr+UpdateStr;\n\n\n//msg.payload={NombreTabla,CteStr,CteSelectStr,CamposUpdateStr,WhereUpdateStr,UpdateStr}\nmsg.topic=QryFinal;\nreturn msg;\n\n\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 260,
        "y": 400,
        "wires": [
            [
                "1253fea.80a9401"
            ]
        ],
        "info": "CREA EL UPDATE A EJECUTAR PARA ACTUALIZAR ORDENES DE TRABAJO\n *    ** SOLO PROCESA UN REGISTRO**"
    },
    {
        "id": "1253fea.80a9401",
        "type": "sqlite",
        "z": "3ce020fc.06235",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 430,
        "y": 400,
        "wires": [
            [
                "c92e19ca.66cb18"
            ]
        ]
    },
    {
        "id": "95ea20a8.37f54",
        "type": "switch",
        "z": "3ce020fc.06235",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "empty"
            },
            {
                "t": "nempty"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 350,
        "y": 340,
        "wires": [
            [
                "c92e19ca.66cb18"
            ],
            [
                "c72993ff.622cc"
            ]
        ]
    },
    {
        "id": "f041dac9.2cdda8",
        "type": "switch",
        "z": "3ce020fc.06235",
        "name": "SoloContinuarSihayMP",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 2590,
        "y": 340,
        "wires": [
            [
                "d09ed4d5.d908d8"
            ]
        ]
    },
    {
        "id": "5753b266.99a20c",
        "type": "switch",
        "z": "3ce020fc.06235",
        "name": "SoloContinuarSihayMP",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 2790,
        "y": 160,
        "wires": [
            [
                "4ff1d9c4.8936d8"
            ]
        ]
    },
    {
        "id": "8e663453.59b888",
        "type": "switch",
        "z": "3ce020fc.06235",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 910,
        "y": 300,
        "wires": [
            [
                "46173cf6.40e2f4"
            ]
        ]
    },
    {
        "id": "4d1e065a.500f08",
        "type": "switch",
        "z": "3ce020fc.06235",
        "name": "RevisaPesoInicial",
        "property": "payload[0].PesoInicial",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 1405,
        "y": 346,
        "wires": [
            [
                "e3d7a4aa.868858"
            ],
            [
                "d99ae42e.cc9448"
            ]
        ]
    },
    {
        "id": "64a84a63.980734",
        "type": "comment",
        "z": "3ce020fc.06235",
        "name": "MP sin peso inicial",
        "info": "",
        "x": 1610,
        "y": 380,
        "wires": []
    },
    {
        "id": "d99ae42e.cc9448",
        "type": "function",
        "z": "3ce020fc.06235",
        "name": "",
        "func": "var data = msg.payload[0]\n\nvar objMateriaPrima = [{\n     nombretabla: data.nombretabla\n    ,IdBarcode: data.IdBarcode\n    ,Peso: data.PesoNuevo\n    ,PesoFinal: data.PesoNuevo\n    ,ClaEstatusReplica:1\n    ,FechaUltimaMod: data.FechaUltimaMod\n}]\n\nmsg.payload = objMateriaPrima;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1570,
        "y": 420,
        "wires": [
            [
                "354a9e1b.f92e42"
            ]
        ]
    },
    {
        "id": "354a9e1b.f92e42",
        "type": "function",
        "z": "3ce020fc.06235",
        "name": "fnParseUpdate",
        "func": "let Datos = msg.payload //[{\"nombretabla\":\"ASWLite_TraOrdenProduccion\",\"ClaUbicacion\":\"68\",\"IdPO\":3,\"IdCelda\":\"1\",\"ClaArticulo\":\"611645\",\"ClaveArticulo\":\"611645\",\"Orden\":\"3\",\"ClaEstatus\":\"1\",\"BajaLogica\":\"0\",\"ClaUsuarioMod\":\"0\",\"NombrePcMod\":\"302NGALAZ\",\"FechaUltimaMod\":\"2020-03-05T01:43:57.713\"}]\nDatos = Datos[0];\nlet NombreTabla = Datos.nombretabla;\nlet CteStr = 'WITH CteTmp (';\nlet CteSelectStr = 'AS ( SELECT '\nlet UpdateStr = `UPDATE ${NombreTabla} SET `;\nlet CamposUpdateStr = '';\nlet WhereUpdateStr = ''\nlet QryFinal = '';\n//LISTA DE CAMPOS DE LA CTE\nObject.keys(Datos).forEach((key,idx) => {\n    if(key != 'nombretabla'){\n        CteStr += key,idx;\n        CteStr += (idx != (Object.keys(Datos).length -1) ) ? ',':') ';\n        CteSelectStr += (typeof(Datos[key]) == 'string') ? `'${Datos[key]}'` : `${Datos[key]}`;\n        CteSelectStr += (idx != (Object.keys(Datos).length -1) ) ? ',':') ';\n    }\n});\n\n//COMPLETAMOS STRING PARA CREAR CTE\nCteStr += CteSelectStr;\n\nObject.keys(Datos).forEach((key,idx) => {\n    let campo = key;\n    let valor = (typeof(Datos[key]) == 'string') ? `'${Datos[key]}'` : Datos[key];\n    if(campo != 'nombretabla'){\n        CamposUpdateStr += `${key} = (SELECT ${campo} FROM CteTmp )`\n        CamposUpdateStr += (idx != (Object.keys(Datos).length -1) ) ? ',':' ';\n    }\n    \n})\n//AGREGAMOS CLAUSULA WHERE AL UPDATE\nWhereUpdateStr = ` WHERE IdBarcode =  ${Datos[\"IdBarcode\"]}  `\n\n//COMPLETAR UPDATE\nUpdateStr += CamposUpdateStr + WhereUpdateStr;\n\n//COMPLETAR QUERY\nQryFinal = CteStr+UpdateStr;\n\n\n//msg.payload={NombreTabla,CteStr,CteSelectStr,CamposUpdateStr,WhereUpdateStr,UpdateStr}\nmsg.topic=QryFinal;\nreturn msg;\n\n\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1740,
        "y": 420,
        "wires": [
            [
                "ce9e8b3f.1808e8"
            ]
        ],
        "info": "CREA EL UPDATE A EJECUTAR PARA ACTUALIZAR ORDENES DE TRABAJO\n *    ** SOLO PROCESA UN REGISTRO**"
    },
    {
        "id": "ce9e8b3f.1808e8",
        "type": "sqlite",
        "z": "3ce020fc.06235",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 1910,
        "y": 420,
        "wires": [
            [
                "1848f1a0.17d9fe"
            ]
        ]
    },
    {
        "id": "1848f1a0.17d9fe",
        "type": "link out",
        "z": "3ce020fc.06235",
        "name": "Out_MP_SN_PesoInicial",
        "links": [
            "2d107f66.0fbf9"
        ],
        "x": 2035,
        "y": 420,
        "wires": []
    },
    {
        "id": "2d107f66.0fbf9",
        "type": "link in",
        "z": "3ce020fc.06235",
        "name": "IN_AsignaMP_Final",
        "links": [
            "1848f1a0.17d9fe"
        ],
        "x": 3280,
        "y": 360,
        "wires": [
            [
                "dd0fd05f.3e46"
            ]
        ]
    },
    {
        "id": "dd093b9b.0c0a68",
        "type": "function",
        "z": "3ce020fc.06235",
        "name": "FormatoPayloadSalida",
        "func": "msg.payload={Evento:\"FINCAJA\",IdComponente:msg.IdComponente,IdCajaTerminada:msg.IdCajaTerminada,\n    IdPO:msg.IdPO,ClavePO:msg.ClavePO,ClaEstatus:msg.ClaEstatus}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "a09af111.d867f",
        "type": "function",
        "z": "3ce020fc.06235",
        "name": "ObtenerIdCajaTerminada&IdPO",
        "func": "msg.topic = `SELECT idUnidadCaja, IdPO FROM ASWLite_VariablesProduccion WHERE IdComponente = ${msg.IdComponente}`;\nmsg.payloadOriginal = { ...msg.payload }\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 100,
        "wires": [
            [
                "12b65c3c.404a24"
            ]
        ]
    },
    {
        "id": "12b65c3c.404a24",
        "type": "sqlite",
        "z": "3ce020fc.06235",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 1010,
        "y": 100,
        "wires": [
            [
                "54de6200.e3036c"
            ]
        ]
    },
    {
        "id": "54de6200.e3036c",
        "type": "function",
        "z": "3ce020fc.06235",
        "name": "guardarIdCajaTerminada",
        "func": "//Comentario\n\nif(msg.payload.length > 0){\n    msg.IdCajaTerminada = msg.payload[0].IdUnidadCaja;\n    msg.IdPO = msg.payload[0].IdPO;\n}else{\n    msg.IdCajaTerminada = null;\n    msg.IdPO = null;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1230,
        "y": 100,
        "wires": [
            [
                "6b15537c4a56d850"
            ]
        ]
    },
    {
        "id": "6b15537c4a56d850",
        "type": "function",
        "z": "3ce020fc.06235",
        "name": "obtenerClavePO&ClaEstatus",
        "func": "msg.topic = `SELECT ClavePO, ClaEstatus from ASWLite_TraOrdenProduccion where IdPO=${msg.IdPO}`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 180,
        "wires": [
            [
                "66e5cbea64467f28"
            ]
        ]
    },
    {
        "id": "66e5cbea64467f28",
        "type": "sqlite",
        "z": "3ce020fc.06235",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLIte",
        "x": 760,
        "y": 180,
        "wires": [
            [
                "c76a8294f48cb811"
            ]
        ]
    },
    {
        "id": "c76a8294f48cb811",
        "type": "function",
        "z": "3ce020fc.06235",
        "name": "guardarValores",
        "func": "if(msg.payload.length > 0){\n    msg.ClavePO = msg.payload[0].ClavePO;\n    msg.ClaEstatus = msg.payload[0].ClaEstatus;\n}else{\n    msg.ClavePO = null;\n    msg.ClaEstatus = null;\n}\n\n//regresamos el payload original\nmsg.payload = { ...msg.payloadOriginal }\n\ndelete msg.payloadOriginal;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 180,
        "wires": [
            [
                "62a4f640.e080c8"
            ]
        ]
    },
    {
        "id": "3dc7669466576e53",
        "type": "catch",
        "z": "3ce020fc.06235",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 180,
        "y": 900,
        "wires": [
            [
                "1752e10a47764b98"
            ]
        ]
    },
    {
        "id": "1752e10a47764b98",
        "type": "function",
        "z": "3ce020fc.06235",
        "name": "Error Handler",
        "func": "node.warn(`ERROR NO CONTROLADO >  ${env.get(\"NAME\")} > ${JSON.stringify(msg)}`)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 900,
        "wires": [
            []
        ]
    },
    {
        "id": "dae5c73c.93b7b8",
        "type": "function",
        "z": "9d73bd39.a6086",
        "name": "InsertCajaNueva",
        "func": "\nmsg.topic = `INSERT INTO ASWLite_TraOrdenProduccionDet(ClaUbicacion,IdPO,IdComponente,IdUnidad,EsTerminado,EsAdicional,FechaInicioReal,ClaEstatusReplica,BajaLogica,ClaUsuarioMod,NombrePcMod,FechaUltimaMod,IdMateriaPrimaInicio,FechaInicioAdm,ClaTurno)\n    SELECT \n        (SELECT Valor1 FROM ASWLite_CfgConfiguracion WHERE ClaveConfiguracion = 'UBI_DEFAULT') as ClaUbicacion\n        , var.IdPO\n        ,var.IdComponente\n        ,(SELECT (COALESCE(MAX(UnidadesProducidas),0) + 1 ) FROM ASWLite_TraOrdenProduccion WHERE IdPO = var.IdPO) as IdUnidad\n        ,0 as EsTerminado\n        ,0 as EsAdicional\n        ,datetime('now','localtime') as FechaInicioReal\n        ,1 as ClaEstatusReplica\n        ,0 as BajaLogica\n        ,${global.get('ClaUsuarioMod')||345} as ClaUsuarioMod\n        ,'RB' as NombrePcMod\n        ,datetime('now','localtime') as FechaUltimaMod\n        ,(SELECT IdBarCode FROM ASWLite_TraMateriaPrima WHERE IdPO = var.IdPO and EsEnUso = 1) as IdMateriaPrimaInicio\n        ,Var.FechaAdministrativa as FechaInicioAdm\n        ,Var.ClaTurno as ClaTurno\n    FROM ASWLite_VariablesProduccion Var\n    WHERE var.idcomponente = ${msg.IdComponente}`\nnode.warn('AGREGAR CAJA NUEVA')\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 140,
        "wires": [
            [
                "aa43efe6.47771"
            ]
        ]
    },
    {
        "id": "aa43efe6.47771",
        "type": "sqlite",
        "z": "9d73bd39.a6086",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 570,
        "y": 140,
        "wires": [
            [
                "7e29161d.9fe458"
            ]
        ]
    },
    {
        "id": "7e29161d.9fe458",
        "type": "function",
        "z": "9d73bd39.a6086",
        "name": "CajaNuevaTblVariables",
        "func": "msg.topic=`WITH CteTmp (IdUnidad) AS ( SELECT MAX(IdUnidad) as IdUnidad FROM ASWLite_TraOrdenProduccionDet\n                                        WHERE idComponente = ${msg.IdComponente}\n                                        AND IdPO in (SELECT IdPO FROM ASWLite_VariablesProduccion WHERE IdComponente = ${msg.IdComponente}))\nUPDATE ASWLite_VariablesProduccion \nSET IdUnidadCaja = (SELECT IdUnidad FROM CteTmp )\nWHERE IdComponente = ${msg.IdComponente};`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 140,
        "wires": [
            [
                "86aa1ea5.fa70c"
            ]
        ]
    },
    {
        "id": "86aa1ea5.fa70c",
        "type": "sqlite",
        "z": "9d73bd39.a6086",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 930,
        "y": 140,
        "wires": [
            [
                "55e72386.42854c"
            ]
        ]
    },
    {
        "id": "8a394ae5.ea4328",
        "type": "comment",
        "z": "9d73bd39.a6086",
        "name": "Iniciar caja nueva",
        "info": "",
        "x": 140,
        "y": 100,
        "wires": []
    },
    {
        "id": "b34d99b0.b8cb18",
        "type": "function",
        "z": "9d73bd39.a6086",
        "name": "guardarPayloadOriginal",
        "func": "flow.set('PayloadOriginal',msg.payload) \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 140,
        "wires": [
            [
                "dae5c73c.93b7b8"
            ]
        ]
    },
    {
        "id": "55e72386.42854c",
        "type": "function",
        "z": "9d73bd39.a6086",
        "name": "RegresarPayloadOriginal",
        "func": "msg.payload = flow.get('PayloadOriginal')\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "40927617.b7d488",
        "type": "function",
        "z": "54823eeb.898e9",
        "name": "",
        "func": "let ClaUsuarioMod = global.get('ClaUsuarioMod');\nlet NombrePcMod = global.get('NombrePcMod');\n\nmsg.topic = `\nSELECT  'AswLite_BitParos' as nombretabla,\n        bit.IdParo,\n        6 as ClaSeccionParo,\n        datetime('now','localtime') as FechaUltimaMod, \n        ${ClaUsuarioMod} as ClaUsuarioMod,\n        '${NombrePcMod}' as NombrePcMod\nFROM AswLite_BitParos bit\nWHERE  bit.IdParo = ${msg.IdParo}\nAND bit.ClaSeccionParo is NULL\nAND bit.DuracionSegundos >= (SELECT Valor1 * 60 FROM ASWLite_CfgConfiguracion WHERE ClaveConfiguracion = 'CHANGEOVER')\nAND bit.IdPOInicio is not null\nAND bit.IdPOFin is not null\nAND bit.IdPOInicio <> IdPOFin\n`\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 390,
        "y": 100,
        "wires": [
            [
                "382f03cf.07370c"
            ]
        ]
    },
    {
        "id": "382f03cf.07370c",
        "type": "sqlite",
        "z": "54823eeb.898e9",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 550,
        "y": 100,
        "wires": [
            [
                "2c1dfe26.6dbf22"
            ]
        ]
    },
    {
        "id": "1b951e4.1c961e2",
        "type": "function",
        "z": "54823eeb.898e9",
        "name": "fnParseUpdate",
        "func": "let Datos = msg.payload //[{\"nombretabla\":\"ASWLite_TraOrdenProduccion\",\"ClaUbicacion\":\"68\",\"IdPO\":3,\"IdCelda\":\"1\",\"ClaArticulo\":\"611645\",\"ClaveArticulo\":\"611645\",\"Orden\":\"3\",\"ClaEstatus\":\"1\",\"BajaLogica\":\"0\",\"ClaUsuarioMod\":\"0\",\"NombrePcMod\":\"302NGALAZ\",\"FechaUltimaMod\":\"2020-03-05T01:43:57.713\"}]\nDatos = Datos[0];\nlet NombreTabla = Datos.nombretabla;\nlet CteStr = 'WITH CteTmp (';\nlet CteSelectStr = 'AS ( SELECT '\nlet UpdateStr = `UPDATE ${NombreTabla} SET `;\nlet CamposUpdateStr = '';\nlet WhereUpdateStr = ''\nlet QryFinal = '';\n//LISTA DE CAMPOS DE LA CTE\nObject.keys(Datos).forEach((key,idx) => {\n    if(key != 'nombretabla'){\n        CteStr += key,idx;\n        CteStr += (idx != (Object.keys(Datos).length -1) ) ? ',':') ';\n        CteSelectStr += (typeof(Datos[key]) == 'string') ? `'${Datos[key]}'` : `${Datos[key]}`;\n        CteSelectStr += (idx != (Object.keys(Datos).length -1) ) ? ',':') ';\n    }\n});\n\n//COMPLETAMOS STRING PARA CREAR CTE\nCteStr += CteSelectStr;\n\nObject.keys(Datos).forEach((key,idx) => {\n    let campo = key;\n    let valor = (typeof(Datos[key]) == 'string') ? `'${Datos[key]}'` : Datos[key];\n    if(campo != 'nombretabla'){\n        CamposUpdateStr += `${key} = (SELECT ${campo} FROM CteTmp )`\n        CamposUpdateStr += (idx != (Object.keys(Datos).length -1) ) ? ',':' ';\n    }\n    \n})\n//AGREGAMOS CLAUSULA WHERE AL UPDATE\nWhereUpdateStr = ` WHERE IdParo =  ${Datos[\"IdParo\"]}  `\n\n//COMPLETAR UPDATE\nUpdateStr += CamposUpdateStr + WhereUpdateStr;\n\n//COMPLETAR QUERY\nQryFinal = CteStr+UpdateStr;\n\n\n//msg.payload={NombreTabla,CteStr,CteSelectStr,CamposUpdateStr,WhereUpdateStr,UpdateStr}\nmsg.topic=QryFinal;\nreturn msg;\n\n\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 900,
        "y": 20,
        "wires": [
            [
                "9a853864.8730c8"
            ]
        ],
        "info": "CREA EL UPDATE A EJECUTAR PARA ACTUALIZAR ORDENES DE TRABAJO\n *    ** SOLO PROCESA UN REGISTRO**"
    },
    {
        "id": "f3a5dbf7.5155d8",
        "type": "switch",
        "z": "54823eeb.898e9",
        "name": "",
        "property": "IdParo",
        "propertyType": "msg",
        "rules": [
            {
                "t": "istype",
                "v": "number",
                "vt": "number"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 170,
        "y": 151,
        "wires": [
            [
                "40927617.b7d488"
            ],
            [
                "10ce0940.fef217"
            ]
        ]
    },
    {
        "id": "9a853864.8730c8",
        "type": "sqlite",
        "z": "54823eeb.898e9",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 1070,
        "y": 20,
        "wires": [
            [
                "f428c991.05dc28"
            ]
        ]
    },
    {
        "id": "2c1dfe26.6dbf22",
        "type": "switch",
        "z": "54823eeb.898e9",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 690,
        "y": 100,
        "wires": [
            [
                "1b951e4.1c961e2"
            ],
            [
                "cefcc922.e6a538"
            ]
        ]
    },
    {
        "id": "f428c991.05dc28",
        "type": "function",
        "z": "54823eeb.898e9",
        "name": "FormatoPayloadSalidaCambioPO",
        "func": "msg.payload = {Evento:\"CAMBIOPO\",IdComponente:msg.IdComponente}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1360,
        "y": 20,
        "wires": [
            []
        ]
    },
    {
        "id": "cefcc922.e6a538",
        "type": "function",
        "z": "54823eeb.898e9",
        "name": "FormatoPayloadSalidaFINParo",
        "func": "if(msg.CambioPO == true){\n    msg.payload = {Evento:\"CAMBIOPO\",IdComponente:msg.IdComponente}\n}else{\n    msg.payload = {Evento:\"FINPARO\",IdComponente:msg.IdComponente}\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1088,
        "y": 108,
        "wires": [
            []
        ]
    },
    {
        "id": "10ce0940.fef217",
        "type": "function",
        "z": "54823eeb.898e9",
        "name": "FormatoPayloadSalidaCambioPO",
        "func": "msg.payload = {Evento:\"INICIOPARO\",IdComponente:msg.IdComponente}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1100,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "f88dbd41eb7c231a",
        "type": "catch",
        "z": "54823eeb.898e9",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 80,
        "y": 320,
        "wires": [
            [
                "1baa4e24ef18dfec"
            ]
        ]
    },
    {
        "id": "1baa4e24ef18dfec",
        "type": "function",
        "z": "54823eeb.898e9",
        "name": "Error Handler",
        "func": "node.warn(`ERROR NO CONTROLADO >  ${env.get(\"NAME\")} > ${JSON.stringify(msg)}`)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "221383d3.1d936c",
        "type": "function",
        "z": "39e21cf9.935554",
        "name": "qryNailsBoxCapacidad",
        "func": "idCelda = global.get('celda')\nflow.set('payload',msg.payload)\nClaArticulo = msg.ClaArticulo\n\nmsg.topic = `SELECT nomvalorcaractingles as NailsBox,\n(SELECT Valor2 FROM ASWLite_CfgConfiguracion WHERE ClaveConfiguracion = 'CAPACIDAD_CELDA')  as NPH\nFROM ASWLite_CatArticuloCaracteristicas ARTC\nWHERE ARTC.ClaCaracteristica =  (SELECT Valor1 FROM ASWLite_CfgConfiguracion WHERE ClaveConfiguracion ='CLA_NAILS_BOX')\nAND ARTC.ClaArticulo = ${ClaArticulo}`\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 180,
        "wires": [
            [
                "f5d612c5.e3df5"
            ]
        ]
    },
    {
        "id": "f5d612c5.e3df5",
        "type": "sqlite",
        "z": "39e21cf9.935554",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 490,
        "y": 180,
        "wires": [
            [
                "251d58bb.7d48d8"
            ]
        ]
    },
    {
        "id": "251d58bb.7d48d8",
        "type": "function",
        "z": "39e21cf9.935554",
        "name": "CalcularCajasXHora",
        "func": "msg.CajasXHora = msg.payload[0].NPH / parseInt(msg.payload[0].NailsBox.match(/\\d+/)[0]) ;\nmsg.payload = flow.get('payload')\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "66c76deb.108a04",
        "type": "function",
        "z": "7d171618.276858",
        "name": "GetKeysOEEDet",
        "func": "msg.topic=`SELECT IdComponente \n\t,IdWorkCenter AS IdCelda\n\t,DATE(FechaAdministrativa) AS FechaAdmScada\n\t,VP.ClaTurno\n\t,strftime('%H',TIME('now','localtime'))||':00:00' AS Hora\t\n\t,Duracion\nFROM ASWLite_VariablesProduccion VP\nJOIN ASWLite_CatTurno T\n    ON VP.ClaTurno = T.ClaTurno\nJOIN ASWLite_CatWorkUnit M\n\tON VP.IdComponente = M.ClaMaquina\n WHERE ClaTipoMaquina = 6\n AND IdComponente IS NOT NULL\n AND IdWorkCenter IS NOT NULL\n AND DATE(FechaAdministrativa) IS NOT NULL\n AND VP.ClaTurno IS NOT NULL\n AND strftime('%H',TIME('now','localtime'))||':00:00' IS NOT NULL\n AND Duracion IS NOT NULL`\n \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 60,
        "wires": [
            [
                "e53bc950.7caa68"
            ]
        ]
    },
    {
        "id": "e53bc950.7caa68",
        "type": "sqlite",
        "z": "7d171618.276858",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 434,
        "y": 60,
        "wires": [
            [
                "6345ae89.c34c5"
            ]
        ]
    },
    {
        "id": "deedd8ba.438da8",
        "type": "split",
        "z": "7d171618.276858",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 810,
        "y": 60,
        "wires": [
            [
                "1b09f442.a4e6ec"
            ]
        ]
    },
    {
        "id": "1b09f442.a4e6ec",
        "type": "function",
        "z": "7d171618.276858",
        "name": "payloadToMsg",
        "func": "msg.IdComponente = msg.payload.IdComponente;\nmsg.IdCelda = msg.payload.IdCelda;\nmsg.FechaAdmScada = msg.payload.FechaAdmScada;\nmsg.ClaTurno = msg.payload.ClaTurno;\nmsg.Hora = msg.payload.Hora;\nmsg.Duracion = msg.payload.Duracion;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 960,
        "y": 60,
        "wires": [
            [
                "b17936e9.897888"
            ]
        ]
    },
    {
        "id": "b17936e9.897888",
        "type": "function",
        "z": "7d171618.276858",
        "name": "Inicializa OEEDet",
        "func": "msg.topic = `INSERT INTO ASWLite_TraIndicadorOEEDet(\n\tIdComponente\n\t,IdCelda\n\t,FechaAdmScada\n\t,ClaTurno\n\t,Hora\n\t,DuracionTurno\n\t)\nSELECT ${msg.IdComponente}\n\t,${msg.IdCelda}\n\t,'${msg.FechaAdmScada}'\n\t,${msg.ClaTurno}\n\t,'${msg.Hora}'\n\t,${msg.Duracion}\nWHERE NOT EXISTS (SELECT 1\n \t\t\t\t\tFROM ASWLite_TraIndicadorOEEDet OD\n \t\t\t\t\tWHERE IdComponente=${msg.IdComponente} \n \t\t\t\t\t\tAND IdCelda=${msg.IdCelda} \n \t\t\t\t\t\tAND FechaAdmScada='${msg.FechaAdmScada}'\n \t\t\t\t\t\tAND ClaTurno=${msg.ClaTurno}\n \t\t\t\t\t\tAND Hora='${msg.Hora}'\n \t\t\t\t\t)\n `;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 120,
        "wires": [
            [
                "c0389ed4.cfda3"
            ]
        ]
    },
    {
        "id": "c0389ed4.cfda3",
        "type": "sqlite",
        "z": "7d171618.276858",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 434,
        "y": 120,
        "wires": [
            [
                "a00dd9a2.f88438"
            ]
        ]
    },
    {
        "id": "a00dd9a2.f88438",
        "type": "function",
        "z": "7d171618.276858",
        "name": "InfoTurno",
        "func": "msg.topic=`\nWITH cte AS (\n    SELECT CASE WHEN strftime('%s',horaInicioTurno) > strftime('%s',TIME('now', 'localtime')) \n    \t\tTHEN (strftime('%s','24:00:00') -  strftime('%s',horaInicioTurno))+(strftime('%s',TIME('now', 'localtime')) -  strftime('%s','00:00:00'))\n    \t\tELSE strftime('%s',TIME('now', 'localtime'))- strftime('%s',horaInicioTurno) END /60.0/60.0 AS TiempoAcumulado\n    FROM ASWLite_CatTurno\n    WHERE ClaTurno = ${msg.ClaTurno}\n)\nUPDATE ASWLite_TraIndicadorOEEDet\nSET TiempoAcumulado = (SELECT TiempoAcumulado FROM cte)\nWHERE IdComponente=${msg.IdComponente} \n\tAND IdCelda=${msg.IdCelda} \n\tAND FechaAdmScada='${msg.FechaAdmScada}'\n\tAND ClaTurno=${msg.ClaTurno}\n    AND Hora='${msg.Hora}' \n`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 220,
        "y": 180,
        "wires": [
            [
                "fdb41d3b.0520d"
            ]
        ]
    },
    {
        "id": "fdb41d3b.0520d",
        "type": "sqlite",
        "z": "7d171618.276858",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 434,
        "y": 180,
        "wires": [
            [
                "4b64142e.70988c"
            ]
        ]
    },
    {
        "id": "4b64142e.70988c",
        "type": "function",
        "z": "7d171618.276858",
        "name": "InfoParos",
        "func": "msg.topic=`\n;WITH cte AS(\n\tSELECT\n\t\tCASE WHEN [fechaHoraFinal] > DATE('now','localtime')|| ' ' || '${msg.Hora}' OR [fechaHoraFinal] IS NULL\n\t\t\tTHEN  (strftime('%s', COALESCE([fechaHoraFinal],datetime('now','localtime'))) - \n                                   CASE WHEN strftime('%s',FechaHoraInicial) < strftime('%s',  DATE('now','localtime')|| ' ' || '${msg.Hora}')  \n                                           THEN strftime('%s',  DATE('now','localtime')|| ' ' || '${msg.Hora}')\n                                           ELSE strftime('%s',FechaHoraInicial) \n                                   END )                                    \n\t\t\tELSE 0\n\t\t\tEND /60.0/60.0 AS TiempoParo\n\t\t,COALESCE([DuracionSegundos], (strftime('%s', datetime('now','localtime')) - strftime('%s', [fechaHoraInicial])))/60.0/60.0  AS TiempoParoAcumulado\n\t\t,CASE WHEN rtg.EsNoAplicaAprovechamiento\n\t\t\tTHEN\n\t\t\t\tCASE WHEN [fechaHoraFinal] > DATE('now','localtime')|| ' ' || '${msg.Hora}' OR [fechaHoraFinal] IS NULL\n\t\t\t\tTHEN  (strftime('%s', COALESCE([fechaHoraFinal],datetime('now','localtime'))) - \n                                           CASE WHEN strftime('%s',FechaHoraInicial) < strftime('%s',  DATE('now','localtime')|| ' ' || '${msg.Hora}')  \n                                                   THEN strftime('%s',  DATE('now','localtime')|| ' ' || '${msg.Hora}')\n                                                   ELSE strftime('%s',FechaHoraInicial) \n                                           END )                                    \n\t                              ELSE 0\n                                        END /60.0/60.0\n\t\t\tELSE 0 END AS TiempoParoAfecta\n\t\t,CASE WHEN rtg.EsNoAplicaAprovechamiento\n\t\t\tTHEN\n\t\t\t\tCOALESCE([DuracionSegundos], (strftime('%s', datetime('now','localtime')) - strftime('%s', [fechaHoraInicial])))/60.0/60.0\n\t\t\tELSE 0 END AS TiempoParoAfectaAcumulado\n\tFROM [AswLite_BitParos] bp\n\tLEFT JOIN ASWLite_CatSeccionParo sp\n\t\tON bp.ClaSeccionParo = sp.ClaSeccionParo\n\tLEFT JOIN ASWLite_RelTipoParoGpoParo rtg\n\t\tON sp.IdTipoParoGpoParo=rtg.IdTipoParoGpoParo\n\tWHERE (microParoSN = 0 \n\t   \t\tOR microParoSN IS NULL AND strftime('%s', datetime('now','localtime')) - strftime('%s', [fechaHoraInicial]) > (SELECT Valor1*60 FROM ASWLite_CfgConfiguracion WHERE ClaveConfiguracion='MICROPARO')\n\t\t    )\n\t\tAND IdComponente=${msg.IdComponente}\n\t\tAND FechaAdmScada='${msg.FechaAdmScada}'\n\t\tAND ClaTurno=${msg.ClaTurno} \n)\nUPDATE ASWLite_TraIndicadorOEEDet\nSET TiempoParo = (SELECT COALESCE(SUM(TiempoParo),0) FROM cte)\n\t,TiempoParoAcumulado = (SELECT COALESCE(SUM(TiempoParoAcumulado),0) FROM cte)\n\t,TiempoParoAfecta = (SELECT COALESCE(SUM(TiempoParoAfecta),0) FROM cte)\n\t,TiempoParoAfectaAcumulado = (SELECT COALESCE(SUM(TiempoParoAfectaAcumulado),0) FROM cte)\nWHERE IdComponente=${msg.IdComponente} \n\tAND IdCelda=${msg.IdCelda} \n\tAND FechaAdmScada='${msg.FechaAdmScada}'\n\tAND ClaTurno=${msg.ClaTurno}\n\tAND Hora='${msg.Hora}'  \n`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 220,
        "y": 240,
        "wires": [
            [
                "5f099fd4.5491d"
            ]
        ]
    },
    {
        "id": "5f099fd4.5491d",
        "type": "sqlite",
        "z": "7d171618.276858",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 434,
        "y": 240,
        "wires": [
            [
                "13afb610.70bfea"
            ]
        ]
    },
    {
        "id": "13afb610.70bfea",
        "type": "function",
        "z": "7d171618.276858",
        "name": "InfoDisponibilidad",
        "func": "msg.topic=`\nUPDATE ASWLite_TraIndicadorOEEDet\nSET Disponibilidad = (1-(TiempoParo))/(1-TiempoParoAfecta)*100\n\t,DisponibilidadAcumulado = (TiempoAcumulado-(TiempoParoAcumulado))/(TiempoAcumulado-TiempoParoAfectaAcumulado)*100\nWHERE IdComponente=${msg.IdComponente} \n\tAND IdCelda=${msg.IdCelda} \n\tAND FechaAdmScada='${msg.FechaAdmScada}'\n\tAND ClaTurno=${msg.ClaTurno}\n\tAND Hora='${msg.Hora}' \n`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 300,
        "wires": [
            [
                "a57221d4.02ea9"
            ]
        ]
    },
    {
        "id": "a57221d4.02ea9",
        "type": "sqlite",
        "z": "7d171618.276858",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 434,
        "y": 300,
        "wires": [
            [
                "508c77cd.52ea28"
            ]
        ]
    },
    {
        "id": "508c77cd.52ea28",
        "type": "function",
        "z": "7d171618.276858",
        "name": "InfoCapacidad-Peso",
        "func": "msg.topic=`\nUPDATE ASWLite_TraIndicadorOEEDet\nSET Capacidad = (select valor2 FROM ASWLite_CfgConfiguracion WHERE ClaveConfiguracion = 'CAPACIDAD_CELDA') / ${msg.Componentes}\n\t,PesoCaja = (SELECT Peso\n\t\t\tFROM ASWLite_VariablesProduccion VP\n\t\t\tJOIN  ASWLite_CatArticuloGeneral AG\n\t\t\t\tON VP.ClaArticulo = AG.ClaArticulo\n\t\t\tWHERE IdComponente=${msg.IdComponente} )\nWHERE IdComponente=${msg.IdComponente} \n\tAND IdCelda=${msg.IdCelda} \n\tAND FechaAdmScada='${msg.FechaAdmScada}'\n\tAND ClaTurno=${msg.ClaTurno}\n\tAND Hora='${msg.Hora}' \n`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 260,
        "y": 360,
        "wires": [
            [
                "f3418a0d.8c0c68"
            ]
        ]
    },
    {
        "id": "f3418a0d.8c0c68",
        "type": "sqlite",
        "z": "7d171618.276858",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 435,
        "y": 360,
        "wires": [
            [
                "a2878602.f1cca8"
            ]
        ]
    },
    {
        "id": "a2878602.f1cca8",
        "type": "function",
        "z": "7d171618.276858",
        "name": "GetClavosCaja",
        "func": "msg.topic=`\nSELECT NomValorCaractIngles AS ClavosCaja\nFROM ASWLite_VariablesProduccion VP\nJOIN  ASWLite_CatArticuloCaracteristicas AC\n\tON VP.ClaArticulo = AC.ClaArticulo\nWHERE IdComponente=${msg.IdComponente} \n\tAND ClaCaracteristica=(SELECT Valor1 FROM ASWLite_CfgConfiguracion WHERE ClaveConfiguracion ='CLA_NAILS_BOX')\n\t\n`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 240,
        "y": 420,
        "wires": [
            [
                "a8d7e9f2.7ac278"
            ]
        ]
    },
    {
        "id": "a8d7e9f2.7ac278",
        "type": "sqlite",
        "z": "7d171618.276858",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 435,
        "y": 420,
        "wires": [
            [
                "2d5acc4e.e7f2a4"
            ]
        ]
    },
    {
        "id": "2d5acc4e.e7f2a4",
        "type": "function",
        "z": "7d171618.276858",
        "name": "InfoCapacidadCaja",
        "func": "if (msg.payload[0]){\nvar regex = /^[0-9]+/;\nvar text = msg.payload[0].ClavosCaja;\nvar newstr = regex.exec(text)[0];\n\nmsg.topic=`\nUPDATE ASWLite_TraIndicadorOEEDet\nSET ClavosCaja = ${newstr}\n    ,CapacidadCaja = Capacidad/ ${newstr}\n    ,CajasEsperadas = (Capacidad/ ${newstr}) * (1-TiempoParo)\n    ,CajasEsperadasAcumulado = (Capacidad/ ${newstr}) * (TiempoAcumulado-TiempoParoAcumulado)\n    ,PesoCajasEsperadas = (Capacidad/ ${newstr}) * (1-TiempoParo) * PesoCaja\n    ,PesoCajasEsperadasAcumulado = (Capacidad/ ${newstr}) * (TiempoAcumulado-TiempoParoAcumulado) * PesoCaja\nWHERE IdComponente=${msg.IdComponente} \n\tAND IdCelda=${msg.IdCelda} \n\tAND FechaAdmScada='${msg.FechaAdmScada}'\n\tAND ClaTurno=${msg.ClaTurno}\n\tAND Hora='${msg.Hora}' \n`\n}\nelse{\n    msg.topic=`\nUPDATE ASWLite_TraIndicadorOEEDet\nSET ClavosCaja = NULL\nWHERE IdComponente=${msg.IdComponente} \n\tAND IdCelda=${msg.IdCelda} \n\tAND FechaAdmScada='${msg.FechaAdmScada}'\n\tAND ClaTurno=${msg.ClaTurno}\n\tAND Hora='${msg.Hora}' \n`\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 480,
        "wires": [
            [
                "692c907.38ca17"
            ]
        ]
    },
    {
        "id": "692c907.38ca17",
        "type": "sqlite",
        "z": "7d171618.276858",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 430,
        "y": 480,
        "wires": [
            [
                "38116a28.7ae3a6"
            ]
        ]
    },
    {
        "id": "38116a28.7ae3a6",
        "type": "function",
        "z": "7d171618.276858",
        "name": "InfoProduccion",
        "func": "msg.topic=`\n;WITH cte AS(\n\tSELECT COUNT(CASE WHEN strftime('%H', FechaInicioReal) =  strftime('%H','${msg.Hora}')\n\t\t\t\t\tTHEN IdUnidad\n\t\t\t\t\tELSE NULL\n\t\t\t\t\tEND) AS CajasProducidas\n\t\t,COUNT(IdUnidad) AS CajasProducidasAcumulado \n\tFROM ASWLite_TraOrdenProduccionDet\n    WHERE IdComponente=${msg.IdComponente} \n    \tAND FechaInicioAdm='${msg.FechaAdmScada}'\n    \tAND ClaTurno=${msg.ClaTurno}\n\t\tAND EsTerminado = 1\n)\nUPDATE ASWLite_TraIndicadorOEEDet\nSET CajasProducidas = (SELECT COALESCE(CajasProducidas,0) FROM cte)\n\t,CajasProducidasAcumulado = (SELECT COALESCE(CajasProducidasAcumulado,0) FROM cte)\n\t,PesoCajasProducidas = (SELECT COALESCE(CajasProducidas,0) FROM cte) * PesoCaja\n\t,PesoCajasProducidasAcumulado = (SELECT COALESCE(CajasProducidasAcumulado,0) FROM cte) * PesoCaja\nWHERE IdComponente=${msg.IdComponente} \n\tAND IdCelda=${msg.IdCelda} \n\tAND FechaAdmScada='${msg.FechaAdmScada}'\n\tAND ClaTurno=${msg.ClaTurno}\n    AND Hora='${msg.Hora}' \n`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 240,
        "y": 540,
        "wires": [
            [
                "1fc79e43.687cb2"
            ]
        ]
    },
    {
        "id": "1fc79e43.687cb2",
        "type": "sqlite",
        "z": "7d171618.276858",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 430,
        "y": 540,
        "wires": [
            [
                "41274f2.1ce24b"
            ]
        ]
    },
    {
        "id": "6345ae89.c34c5",
        "type": "function",
        "z": "7d171618.276858",
        "name": "GetComponentes",
        "func": "msg.Componentes=msg.payload.length\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 650,
        "y": 60,
        "wires": [
            [
                "deedd8ba.438da8"
            ]
        ]
    },
    {
        "id": "41274f2.1ce24b",
        "type": "function",
        "z": "7d171618.276858",
        "name": "InfoRendimiento",
        "func": "msg.topic=`\nUPDATE ASWLite_TraIndicadorOEEDet\nSET Performance = CASE WHEN CajasProducidas/CajasEsperadas>1 THEN 100 ELSE CajasProducidas/CajasEsperadas*100 END\n\t,PerformanceAcumulado = CASE WHEN CajasProducidasAcumulado/CajasEsperadasAcumulado>1 THEN 100 ELSE CajasProducidasAcumulado/CajasEsperadasAcumulado*100 END\nWHERE IdComponente=${msg.IdComponente} \n\tAND IdCelda=${msg.IdCelda} \n\tAND FechaAdmScada='${msg.FechaAdmScada}'\n\tAND ClaTurno=${msg.ClaTurno}\n\tAND Hora='${msg.Hora}' \n`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 240,
        "y": 600,
        "wires": [
            [
                "2e1fa093.6272e"
            ]
        ]
    },
    {
        "id": "2e1fa093.6272e",
        "type": "sqlite",
        "z": "7d171618.276858",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 434,
        "y": 600,
        "wires": [
            [
                "df371dea.9681e"
            ]
        ]
    },
    {
        "id": "df371dea.9681e",
        "type": "function",
        "z": "7d171618.276858",
        "name": "InfoScrap",
        "func": "msg.topic=`\n;WITH cte AS (\n\tSELECT SUM(CASE WHEN strftime('%H',FechaUltimaMod)=strftime('%H','${msg.Hora}')  \n\t\t\t\tTHEN Peso / ${msg.Componentes} \n\t\t\t\tELSE 0 END) AS PesoScrap\n\t\t,SUM(Peso / ${msg.Componentes}) AS PesoScrapAcumulado \n\tFROM ASWLite_TraScrap\n\tWHERE IdCelda=${msg.IdCelda} \n\t\tAND FechaAdmScada='${msg.FechaAdmScada}'\n\t\tAND ClaTurno=${msg.ClaTurno}\n)\nUPDATE ASWLite_TraIndicadorOEEDet\nSET PesoScrap = (SELECT COALESCE(SUM(PesoScrap),0) FROM cte)\n\t,PesoScrapAcumulado = (SELECT COALESCE(SUM(PesoScrapAcumulado),0) FROM cte)\nWHERE IdComponente=${msg.IdComponente} \n\tAND IdCelda=${msg.IdCelda} \n\tAND FechaAdmScada='${msg.FechaAdmScada}'\n\tAND ClaTurno=${msg.ClaTurno}\n\tAND Hora='${msg.Hora}' \n`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 220,
        "y": 660,
        "wires": [
            [
                "49088570.f778cc"
            ]
        ]
    },
    {
        "id": "49088570.f778cc",
        "type": "sqlite",
        "z": "7d171618.276858",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 434,
        "y": 660,
        "wires": [
            [
                "a39d0a09.3aaf88"
            ]
        ]
    },
    {
        "id": "eefafaf1.9b57c8",
        "type": "sqlite",
        "z": "7d171618.276858",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 430,
        "y": 720,
        "wires": [
            [
                "3d9ba33e.f4962c"
            ]
        ]
    },
    {
        "id": "a39d0a09.3aaf88",
        "type": "function",
        "z": "7d171618.276858",
        "name": "InfoCalidad",
        "func": "msg.topic=`\nUPDATE ASWLite_TraIndicadorOEEDet\nSET Calidad = (1-PesoScrap/PesoCajasProducidas)*100\n\t,CalidadAcumulado = (1-PesoScrapAcumulado/PesoCajasProducidasAcumulado)*100\nWHERE IdComponente=${msg.IdComponente} \n\tAND IdCelda=${msg.IdCelda} \n\tAND FechaAdmScada='${msg.FechaAdmScada}'\n\tAND ClaTurno=${msg.ClaTurno}\n\tAND Hora='${msg.Hora}' \n`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 230,
        "y": 720,
        "wires": [
            [
                "eefafaf1.9b57c8"
            ]
        ]
    },
    {
        "id": "11fe099.ef4e0f6",
        "type": "sqlite",
        "z": "7d171618.276858",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 430,
        "y": 780,
        "wires": [
            [
                "862f9a75.8c04e8"
            ]
        ]
    },
    {
        "id": "3d9ba33e.f4962c",
        "type": "function",
        "z": "7d171618.276858",
        "name": "InfoOee",
        "func": "msg.topic=`\nUPDATE ASWLite_TraIndicadorOEEDet\nSET Oee=Disponibilidad*Performance*Calidad/100/100\n    ,OeeAcumulado=DisponibilidadAcumulado*PerformanceAcumulado*CalidadAcumulado/100/100\nWHERE IdComponente=${msg.IdComponente} \n\tAND IdCelda=${msg.IdCelda} \n\tAND FechaAdmScada='${msg.FechaAdmScada}'\n\tAND ClaTurno=${msg.ClaTurno}\n\tAND Hora='${msg.Hora}' \n`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 220,
        "y": 780,
        "wires": [
            [
                "11fe099.ef4e0f6"
            ]
        ]
    },
    {
        "id": "813d7d7b.f103a",
        "type": "sqlite",
        "z": "7d171618.276858",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 430,
        "y": 840,
        "wires": [
            [
                "f835784b.094d78"
            ]
        ]
    },
    {
        "id": "862f9a75.8c04e8",
        "type": "function",
        "z": "7d171618.276858",
        "name": "InfoControl",
        "func": "msg.topic=`\nUPDATE ASWLite_TraIndicadorOEEDet\nSET ClaEstatusReplica=1\n    ,FechaUltimaMod = DATETIME('now','localtime')\n    ,NombrePcMod = 'RB'\nWHERE IdComponente=${msg.IdComponente} \n\tAND IdCelda=${msg.IdCelda} \n\tAND FechaAdmScada='${msg.FechaAdmScada}'\n\tAND ClaTurno=${msg.ClaTurno}\n\tAND Hora='${msg.Hora}' \n`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 230,
        "y": 840,
        "wires": [
            [
                "813d7d7b.f103a"
            ]
        ]
    },
    {
        "id": "49e5849e.a4daec",
        "type": "function",
        "z": "7d171618.276858",
        "name": "Inicializa OEE",
        "func": "msg.topic = `INSERT INTO ASWLite_TraIndicadorOEE(\n\tIdCelda\n\t,Componentes\n\t,FechaAdmScada\n\t,ClaTurno\n\t,Hora\n\t,DuracionTurno\n\t)\nSELECT ${msg.IdCelda}\n    ,${msg.Componentes}\n\t,'${msg.FechaAdmScada}'\n\t,${msg.ClaTurno}\n\t,'${msg.Hora}'\n\t,${msg.Duracion}\nWHERE NOT EXISTS (SELECT 1\n \t\t\t\t\tFROM ASWLite_TraIndicadorOEE\n \t\t\t\t\tWHERE IdCelda=${msg.IdCelda} \n \t\t\t\t\t\tAND FechaAdmScada='${msg.FechaAdmScada}'\n \t\t\t\t\t\tAND ClaTurno=${msg.ClaTurno}\n \t\t\t\t\t\tAND Hora='${msg.Hora}'\n \t\t\t\t\t)\n `;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 800,
        "y": 140,
        "wires": [
            [
                "c2fe741a.a51b88"
            ]
        ]
    },
    {
        "id": "c2fe741a.a51b88",
        "type": "sqlite",
        "z": "7d171618.276858",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 990,
        "y": 140,
        "wires": [
            [
                "94e49840.697568"
            ]
        ]
    },
    {
        "id": "94e49840.697568",
        "type": "function",
        "z": "7d171618.276858",
        "name": "InfoOeeDet",
        "func": "msg.topic=`\n;WITH cte AS(\nSELECT MAX([TiempoAcumulado]) AS [TiempoAcumulado]\n\t,SUM([TiempoParo]) AS [TiempoParo]\n\t,SUM([TiempoParoAcumulado]) AS [TiempoParoAcumulado]\n\t,SUM([TiempoParoAfecta]) AS [TiempoParoAfecta]\n\t,SUM([TiempoParoAfectaAcumulado]) AS [TiempoParoAfectaAcumulado]\n\t,AVG([Disponibilidad]) AS [Disponibilidad]\n\t,AVG([DisponibilidadAcumulado]) AS [DisponibilidadAcumulado]\n\t,SUM([Capacidad]) AS [Capacidad]\n\t,MAX([ClavosCaja]) AS [ClavosCaja]\n\t,MAX([PesoCaja]) AS [PesoCaja]\n\t,SUM([CapacidadCaja]) AS [CapacidadCaja]\n\t,SUM([CajasProducidas]) AS [CajasProducidas]\n\t,SUM([CajasEsperadas]) AS [CajasEsperadas]\n\t,SUM([CajasProducidasAcumulado]) AS [CajasProducidasAcumulado]\n\t,SUM([CajasEsperadasAcumulado]) AS [CajasEsperadasAcumulado]\n\t,CASE WHEN SUM([CajasProducidas])/SUM([CajasEsperadas])>1 THEN 100 ELSE SUM([CajasProducidas])/SUM([CajasEsperadas])*100 END AS [Performance]\n\t,CASE WHEN SUM([CajasProducidasAcumulado])/SUM([CajasEsperadasAcumulado])>1 THEN 100 ELSE SUM([CajasProducidasAcumulado])/SUM([CajasEsperadasAcumulado])*100 END AS [PerformanceAcumulado]\t\n\t,SUM([PesoCajasProducidas]) AS [PesoCajasProducidas]\n\t,SUM([PesoCajasEsperadas]) AS [PesoCajasEsperadas]\n\t,SUM([PesoCajasProducidasAcumulado]) AS [PesoCajasProducidasAcumulado]\n\t,SUM([PesoCajasEsperadasAcumulado]) AS [PesoCajasEsperadasAcumulado]\n\t,SUM([PesoScrap]) AS [PesoScrap]\n\t,SUM([PesoScrapAcumulado]) AS [PesoScrapAcumulado]\n\t,AVG([Calidad]) AS [Calidad]\n\t,AVG([CalidadAcumulado]) AS [CalidadAcumulado]\nFROM [ASWLite_TraIndicadorOEEDet] \nWHERE IdCelda=${msg.IdCelda} \n\tAND FechaAdmScada='${msg.FechaAdmScada}'\n\tAND ClaTurno=${msg.ClaTurno}\n\tAND Hora='${msg.Hora}' \n)\nUPDATE ASWLite_TraIndicadorOEE\nSET TiempoAcumulado= (SELECT COALESCE(TiempoAcumulado,0) FROM cte)\n\t,TiempoParo = (SELECT COALESCE(TiempoParo,0) FROM cte)\n\t,TiempoParoAcumulado = (SELECT COALESCE(TiempoParoAcumulado,0) FROM cte)\n\t,TiempoParoAfecta = (SELECT COALESCE(TiempoParoAfecta,0) FROM cte)\n\t,TiempoParoAfectaAcumulado = (SELECT COALESCE(TiempoParoAfectaAcumulado,0) FROM cte)\n\t,Disponibilidad = (SELECT COALESCE(Disponibilidad,0) FROM cte)\n\t,DisponibilidadAcumulado = (SELECT COALESCE(DisponibilidadAcumulado,0) FROM cte)\n\t,Capacidad = (SELECT COALESCE(Capacidad,0) FROM cte)\n\t,ClavosCaja = (SELECT COALESCE(ClavosCaja,0) FROM cte)\n\t,PesoCaja = (SELECT COALESCE(PesoCaja,0) FROM cte)\n\t,CapacidadCaja = (SELECT COALESCE(CapacidadCaja,0) FROM cte)\n\t,CajasProducidas = (SELECT COALESCE(CajasProducidas,0) FROM cte)\n\t,CajasEsperadas = (SELECT COALESCE(CajasEsperadas,0) FROM cte)\n\t,CajasProducidasAcumulado = (SELECT COALESCE(CajasProducidasAcumulado,0) FROM cte)\n\t,CajasEsperadasAcumulado = (SELECT COALESCE(CajasEsperadasAcumulado,0) FROM cte)\n\t,Performance = (SELECT COALESCE(Performance,0) FROM cte)\n\t,PerformanceAcumulado = (SELECT COALESCE(PerformanceAcumulado,0) FROM cte)\n\t,PesoCajasProducidas = (SELECT COALESCE(PesoCajasProducidas,0) FROM cte)\n\t,PesoCajasEsperadas = (SELECT COALESCE(PesoCajasEsperadas,0) FROM cte)\n\t,PesoCajasProducidasAcumulado = (SELECT COALESCE(PesoCajasProducidasAcumulado,0) FROM cte)\n\t,PesoCajasEsperadasAcumulado = (SELECT COALESCE(PesoCajasEsperadasAcumulado,0) FROM cte)\n\t,PesoScrap = (SELECT COALESCE(PesoScrap,0) FROM cte)\n\t,PesoScrapAcumulado = (SELECT COALESCE(PesoScrapAcumulado,0) FROM cte)\n\t,Calidad = (SELECT COALESCE(Calidad,0) FROM cte)\n\t,CalidadAcumulado = (SELECT COALESCE(CalidadAcumulado,0) FROM cte)\nWHERE IdCelda=${msg.IdCelda} \n\tAND FechaAdmScada='${msg.FechaAdmScada}'\n\tAND ClaTurno=${msg.ClaTurno}\n    AND Hora='${msg.Hora}' \n`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 790,
        "y": 200,
        "wires": [
            [
                "eaf93779.dce7a8"
            ]
        ]
    },
    {
        "id": "eaf93779.dce7a8",
        "type": "sqlite",
        "z": "7d171618.276858",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 990,
        "y": 200,
        "wires": [
            [
                "2d00bc0d.2d5294"
            ]
        ]
    },
    {
        "id": "c1d4b77f.d07958",
        "type": "sqlite",
        "z": "7d171618.276858",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 990,
        "y": 260,
        "wires": [
            [
                "9017203c.e9e"
            ]
        ]
    },
    {
        "id": "2d00bc0d.2d5294",
        "type": "function",
        "z": "7d171618.276858",
        "name": "InfoOee",
        "func": "msg.topic=`\nUPDATE ASWLite_TraIndicadorOEE\nSET Oee=Disponibilidad*Performance*Calidad/100/100\n    ,OeeAcumulado=DisponibilidadAcumulado*PerformanceAcumulado*CalidadAcumulado/100/100\nWHERE IdCelda=${msg.IdCelda} \n\tAND FechaAdmScada='${msg.FechaAdmScada}'\n\tAND ClaTurno=${msg.ClaTurno}\n\tAND Hora='${msg.Hora}' \n`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 780,
        "y": 260,
        "wires": [
            [
                "c1d4b77f.d07958"
            ]
        ]
    },
    {
        "id": "a32b20a0.5b8ff",
        "type": "sqlite",
        "z": "7d171618.276858",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 990,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "9017203c.e9e",
        "type": "function",
        "z": "7d171618.276858",
        "name": "InfoControl",
        "func": "msg.topic=`\nUPDATE ASWLite_TraIndicadorOEE\nSET ClaEstatusReplica=1\n    ,FechaUltimaMod = DATETIME('now','localtime')\n    ,NombrePcMod = 'RB'\nWHERE IdCelda=${msg.IdCelda} \n\tAND FechaAdmScada='${msg.FechaAdmScada}'\n\tAND ClaTurno=${msg.ClaTurno}\n\tAND Hora='${msg.Hora}' \n`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 790,
        "y": 320,
        "wires": [
            [
                "a32b20a0.5b8ff"
            ]
        ]
    },
    {
        "id": "f835784b.094d78",
        "type": "join",
        "z": "7d171618.276858",
        "name": "",
        "mode": "auto",
        "build": "string",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": "false",
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "x": 620,
        "y": 140,
        "wires": [
            [
                "49e5849e.a4daec"
            ]
        ]
    },
    {
        "id": "c380d01a859c8d79",
        "type": "catch",
        "z": "7d171618.276858",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 100,
        "y": 1040,
        "wires": [
            [
                "6df6baf686c07412"
            ]
        ]
    },
    {
        "id": "6df6baf686c07412",
        "type": "function",
        "z": "7d171618.276858",
        "name": "Error Handler",
        "func": "node.warn(`ERROR NO CONTROLADO >  ${env.get(\"NAME\")} > ${JSON.stringify(msg)}`)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 1040,
        "wires": [
            []
        ]
    },
    {
        "id": "e953df83.4a26d",
        "type": "sqlite",
        "z": "761998e1.8728f8",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 1040,
        "y": 380,
        "wires": [
            [
                "2b518bb6.da5024"
            ]
        ]
    },
    {
        "id": "16b1d7c2.835d28",
        "type": "switch",
        "z": "761998e1.8728f8",
        "name": "Accion",
        "property": "payload[0].Accion",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1350,
        "y": 380,
        "wires": [
            [
                "5ac2fccbc13e83fc"
            ],
            [
                "e001650a.c9b8c8"
            ]
        ],
        "outputLabels": [
            "ABRIR",
            "CERRAR"
        ]
    },
    {
        "id": "2b518bb6.da5024",
        "type": "function",
        "z": "761998e1.8728f8",
        "name": "FORMAT",
        "func": "let Datos = msg.payload[0];\n\n//REMOVEMOS LAS COLUMNAS CON DATOS EN NULL \nObject.keys(Datos).forEach((key) => (Datos[key] == null) && delete Datos[key]);\n\nmsg.payload = [Datos];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1190,
        "y": 380,
        "wires": [
            [
                "16b1d7c2.835d28"
            ]
        ]
    },
    {
        "id": "965e66a4.ac6f78",
        "type": "function",
        "z": "761998e1.8728f8",
        "name": "fnParseUpdate",
        "func": "let Datos = msg.payload //[{\"nombretabla\":\"ASWLite_TraOrdenProduccion\",\"ClaUbicacion\":\"68\",\"IdPO\":3,\"IdCelda\":\"1\",\"ClaArticulo\":\"611645\",\"ClaveArticulo\":\"611645\",\"Orden\":\"3\",\"ClaEstatus\":\"1\",\"BajaLogica\":\"0\",\"ClaUsuarioMod\":\"0\",\"NombrePcMod\":\"302NGALAZ\",\"FechaUltimaMod\":\"2020-03-05T01:43:57.713\"}]\nDatos = Datos[0];\nlet NombreTabla = Datos.nombretabla;\nlet CteStr = 'WITH CteTmp (';\nlet CteSelectStr = 'AS ( SELECT '\nlet UpdateStr = `UPDATE ${NombreTabla} SET `;\nlet CamposUpdateStr = '';\nlet WhereUpdateStr = ''\nlet QryFinal = '';\n//LISTA DE CAMPOS DE LA CTE\nObject.keys(Datos).forEach((key,idx) => {\n    if(key != 'nombretabla'){\n        CteStr += key,idx;\n        CteStr += (idx != (Object.keys(Datos).length -1) ) ? ',':') ';\n        CteSelectStr += (typeof(Datos[key]) == 'string') ? `'${Datos[key]}'` : `${Datos[key]}`;\n        CteSelectStr += (idx != (Object.keys(Datos).length -1) ) ? ',':') ';\n    }\n});\n\n//COMPLETAMOS STRING PARA CREAR CTE\nCteStr += CteSelectStr;\n\nObject.keys(Datos).forEach((key,idx) => {\n    let campo = key;\n    let valor = (typeof(Datos[key]) == 'string') ? `'${Datos[key]}'` : Datos[key];\n    if(campo != 'nombretabla'){\n        CamposUpdateStr += `${key} = (SELECT ${campo} FROM CteTmp )`\n        CamposUpdateStr += (idx != (Object.keys(Datos).length -1) ) ? ',':' ';\n    }\n    \n})\n//AGREGAMOS CLAUSULA WHERE AL UPDATE\nWhereUpdateStr = ` WHERE IdBitProduccion =  ${Datos[\"IdBitProduccion\"]}  `\n\n//COMPLETAR UPDATE\nUpdateStr += CamposUpdateStr + WhereUpdateStr;\n\n//COMPLETAR QUERY\nQryFinal = CteStr+UpdateStr;\n\n\n//msg.payload={NombreTabla,CteStr,CteSelectStr,CamposUpdateStr,WhereUpdateStr,UpdateStr}\nmsg.topic=QryFinal;\nreturn msg;\n\n\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1600,
        "y": 460,
        "wires": [
            [
                "7606745.7f1008c"
            ]
        ],
        "info": "CREA EL UPDATE A EJECUTAR PARA ACTUALIZAR ORDENES DE TRABAJO\n *    ** SOLO PROCESA UN REGISTRO**"
    },
    {
        "id": "df990038.056c1",
        "type": "subflow:1ae9450.7021cbb",
        "z": "761998e1.8728f8",
        "name": "",
        "x": 2870,
        "y": 240,
        "wires": [
            [
                "b3e9f9c9.92ee68"
            ]
        ]
    },
    {
        "id": "233c755c.7f9a4a",
        "type": "function",
        "z": "761998e1.8728f8",
        "name": "QuitarAccion",
        "func": "\ndelete msg.payload[0].Accion\ndelete msg.payload[0].DescAccion\n//node.warn(\"ABRIR REGISTRO\")\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 2710,
        "y": 240,
        "wires": [
            [
                "df990038.056c1"
            ]
        ]
    },
    {
        "id": "e001650a.c9b8c8",
        "type": "function",
        "z": "761998e1.8728f8",
        "name": "QuitarAccion",
        "func": "\ndelete msg.payload[0].Accion\ndelete msg.payload[0].DescAccion\n//node.warn(\"CERRAR REGISTRO\")\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1430,
        "y": 460,
        "wires": [
            [
                "965e66a4.ac6f78"
            ]
        ]
    },
    {
        "id": "b3e9f9c9.92ee68",
        "type": "sqlite",
        "z": "761998e1.8728f8",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 3010,
        "y": 240,
        "wires": [
            [
                "b92df669.940908"
            ]
        ]
    },
    {
        "id": "7606745.7f1008c",
        "type": "sqlite",
        "z": "761998e1.8728f8",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 1750,
        "y": 460,
        "wires": [
            [
                "e0548fd3.4e0b4",
                "39bdd9ae.a777f6"
            ]
        ]
    },
    {
        "id": "815eae26.d43a1",
        "type": "link in",
        "z": "761998e1.8728f8",
        "name": "",
        "links": [
            "e0548fd3.4e0b4"
        ],
        "x": 295,
        "y": 500,
        "wires": [
            [
                "29f2d14c.d6d98e"
            ]
        ]
    },
    {
        "id": "e0548fd3.4e0b4",
        "type": "link out",
        "z": "761998e1.8728f8",
        "name": "",
        "links": [
            "815eae26.d43a1"
        ],
        "x": 1855,
        "y": 460,
        "wires": []
    },
    {
        "id": "1362bd83.91f622",
        "type": "function",
        "z": "761998e1.8728f8",
        "name": "setComponenteYEvento",
        "func": "msg.IdComponente = msg.payload.IdComponente\nmsg.Evento = msg.payload.Evento\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 380,
        "wires": [
            [
                "29f2d14c.d6d98e"
            ]
        ]
    },
    {
        "id": "29f2d14c.d6d98e",
        "type": "http request",
        "z": "761998e1.8728f8",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": true,
        "url": "http://localhost:18800/plc/CU2_Pag3_ConsultaVariable",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 410,
        "y": 380,
        "wires": [
            [
                "59273e8f.2768c"
            ]
        ]
    },
    {
        "id": "59273e8f.2768c",
        "type": "function",
        "z": "761998e1.8728f8",
        "name": "setProductionData",
        "func": "\nif(!msg.hasOwnProperty(\"Clavos\")){\n    let datos = JSON.parse(msg.payload);\n   \n    msg.Clavos = datos[msg.IdComponente]['UNIT_PRODUCTION']||null;\n    msg.Cajas =  datos[msg.IdComponente]['PACK_PRODUCTION']||null;\n    \n   \n}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 380,
        "wires": [
            [
                "d3231a14301789a9",
                "2a17ad7c1698daff"
            ]
        ]
    },
    {
        "id": "b92df669.940908",
        "type": "function",
        "z": "761998e1.8728f8",
        "name": "SalidaAbreRegistro",
        "func": "msg.payload = \"ABRE_REGISTRO\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 3180,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "39bdd9ae.a777f6",
        "type": "function",
        "z": "761998e1.8728f8",
        "name": "SalidaEvento",
        "func": "msg.payload = msg.Evento\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1910,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "d3231a14301789a9",
        "type": "function",
        "z": "761998e1.8728f8",
        "name": "qryRevisarRegistro",
        "func": "msg.topic =`\nWITH CteCajas (IdComponente,Produccion) AS (\n    SELECT  ${msg.IdComponente} AS IdComponente\n           ,${msg.Cajas} as Produccion\n)\nSELECT 'AswLite_BitProduccion'as nombretabla,\n       COALESCE(BP.IdBitProduccion,NULL) as IdBitProduccion,\n       CASE WHEN BP.IdBitProduccion IS NULL THEN ${global.get(\"ClaUbicacion\")} ELSE NULL END AS ClaUbicacion,\n       ${global.get('celda')} AS IdCelda,\n       CASE WHEN BP.IdBitProduccion IS NULL THEN 1 ELSE 2 END as Accion,\n       CASE WHEN BP.IdBitProduccion IS NULL THEN 'ABRIR' ELSE 'CERRAR' END as DescAccion,\n       TBLVAR.IdComponente,\n       CASE WHEN BP.IdBitProduccion IS NULL THEN TBLVAR.IdPO ELSE NULL END AS IdPO,\n       CASE WHEN BP.IdBitProduccion IS NULL THEN TBLVAR.IdUnidadCaja ELSE NULL END AS IdCaja,\n       CASE WHEN BP.IdBitProduccion IS NULL THEN TBLVAR.ClaArticulo ELSE NULL END AS ClaArticulo,\n       CASE WHEN BP.IdBitProduccion IS NOT NULL THEN '${msg.Evento}' ELSE NULL END AS ClaveCorte,\n       CASE WHEN BP.IdBitProduccion IS NULL THEN DATETIME('now','localtime') ELSE NULL END AS FechaHoraInicio,\n       CASE WHEN BP.IdBitProduccion IS NOT NULL THEN DATETIME('now','localtime') ELSE NULL END AS FechaHoraFIN,\n       CASE WHEN BP.IdBitProduccion IS NOT NULL THEN strftime('%s',DATETIME('now','localtime')) - strftime('%s',BP.FechaHoraInicio)  END AS DuracionSegundos,\n       CASE WHEN BP.IdBitProduccion IS NULL THEN ${msg.Clavos} ELSE NULL END as ClavosInicio,\n       CASE WHEN BP.IdBitProduccion IS NOT NULL THEN ${msg.Clavos} ELSE NULL END as ClavosFin,\n       CASE WHEN BP.IdBitProduccion IS NULL THEN CAJAS.Produccion ELSE NULL END as CajasInicio,\n       CASE WHEN BP.IdBitProduccion IS NOT NULL THEN CAJAS.Produccion ELSE NULL END as CajasFin,\n       CASE WHEN BP.IdBitProduccion IS NOT NULL THEN TBLVAR.CajasXHora ELSE NULL END as CajasXHora,\n       CASE WHEN BP.IdBitProduccion IS NULL THEN TBLVAR.ClaTurno ELSE NULL END as ClaTurno,\n       CASE WHEN BP.IdBitProduccion IS NULL THEN TBLVAR.FechaAdministrativa ELSE NULL END as FechaAdm,\n       0 AS Hora,\n       1 AS ClaEstatusReplica,\n       0 AS BajaLogica,\n       NULL AS FechaBajaLogica,\n       0 AS ClaUsuarioMod,\n       0 AS NombrePCMod,\n       DATETIME('now','localtime') AS FechaUltimaMod\nFROM ASWLite_VariablesProduccion TBLVAR\nLEFT JOIN AswLite_BitProduccion BP\n    ON BP.IdComponente = TBLVAR.IdComponente\n    AND BP.FechaHoraFin IS NULL\n    AND COALESCE(BP.BajaLogica,0)=0  \nLEFT JOIN CteCajas as CAJAS\n    ON TBLVAR.IdComponente = CAJAS.IdComponente\nWHERE TBLVAR.IdComponente = ${msg.IdComponente}\n    \n`\n\nnode.warn(msg.topic)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 830,
        "y": 380,
        "wires": [
            [
                "e953df83.4a26d"
            ]
        ]
    },
    {
        "id": "5ac2fccbc13e83fc",
        "type": "function",
        "z": "761998e1.8728f8",
        "name": "FnActualizaFolioBitacora",
        "func": "msg.topic = `UPDATE AswLite_CatFolioBitacora\nSET Folio = Folio + 1\nWHERE ClaveFolioBitacora = 'FolBitProd' `\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1470,
        "y": 240,
        "wires": [
            [
                "b6fca265906a32c4"
            ]
        ]
    },
    {
        "id": "b6fca265906a32c4",
        "type": "subflow:10996779f0a53f03",
        "z": "761998e1.8728f8",
        "name": "",
        "x": 1660,
        "y": 240,
        "wires": [
            [
                "a01b271408d57ecb"
            ]
        ]
    },
    {
        "id": "3ef01ee4c47f1461",
        "type": "function",
        "z": "761998e1.8728f8",
        "name": "ObtenerFolio",
        "func": "msg.topic = `SELECT Folio FROM AswLite_CatFolioBitacora WHERE ClaveFolioBitacora = 'FolBitProd' `\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2090,
        "y": 240,
        "wires": [
            [
                "a122dc847b409b4d"
            ]
        ]
    },
    {
        "id": "a122dc847b409b4d",
        "type": "sqlite",
        "z": "761998e1.8728f8",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 2250,
        "y": 240,
        "wires": [
            [
                "b8e9314c3213bdc5"
            ]
        ]
    },
    {
        "id": "a01b271408d57ecb",
        "type": "change",
        "z": "761998e1.8728f8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payloadOriginal",
                "pt": "msg",
                "to": "payload",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1870,
        "y": 240,
        "wires": [
            [
                "3ef01ee4c47f1461"
            ]
        ]
    },
    {
        "id": "b8e9314c3213bdc5",
        "type": "function",
        "z": "761998e1.8728f8",
        "name": "AgregarIdBitProduccion",
        "func": "//asignamos el Folio obtenido como IdBitProduccion y retornamos el payload original\n\nlet nuevoFolio = msg.payload[0].Folio\n\nmsg.payloadOriginal[0][\"IdBitProduccion\"] = nuevoFolio\n\nmsg.payload = msg.payloadOriginal\n\ndelete msg.payloadOriginal\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2450,
        "y": 240,
        "wires": [
            [
                "233c755c.7f9a4a"
            ]
        ]
    },
    {
        "id": "b84ad6e9fcf03f59",
        "type": "catch",
        "z": "761998e1.8728f8",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 80,
        "y": 640,
        "wires": [
            [
                "fb110e688af687ea"
            ]
        ]
    },
    {
        "id": "fb110e688af687ea",
        "type": "function",
        "z": "761998e1.8728f8",
        "name": "Error Handler",
        "func": "node.warn(`ERROR NO CONTROLADO >  ${env.get(\"NAME\")} > ${JSON.stringify(msg)}`)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "2a17ad7c1698daff",
        "type": "function",
        "z": "761998e1.8728f8",
        "name": "KeySearch",
        "func": "let obj = {\n  IdComponente: msg.IdComponente,   \n  Cajas: msg.Cajas,\n  ClaUbicacion : global.get('ClaUbicacion'),\n  celda : global.get('celda'),\n  Evento : msg.Evento,\n  Clavos : msg.Clavos\n};\nlet missing = [];\nObject.keys(obj).forEach(key => {\n  if(obj[key]==undefined){\n      missing.push(key);\n  }\n});\nmsg.payload = missing;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 240,
        "wires": [
            [
                "eb68c9dc40167675"
            ]
        ]
    },
    {
        "id": "eb68c9dc40167675",
        "type": "function",
        "z": "761998e1.8728f8",
        "name": "AlertMsg",
        "func": "if(msg.payload.length>0){\n    node.warn(`Los campos ${msg.payload} no están definidos`)\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1180,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "c24a2d3eadd9aa39",
        "type": "switch",
        "z": "86ffa80d.aef248",
        "name": "Evento",
        "property": "variablesCheck.Evento",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "CambioTurno",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "ChangeOver",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 320,
        "y": 80,
        "wires": [
            [
                "a49765fa14469ae0"
            ],
            [
                "0427730c81b8d299"
            ]
        ]
    },
    {
        "id": "2b83f60291e823e6",
        "type": "function",
        "z": "86ffa80d.aef248",
        "name": "CheckOut",
        "func": "msg.topic = `\n;WITH Turno AS (\n\tSELECT Duracion AS TiempoTurno\n\tFROM ASWLite_CatTurno\n\tWHERE ClaTurno = ${msg.variablesCheck.ClaTurnoAnt}\n)\n,Ordenes AS (\n\tSELECT COUNT(DISTINCT OP.IdPO) AS Ordenes\n\tFROM ASWLite_TraOrdenProduccion OP\n\tJOIN ASWLite_TraOrdenProduccionDet OPD\n\t\tON OP.ClaUbicacion = OPD.ClaUbicacion\n\t\tAND OP.IdPO = OPD.IdPO\n\tWHERE OPD.FechaInicioAdm = '${msg.variablesCheck.FechaAdmAnt}'\n\t\tAND ClaTurno = ${msg.variablesCheck.ClaTurnoAnt}\n)\n,Produccion AS (\n\tSELECT COUNT(IdUnidad) AS CajasProducidas\n\t\t,MIN(OPD.FechaInicioReal) AS FechaInicioProd\n\t\t,MAX(OPD.FechaFinReal) AS FechaFinProd\n\t\t,MIN(OP.IdPO) AS IdPO\n\t--SELECT * \n\tFROM ASWLite_TraOrdenProduccion OP\n\tJOIN ASWLite_TraOrdenProduccionDet OPD\n\t\tON OP.ClaUbicacion = OPD.ClaUbicacion\n\t\tAND OP.IdPO = OPD.IdPO\n\tWHERE OPD.FechaInicioAdm = '${msg.variablesCheck.FechaAdmAnt}'\n\t\tAND ClaTurno = ${msg.variablesCheck.ClaTurnoAnt}\n\t\tAND ClaArticulo = ${msg.variablesCheck.ClaArticuloAnt}\n)\n,ParosHeaderA AS (\n\tSELECT CM.ClaMaquina AS IdComponente\n\t,ROUND(SUM(((julianday(DATETIME('now','localtime'))-julianday(BP.fechaHoraInicial))*24)),2) AS TiempoParo\n\tFROM ASWLite_CatWorkUnit CM\n\tLEFT JOIN AswLite_BitParos BP\n\t\tON BP.IdComponente = CM.ClaMaquina\n\t\tAND FechaAdmScada = '${msg.variablesCheck.FechaAdmAnt}'\n\t\tAND ClaTurno = ${msg.variablesCheck.ClaTurnoAnt}\n\t\tAND IdPOInicio = (SELECT IdPO FROM Produccion)\n\tWHERE CM.ClaTipoMaquina=1\n\t\tAND CM.ABCMachine = 'A'\n\tGROUP BY BP.IdComponente\n)\n,ParosThreaderA AS (\n\tSELECT CM.ClaMaquina AS IdComponente\n\t\t,ROUND(SUM(((julianday(DATETIME('now','localtime'))-julianday(BP.fechaHoraInicial))*24)),2) AS TiempoParo\n\tFROM ASWLite_CatWorkUnit CM\n\tLEFT JOIN AswLite_BitParos BP\n\t\tON BP.IdComponente = CM.ClaMaquina\n\t\tAND FechaAdmScada = '${msg.variablesCheck.FechaAdmAnt}'\n\t\tAND ClaTurno = ${msg.variablesCheck.ClaTurnoAnt}\n\t\tAND IdPOInicio = (SELECT IdPO FROM Produccion)\n\tWHERE CM.ClaTipoMaquina=2\n\t\tAND CM.ABCMachine = 'A'\n\tGROUP BY BP.IdComponente\n)\n,ParosCollatorA AS (\n\tSELECT CM.ClaMaquina AS IdComponente\n\t\t,ROUND(SUM(((julianday(DATETIME('now','localtime'))-julianday(BP.fechaHoraInicial))*24)),2) AS TiempoParo\n\tFROM ASWLite_CatWorkUnit CM\n\tLEFT JOIN AswLite_BitParos BP\n\t\tON BP.IdComponente = CM.ClaMaquina\n\t\tAND FechaAdmScada = '${msg.variablesCheck.FechaAdmAnt}'\n\t\tAND ClaTurno = ${msg.variablesCheck.ClaTurnoAnt}\n\t\tAND IdPOInicio = (SELECT IdPO FROM Produccion)\n\tWHERE CM.ClaTipoMaquina=3\n\t\tAND CM.ABCMachine = 'A'\n\tGROUP BY BP.IdComponente\n)\n,ParosRobotA AS (\n\tSELECT CM.ClaMaquina AS IdComponente\n\t\t,ROUND(SUM(((julianday(DATETIME('now','localtime'))-julianday(BP.fechaHoraInicial))*24)),2) AS TiempoParo\n\tFROM ASWLite_CatWorkUnit CM\n\tLEFT JOIN AswLite_BitParos BP\n\t\tON BP.IdComponente = CM.ClaMaquina\n\t\tAND FechaAdmScada = '${msg.variablesCheck.FechaAdmAnt}'\n\t\tAND ClaTurno = ${msg.variablesCheck.ClaTurnoAnt}\n\t\tAND IdPOInicio = (SELECT IdPO FROM Produccion)\n\tWHERE CM.ClaTipoMaquina=6\n\t\tAND CM.ABCMachine = 'A'\n\tGROUP BY BP.IdComponente\n)\n,ParosHeaderB AS (\n\tSELECT CM.ClaMaquina AS IdComponente\n\t\t,ROUND(SUM(((julianday(DATETIME('now','localtime'))-julianday(BP.fechaHoraInicial))*24)),2) AS TiempoParo\n\tFROM ASWLite_CatWorkUnit CM\n\tLEFT JOIN AswLite_BitParos BP\n\t\tON BP.IdComponente = CM.ClaMaquina\n\t\tAND FechaAdmScada = '${msg.variablesCheck.FechaAdmAnt}'\n\t\tAND ClaTurno = ${msg.variablesCheck.ClaTurnoAnt}\n\t\tAND IdPOInicio = (SELECT IdPO FROM Produccion)\n\tWHERE CM.ClaTipoMaquina=1\n\t\tAND CM.ABCMachine = 'B'\n\tGROUP BY BP.IdComponente\n)\n,ParosThreaderB AS (\n\tSELECT CM.ClaMaquina AS IdComponente\n\t,ROUND(SUM(((julianday(DATETIME('now','localtime'))-julianday(BP.fechaHoraInicial))*24)),2) AS TiempoParo\n\tFROM ASWLite_CatWorkUnit CM\n\tLEFT JOIN AswLite_BitParos BP\n\t\tON BP.IdComponente = CM.ClaMaquina\n\t\tAND FechaAdmScada = '${msg.variablesCheck.FechaAdmAnt}'\n\t\tAND ClaTurno = ${msg.variablesCheck.ClaTurnoAnt}\n\t\tAND IdPOInicio = (SELECT IdPO FROM Produccion)\n\tWHERE CM.ClaTipoMaquina=2\n\t\tAND CM.ABCMachine = 'B'\n\tGROUP BY BP.IdComponente\n)\n,ParosCollatorB AS (\n\tSELECT CM.ClaMaquina AS IdComponente\n\t\t,ROUND(SUM(((julianday(DATETIME('now','localtime'))-julianday(BP.fechaHoraInicial))*24)),2) AS TiempoParo\n\tFROM ASWLite_CatWorkUnit CM\n\tLEFT JOIN AswLite_BitParos BP\n\t\tON BP.IdComponente = CM.ClaMaquina\n\t\tAND FechaAdmScada = '${msg.variablesCheck.FechaAdmAnt}'\n\t\tAND ClaTurno = ${msg.variablesCheck.ClaTurnoAnt}\n\t\tAND IdPOInicio = (SELECT IdPO FROM Produccion)\n\tWHERE CM.ClaTipoMaquina=3\n\t\tAND CM.ABCMachine = 'B'\n\tGROUP BY BP.IdComponente\n)\n,ParosRobotB AS (\n\tSELECT CM.ClaMaquina AS IdComponente\n\t\t,ROUND(SUM(((julianday(DATETIME('now','localtime'))-julianday(BP.fechaHoraInicial))*24)),2) AS TiempoParo\n\tFROM ASWLite_CatWorkUnit CM\n\tLEFT JOIN AswLite_BitParos BP\n\t\tON BP.IdComponente = CM.ClaMaquina\n\t\tAND FechaAdmScada = '${msg.variablesCheck.FechaAdmAnt}'\n\t\tAND ClaTurno = ${msg.variablesCheck.ClaTurnoAnt}\n\t\tAND IdPOInicio = (SELECT IdPO FROM Produccion)\n\tWHERE CM.ClaTipoMaquina=6\n\t\tAND CM.ABCMachine = 'B'\n\tGROUP BY BP.IdComponente\n)\n,Caracteristicas AS (\t\n    SELECT AG.ClaArticulo\n\t\t,AG.CajasSkid \n\tFROM ASWLite_CatArticuloGeneral AG\n\tWHERE AG.ClaArticulo = ${msg.variablesCheck.ClaArticuloAnt}\n\tLIMIT 1\n)\n,Usuario AS (\t\n\tSELECT IdUsuario\n\tFROM ASWLite_VariablesProduccion \n\tLIMIT 1\n)\n,Scrap AS (\t\n\tSELECT COALESCE(SUM(Peso),0) AS PesoScrap\n\tFROM ASWLite_TraScrap\n\tWHERE FechaAdmScada = '${msg.variablesCheck.FechaAdmAnt}'\n\t\tAND ClaTurno = ${msg.variablesCheck.ClaTurnoAnt}\n\t\tAND BajaLogica = 0\n\t\tAND IdPO = (SELECT IdPO FROM Produccion)\n)\nINSERT INTO [ASWLite_TraReporteProduccion]\n\t\t([IdCelda]\n\t\t,[FechaAdmScada]\n\t\t,[ClaTurno]\n\t\t,[TiempoTurno]\n\t\t,[OrdenesTurno] \n\t\t,[FechaHoraInicioProd]\n\t\t,[FechaHoraFinProd] \n\t\t,[IdComponente1]\n\t\t,[TiempoParo1]\n\t\t,[IdComponente2]\n\t\t,[TiempoParo2]\n\t\t,[IdComponente3]\n\t\t,[TiempoParo3]\n\t\t,[IdComponente4]\n\t\t,[TiempoParo4]\n\t\t,[IdComponente5]\n\t\t,[TiempoParo5]\n\t\t,[IdComponente6]\n\t\t,[TiempoParo6]\n\t\t,[IdComponente7]\n\t\t,[TiempoParo7]\n\t\t,[CajasProducidas]\n\t\t,[CajasSkid]\n\t\t,[ClaArticulo]\n\t\t,[PesoScrap]\n\t\t,[ClaTipoRegistro]\n\t\t,[ClaEstatusReplica]\n\t\t,[Evento]\n\t\t,[FechaUltimaMod]\n\t\t,[NombrePcMod]\n\t\t,[ClaUsuarioMod])\n\tSELECT\n\t\t${global.get('celda')}--IdCelda\n\t\t,'${msg.variablesCheck.FechaAdmAnt}'--FechaAdmScada\n\t\t,${msg.variablesCheck.ClaTurnoAnt}--ClaTurno\n\t\t,(SELECT TiempoTurno FROM Turno)\n\t\t,(SELECT Ordenes FROM Ordenes)\n\t\t,(SELECT FechaInicioProd FROM Produccion)\n\t\t,(SELECT FechaFinProd FROM Produccion)\n\t\t,(SELECT IdComponente FROM ParosHeaderA)\n        ,(SELECT TiempoParo FROM ParosHeaderA)\n        ,(SELECT IdComponente FROM ParosThreaderA)\n        ,(SELECT TiempoParo FROM ParosThreaderA)\n        ,(SELECT IdComponente FROM ParosCollatorA)\n        ,(SELECT TiempoParo FROM ParosCollatorA)\n        ,(SELECT IdComponente FROM ParosRobotA)\n        ,(SELECT TiempoParo FROM ParosRobotA)\n        ,(SELECT IdComponente FROM ParosHeaderB)\n        ,(SELECT TiempoParo FROM ParosHeaderB)\n        ,(SELECT IdComponente FROM ParosThreaderB)\n        ,(SELECT TiempoParo FROM ParosThreaderB)\n        ,(SELECT IdComponente FROM ParosCollatorB)\n        ,(SELECT TiempoParo FROM ParosCollatorB)\n\t\t,(SELECT COALESCE(CajasProducidas,0) FROM Produccion)\n\t\t,(SELECT CajasSkid FROM Caracteristicas)\n\t\t,(SELECT ClaArticulo FROM Caracteristicas)\n\t\t,(SELECT COALESCE(PesoScrap,0) FROM Scrap)\n\t\t,3--<ClaTipoRegistro, tinyint>\n\t\t,1--<ClaEstatusReplica, tinyint>\n\t\t,'${msg.variablesCheck.Evento}'\n\t\t,DATETIME('now','localtime')--<FechaUltimaMod, datetime>\n\t\t,'${global.get('NombrePcMod')}'--<NombrePcMod, varchar(64)>\n\t\t,(SELECT IdUsuario FROM Usuario)\n\tWHERE ${global.get('celda')} IS NOT NULL\n\t\tAND ${msg.variablesCheck.ClaTurnoAnt} IS NOT NULL\n\t\tAND '${msg.variablesCheck.FechaAdmAnt}' IS NOT NULL;\n`\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 40,
        "wires": [
            [
                "f97da0f05f3d6074",
                "fc6fa053e31e9a16"
            ]
        ]
    },
    {
        "id": "8309dbd7c46b7ba6",
        "type": "function",
        "z": "86ffa80d.aef248",
        "name": "CheckIn",
        "func": "msg.topic = `\n;WITH Caracteristicas AS (\t\n\tSELECT AG.ClaArticulo\n\t\t,AG.CajasSkid \n\tFROM ASWLite_CatArticuloGeneral AG\n\tWHERE AG.ClaArticulo = ${msg.variablesCheck.ClaArticuloAct}\n\tLIMIT 1\n)\n,Ordenes AS (\n\tSELECT COUNT(DISTINCT OP.IdPO) AS Ordenes\n\tFROM ASWLite_TraOrdenProduccion OP\n\tJOIN ASWLite_TraOrdenProduccionDet OPD\n\t\tON OP.ClaUbicacion = OPD.ClaUbicacion\n\t\tAND OP.IdPO = OPD.IdPO\n\tWHERE OPD.FechaInicioAdm = '${msg.variablesCheck.FechaAdmAct}'\n\t\tAND ClaTurno = ${msg.variablesCheck.ClaTurnoAct}\n)\n,Produccion AS (\n\tSELECT COUNT(IdUnidad) AS CajasProducidas\n\t\t,MIN(OPD.FechaInicioReal) AS FechaInicioProd\n\t\t,MAX(OPD.FechaFinReal) AS FechaFinProd\n\t\t,MIN(OP.IdPO) AS IdPO\n\t--SELECT * \n\tFROM ASWLite_TraOrdenProduccion OP\n\tJOIN ASWLite_TraOrdenProduccionDet OPD\n\t\tON OP.ClaUbicacion = OPD.ClaUbicacion\n\t\tAND OP.IdPO = OPD.IdPO\n\tWHERE OPD.FechaInicioAdm = '${msg.variablesCheck.FechaAdmAct}'\n\t\tAND ClaTurno = ${msg.variablesCheck.ClaTurnoAct}\n\t\tAND ClaArticulo = ${msg.variablesCheck.ClaArticuloAct}\n)\n,ParosHeaderA AS (\n\tSELECT CM.ClaMaquina AS IdComponente\n\t\t,0 AS TiempoParo\n\tFROM ASWLite_CatWorkUnit CM\n\tLEFT JOIN AswLite_BitParos BP\n\t\tON BP.IdComponente = CM.ClaMaquina\n\t\tAND FechaAdmScada = '${msg.variablesCheck.FechaAdmAct}'\n\t\tAND ClaTurno = ${msg.variablesCheck.ClaTurnoAct}\n\t\tAND IdPOInicio = (SELECT IdPO FROM Produccion)\n\tWHERE CM.ClaTipoMaquina=1\n\t\tAND CM.ABCMachine = 'A'\n\tGROUP BY BP.IdComponente\n)\n,ParosThreaderA AS (\n\tSELECT CM.ClaMaquina AS IdComponente\n\t\t,0 AS TiempoParo\n\tFROM ASWLite_CatWorkUnit CM\n\tLEFT JOIN AswLite_BitParos BP\n\t\tON BP.IdComponente = CM.ClaMaquina\n\t\tAND FechaAdmScada = '${msg.variablesCheck.FechaAdmAct}'\n\t\tAND ClaTurno = ${msg.variablesCheck.ClaTurnoAct}\n\t\tAND IdPOInicio = (SELECT IdPO FROM Produccion)\n\tWHERE CM.ClaTipoMaquina=2\n\t\tAND CM.ABCMachine = 'A'\n\tGROUP BY BP.IdComponente\n)\n,ParosCollatorA AS (\n\tSELECT CM.ClaMaquina AS IdComponente\n\t\t,0 AS TiempoParo\n\tFROM ASWLite_CatWorkUnit CM\n\tLEFT JOIN AswLite_BitParos BP\n\t\tON BP.IdComponente = CM.ClaMaquina\n\t\tAND FechaAdmScada = '${msg.variablesCheck.FechaAdmAct}'\n\t\tAND ClaTurno = ${msg.variablesCheck.ClaTurnoAct}\n\t\tAND IdPOInicio = (SELECT IdPO FROM Produccion)\n\tWHERE CM.ClaTipoMaquina=3\n\t\tAND CM.ABCMachine = 'A'\n\tGROUP BY BP.IdComponente\n)\n,ParosRobotA AS (\n\tSELECT CM.ClaMaquina AS IdComponente\n\t\t,0 AS TiempoParo\n\tFROM ASWLite_CatWorkUnit CM\n\tLEFT JOIN AswLite_BitParos BP\n\t\tON BP.IdComponente = CM.ClaMaquina\n\t\tAND FechaAdmScada = '${msg.variablesCheck.FechaAdmAnt}'\n\t\tAND ClaTurno = ${msg.variablesCheck.ClaTurnoAct}\n\t\tAND IdPOInicio = (SELECT IdPO FROM Produccion)\n\tWHERE CM.ClaTipoMaquina=6\n\t\tAND CM.ABCMachine = 'A'\n\tGROUP BY BP.IdComponente\n)\n,ParosHeaderB AS (\n\tSELECT CM.ClaMaquina AS IdComponente\n\t\t,0 AS TiempoParo\n\tFROM ASWLite_CatWorkUnit CM\n\tLEFT JOIN AswLite_BitParos BP\n\t\tON BP.IdComponente = CM.ClaMaquina\n\t\tAND FechaAdmScada = '${msg.variablesCheck.FechaAdmAnt}'\n\t\tAND ClaTurno = ${msg.variablesCheck.ClaTurnoAct}\n\t\tAND IdPOInicio = (SELECT IdPO FROM Produccion)\n\tWHERE CM.ClaTipoMaquina=1\n\t\tAND CM.ABCMachine = 'B'\n\tGROUP BY BP.IdComponente\n)\n,ParosThreaderB AS (\n\tSELECT CM.ClaMaquina AS IdComponente\n\t\t,0 AS TiempoParo\n\tFROM ASWLite_CatWorkUnit CM\n\tLEFT JOIN AswLite_BitParos BP\n\t\tON BP.IdComponente = CM.ClaMaquina\n\t\tAND FechaAdmScada = '${msg.variablesCheck.FechaAdmAnt}'\n\t\tAND ClaTurno = ${msg.variablesCheck.ClaTurnoAct}\n\t\tAND IdPOInicio = (SELECT IdPO FROM Produccion)\n\tWHERE CM.ClaTipoMaquina=2\n\t\tAND CM.ABCMachine = 'B'\n\tGROUP BY BP.IdComponente\n)\n,ParosCollatorB AS (\n\tSELECT CM.ClaMaquina AS IdComponente\n\t\t,0 AS TiempoParo\n\tFROM ASWLite_CatWorkUnit CM\n\tLEFT JOIN AswLite_BitParos BP\n\t\tON BP.IdComponente = CM.ClaMaquina\n\t\tAND FechaAdmScada = '${msg.variablesCheck.FechaAdmAnt}'\n\t\tAND ClaTurno = ${msg.variablesCheck.ClaTurnoAct}\n\t\tAND IdPOInicio = (SELECT IdPO FROM Produccion)\n\tWHERE CM.ClaTipoMaquina=3\n\t\tAND CM.ABCMachine = 'B'\n\tGROUP BY BP.IdComponente\n)\n,ParosRobotB AS (\n\tSELECT CM.ClaMaquina AS IdComponente\n\t\t,0 AS TiempoParo\n\tFROM ASWLite_CatWorkUnit CM\n\tLEFT JOIN AswLite_BitParos BP\n\t\tON BP.IdComponente = CM.ClaMaquina\n\t\tAND FechaAdmScada = '${msg.variablesCheck.FechaAdmAnt}'\n\t\tAND ClaTurno = ${msg.variablesCheck.ClaTurnoAct}\n\t\tAND IdPOInicio = (SELECT IdPO FROM Produccion)\n\tWHERE CM.ClaTipoMaquina=6\n\t\tAND CM.ABCMachine = 'B'\n\tGROUP BY BP.IdComponente\n)\n,Usuario AS (\t\n\tSELECT IdUsuario\n\tFROM ASWLite_VariablesProduccion \n\tLIMIT 1\n)\nINSERT INTO [ASWLite_TraReporteProduccion]\n\t\t([IdCelda]\n\t\t,[FechaAdmScada]\n\t\t,[ClaTurno]\n\t\t,[TiempoTurno]\n\t\t,[OrdenesTurno] \n\t\t,[FechaHoraInicioProd]\n\t\t,[FechaHoraFinProd] \n\t\t,[IdComponente1]\n\t\t,[TiempoParo1]\n\t\t,[IdComponente2]\n\t\t,[TiempoParo2]\n\t\t,[IdComponente3]\n\t\t,[TiempoParo3]\n\t\t,[IdComponente4]\n\t\t,[TiempoParo4]\n\t\t,[IdComponente5]\n\t\t,[TiempoParo5]\n\t\t,[IdComponente6]\n\t\t,[TiempoParo6]\n\t\t,[IdComponente7]\n\t\t,[TiempoParo7]\n\t\t,[CajasProducidas]\n\t\t,[CajasSkid]\n\t\t,[ClaArticulo]\n\t\t,[PesoScrap]\n\t\t,[ClaTipoRegistro]\n\t\t,[ClaEstatusReplica]\n\t\t,[Evento]\n\t\t,[FechaUltimaMod]\n\t\t,[NombrePcMod]\n\t\t,[ClaUsuarioMod])\n\tSELECT\n\t\t${global.get('celda')}--IdCelda\n\t\t,'${msg.variablesCheck.FechaAdmAct}'--FechaAdmScada\n\t\t,${msg.variablesCheck.ClaTurnoAct}--ClaTurno\n\t\t,0 AS TiempoTurno\n\t\t,(SELECT Ordenes FROM Ordenes)\n\t\t,(SELECT FechaInicioProd FROM Produccion)\n\t\t,(SELECT FechaFinProd FROM Produccion)\n\t\t,(SELECT IdComponente FROM ParosHeaderA)\n        ,(SELECT TiempoParo FROM ParosHeaderA)\n        ,(SELECT IdComponente FROM ParosThreaderA)\n        ,(SELECT TiempoParo FROM ParosThreaderA)\n        ,(SELECT IdComponente FROM ParosCollatorA)\n        ,(SELECT TiempoParo FROM ParosCollatorA)\n        ,(SELECT IdComponente FROM ParosRobotA)\n        ,(SELECT TiempoParo FROM ParosRobotA)\n        ,(SELECT IdComponente FROM ParosHeaderB)\n        ,(SELECT TiempoParo FROM ParosHeaderB)\n        ,(SELECT IdComponente FROM ParosThreaderB)\n        ,(SELECT TiempoParo FROM ParosThreaderB)\n        ,(SELECT IdComponente FROM ParosCollatorB)\n        ,(SELECT TiempoParo FROM ParosCollatorB)\n\t\t,0 AS CajasProducidas\n\t\t,(SELECT CajasSkid FROM Caracteristicas)\n\t\t,(SELECT ClaArticulo FROM Caracteristicas)\n\t\t,0 AS PesoScrap\n\t\t,1--<ClaTipoRegistro, tinyint>\n\t\t,1--<ClaEstatusReplica, tinyint>\n\t\t,'${msg.variablesCheck.Evento}'\n\t\t,DATETIME('now','localtime')--<FechaUltimaMod, datetime>\n\t\t,'${global.get('NombrePcMod')}'--<NombrePcMod, varchar(64)>\n\t\t,(SELECT IdUsuario FROM Usuario)\n\tWHERE ${global.get('celda')} IS NOT NULL\n\t\tAND ${msg.variablesCheck.ClaTurnoAct} IS NOT NULL\n\t\tAND '${msg.variablesCheck.FechaAdmAct}' IS NOT NULL;\n`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 140,
        "wires": [
            [
                "999af7ed0c8619b6",
                "fc6fa053e31e9a16"
            ]
        ]
    },
    {
        "id": "f97da0f05f3d6074",
        "type": "sqlite",
        "z": "86ffa80d.aef248",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 950,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "999af7ed0c8619b6",
        "type": "sqlite",
        "z": "86ffa80d.aef248",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 1110,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "586454cebe8a4ed6",
        "type": "delay",
        "z": "86ffa80d.aef248",
        "name": "",
        "pauseType": "delay",
        "timeout": "30",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 160,
        "y": 80,
        "wires": [
            [
                "c24a2d3eadd9aa39"
            ]
        ]
    },
    {
        "id": "c9e4baedb22fa85d",
        "type": "delay",
        "z": "86ffa80d.aef248",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 800,
        "y": 140,
        "wires": [
            [
                "8309dbd7c46b7ba6"
            ]
        ]
    },
    {
        "id": "fc6fa053e31e9a16",
        "type": "debug",
        "z": "86ffa80d.aef248",
        "d": true,
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 734,
        "y": 260,
        "wires": []
    },
    {
        "id": "0427730c81b8d299",
        "type": "switch",
        "z": "86ffa80d.aef248",
        "name": "CambioArticulo",
        "property": "variablesCheck.ClaArticuloAnt",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "variablesCheck.ClaArticuloAct",
                "vt": "msg"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 480,
        "y": 200,
        "wires": [
            [
                "2b83f60291e823e6",
                "c9e4baedb22fa85d"
            ]
        ]
    },
    {
        "id": "b3bcf76356740a88",
        "type": "comment",
        "z": "86ffa80d.aef248",
        "name": "",
        "info": "Solo si es cambio de articulo se registra un changeover en MCSW",
        "x": 460,
        "y": 240,
        "wires": []
    },
    {
        "id": "a49765fa14469ae0",
        "type": "function",
        "z": "86ffa80d.aef248",
        "name": "",
        "func": "msg.ClaTurno = global.get('ClaTurno');\nmsg.ClaArticulo = global.get('ClaArticulo');\nmsg.FechaAdm = global.get('FechaAdm');\nmsg.topic = `\nSELECT COUNT(1)\nFROM ASWLite_TraReporteProduccion\nWHERE ClaTipoRegistro = 1 \n    AND Evento = 'CambioTurno' \n    AND (ClaArticulo = ${msg.ClaArticulo || null} \n        OR ClaArticulo IS NULL)\n    AND FechaAdmScada = \"${msg.FechaAdm}\";\n`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 60,
        "wires": [
            [
                "57595511c5056892"
            ]
        ]
    },
    {
        "id": "57595511c5056892",
        "type": "sqlite",
        "z": "86ffa80d.aef248",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 530,
        "y": 100,
        "wires": [
            [
                "6df0c004f355e098"
            ]
        ]
    },
    {
        "id": "6df0c004f355e098",
        "type": "switch",
        "z": "86ffa80d.aef248",
        "name": "",
        "property": "payload[0][\"COUNT(*)\"]",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 530,
        "y": 140,
        "wires": [
            [
                "2b83f60291e823e6",
                "c9e4baedb22fa85d"
            ]
        ]
    },
    {
        "id": "90fd6f86495c7428",
        "type": "catch",
        "z": "86ffa80d.aef248",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 80,
        "y": 420,
        "wires": [
            [
                "937dee636b9c6121"
            ]
        ]
    },
    {
        "id": "937dee636b9c6121",
        "type": "function",
        "z": "86ffa80d.aef248",
        "name": "Error Handler",
        "func": "node.warn(`ERROR NO CONTROLADO >  ${env.get(\"NAME\")} > ${JSON.stringify(msg)}`)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "c048f2cb.5512",
        "type": "function",
        "z": "554af14f.5b6cb",
        "name": "setBatchCompleted",
        "func": "msg.payload = {IdComponente:parseInt(msg.IdComponente),dato:true}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1150,
        "y": 218,
        "wires": [
            [
                "cd8c338a.6ee7e"
            ]
        ]
    },
    {
        "id": "cd8c338a.6ee7e",
        "type": "http request",
        "z": "554af14f.5b6cb",
        "name": "BATCH_COMPLETED",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://localhost:18800/plc/BATCH_COMPLETED",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 1360,
        "y": 218,
        "wires": [
            [
                "41f53299.21f4dc"
            ]
        ]
    },
    {
        "id": "41f53299.21f4dc",
        "type": "function",
        "z": "554af14f.5b6cb",
        "name": "setBatchCompleted",
        "func": "msg.payload = {IdComponete:parseInt(msg.IdComponente),dato:false}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1590,
        "y": 218,
        "wires": [
            [
                "6b6ea1ce.c45f4"
            ]
        ]
    },
    {
        "id": "6b6ea1ce.c45f4",
        "type": "http request",
        "z": "554af14f.5b6cb",
        "name": "BATCH_COMPLETED",
        "method": "POST",
        "ret": "txt",
        "paytoqs": false,
        "url": "http://localhost:18800/plc/BATCH_COMPLETED",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 1820,
        "y": 218,
        "wires": [
            [
                "e0308195.75dea"
            ]
        ]
    },
    {
        "id": "e0308195.75dea",
        "type": "function",
        "z": "554af14f.5b6cb",
        "name": "recuperarPayload",
        "func": "\nmsg.payload = flow.get('payloadOrg');\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1150,
        "y": 278,
        "wires": [
            [
                "d9eb7cf0.cbb3c"
            ]
        ]
    },
    {
        "id": "d3c566fb.0369d8",
        "type": "http request",
        "z": "554af14f.5b6cb",
        "name": "ConsultaPLCComponentes",
        "method": "GET",
        "ret": "txt",
        "paytoqs": false,
        "url": "http://localhost:18800/plc/CU2_Pag3_ConsultaVariable",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 1341,
        "y": 158,
        "wires": [
            [
                "f14a8cd8.31bbd"
            ]
        ]
    },
    {
        "id": "f14a8cd8.31bbd",
        "type": "function",
        "z": "554af14f.5b6cb",
        "name": "FormatComponentes",
        "func": "let componentes = JSON.parse(msg.payload)\ndelete componentes.general\n\nmsg.payload = componentes\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1585,
        "y": 158,
        "wires": [
            [
                "20aae805.297bc8"
            ]
        ]
    },
    {
        "id": "20aae805.297bc8",
        "type": "split",
        "z": "554af14f.5b6cb",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "IdComponente",
        "x": 1766,
        "y": 158,
        "wires": [
            [
                "c048f2cb.5512"
            ]
        ]
    },
    {
        "id": "fdbec858.bfca28",
        "type": "http response",
        "z": "554af14f.5b6cb",
        "name": "reponseFinOp",
        "statusCode": "",
        "headers": {},
        "x": 1540,
        "y": 278,
        "wires": []
    },
    {
        "id": "8b59baad.108ec8",
        "type": "comment",
        "z": "554af14f.5b6cb",
        "name": "Hacer cambio de OP sin esperar paro",
        "info": "",
        "x": 191,
        "y": 98,
        "wires": []
    },
    {
        "id": "b8f1679c.736b08",
        "type": "function",
        "z": "554af14f.5b6cb",
        "name": "qryRevisarSiCambioOp",
        "func": "msg.topic = `\nSELECT 1 \nFROM ASWLite_VariablesProduccion TBLVAR\nJOIN ASWLite_TraOrdenProduccion OP\nON TBLVAR.IdPO = OP.IdPO\nWHERE OP.ClaEstatus = 2\n`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 264,
        "y": 181,
        "wires": [
            [
                "4c01c100.0606a"
            ]
        ]
    },
    {
        "id": "4c01c100.0606a",
        "type": "sqlite",
        "z": "554af14f.5b6cb",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 454,
        "y": 181,
        "wires": [
            [
                "7b780d1f.962814"
            ]
        ]
    },
    {
        "id": "7b780d1f.962814",
        "type": "switch",
        "z": "554af14f.5b6cb",
        "name": "isEmtpy",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "empty"
            },
            {
                "t": "nempty"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 584,
        "y": 181,
        "wires": [
            [
                "a5a489d7.a07dc8"
            ],
            [
                "983f935e.f44aa"
            ]
        ]
    },
    {
        "id": "983f935e.f44aa",
        "type": "http response",
        "z": "554af14f.5b6cb",
        "name": "responseNoHayCambio",
        "statusCode": "",
        "headers": {},
        "x": 851,
        "y": 281,
        "wires": []
    },
    {
        "id": "3dc5b9bd.c6e736",
        "type": "http request",
        "z": "554af14f.5b6cb",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": false,
        "url": "http://localhost:18800/sqlite/CU155_Pag2_DatosOp",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 1132,
        "y": 158,
        "wires": [
            [
                "d3c566fb.0369d8"
            ]
        ]
    },
    {
        "id": "bcad5832.f192e8",
        "type": "function",
        "z": "554af14f.5b6cb",
        "name": "FnMsgToPayload",
        "func": "let datos={}\n\nif (msg.payload && msg.payload.length > 0){\n    datos = {\n        FechaAdmAnt : msg.payload[0].FechaAdmAnt,\n        ClaTurnoAnt : msg.payload[0].ClaTurnoAnt,\n        ClaArticuloAnt : msg.payload[0].ClaArticuloAnt,\n        FechaAdmAct : msg.payload[0].FechaAdmAct,\n        ClaTurnoAct : msg.payload[0].ClaTurnoAct,\n        ClaArticuloAct : msg.payload[0].ClaArticuloAct,\n        Evento : 'ChangeOver'\n    }\n}\nelse{\n     datos = {\n        FechaAdmAnt : null,\n        ClaTurnoAnt : null,\n        ClaArticuloAnt : null,\n        FechaAdmAct : null,\n        ClaTurnoAct : null,\n        ClaArticuloAct : null,\n        Evento : 'ChangeOver'\n    }\n}\nmsg.payload = datos\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1150,
        "y": 38,
        "wires": [
            [
                "eaefc8b2.221d38"
            ]
        ]
    },
    {
        "id": "7e14b09.83f5e5",
        "type": "comment",
        "z": "554af14f.5b6cb",
        "name": "Finaliza batch e inicia caja",
        "info": "",
        "x": 1171,
        "y": 121,
        "wires": []
    },
    {
        "id": "49e6f4e2.d24ecc",
        "type": "comment",
        "z": "554af14f.5b6cb",
        "name": "changeOver",
        "info": "",
        "x": 811,
        "y": 41,
        "wires": []
    },
    {
        "id": "a5a489d7.a07dc8",
        "type": "function",
        "z": "554af14f.5b6cb",
        "name": "GetDatos",
        "func": "msg.topic=`WITH CteVaraibles AS(\n\tSELECT [ClaArticulo] AS ClaArticuloAnt\n\t\t,[ClaTurno] AS ClaTurnoAnt\n\t\t,[FechaAdministrativa] AS FechaAdmAnt\n\t\t,[ClaTurno] AS ClaTurnoAct\n\t\t,[FechaAdministrativa] AS FechaAdmAct\n\tFROM [ASWLite_VariablesProduccion]\n\tLIMIT 1\n)\n,CteOrdenProduccion AS(\n\tSELECT [ClaArticulo] AS ClaArticuloAct\n\tFROM [ASWLite_TraOrdenProduccion]\n\tWHERE ClaEstatus = 2\n)\n\nSELECT  ClaArticuloAnt\n\t\t,ClaTurnoAnt\n\t\t,FechaAdmAnt\n\t\t,ClaArticuloAct\n\t\t,ClaTurnoAct\n\t\t,FechaAdmAct\nFROM CteVaraibles VP\n,CteOrdenProduccion OP\n;`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 801,
        "y": 81,
        "wires": [
            [
                "aea71e86.1b845"
            ]
        ]
    },
    {
        "id": "aea71e86.1b845",
        "type": "sqlite",
        "z": "554af14f.5b6cb",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 951,
        "y": 81,
        "wires": [
            [
                "bcad5832.f192e8",
                "3dc5b9bd.c6e736"
            ]
        ]
    },
    {
        "id": "eaefc8b2.221d38",
        "type": "subflow:86ffa80d.aef248",
        "z": "554af14f.5b6cb",
        "name": "",
        "env": [],
        "x": 1400,
        "y": 38,
        "wires": []
    },
    {
        "id": "d9eb7cf0.cbb3c",
        "type": "subflow:9d73bd39.a6086",
        "z": "554af14f.5b6cb",
        "name": "",
        "env": [],
        "x": 1350,
        "y": 278,
        "wires": [
            [
                "fdbec858.bfca28"
            ]
        ]
    },
    {
        "id": "5abe31d227ccece1",
        "type": "catch",
        "z": "554af14f.5b6cb",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 100,
        "y": 480,
        "wires": [
            [
                "48327466e5335162"
            ]
        ]
    },
    {
        "id": "48327466e5335162",
        "type": "function",
        "z": "554af14f.5b6cb",
        "name": "Error Handler",
        "func": "node.warn(`ERROR NO CONTROLADO >  ${env.get(\"NAME\")} > ${JSON.stringify(msg)}`)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "fdc22f6e.4e246",
        "type": "function",
        "z": "2bb83287.f44a8e",
        "name": "qryDatosCajaTerminada",
        "func": "msg.topic = `select 'ASWLite_TraFinCajaMCSW' AS nombretabla\n        ,MAQ.IdWorkCenter AS ClaCelda \n        ,MAQ.ClaMaquina\n        ,PODET.ClaTurno\n        ,PODET.ClaUsuarioMod as IdUsuario\n        ,${msg.IdPO} as IdPO\n        ,${msg.ClavePO} as ClavePO\n        ,${msg.ClaEstatus} as ClaEstatus\n        ,${msg.IdCajaTerminada} as IdUnidadCaja\n        ,${msg.EsCajaManual} as EsCajaManual\n        ,TraPro.ClaArticulo\n        ,PODET.FechaInicioReal\n        ,PODET.FechaFinReal\n        ,PODET.IdMateriaPrimaInicio \n        ,PODET.IdMateriaPrimaFin \n        ,1 AS ClaEstatusReplica\n        ,'current' as FechaUltimaMod\n        ,PODET.ClaUsuarioMod as ClaUsuarioMod\n        ,'${global.get('NombrePcMod')}' as NombrePcMod\nfrom ASWLite_TraOrdenProduccion TraPro \njoin ASWLite_TraOrdenProduccionDet PODET \n    on TraPro.IdPO=PODET.IdPO\njoin ASWLite_CatWorkUnit MAQ \n    on MAQ.ClaMaquina=PODET.IdComponente\nwhere PODET.IdUnidad = ${msg.payload.IdCajaTerminada};`\n\n/*msg.topic = `\nSELECT  'ASWLite_TraFinCajaMCSW' AS nombretabla\n        ,MAQ.ClaCelda \n        ,MAQ.ClaMaquina\n        ,TBLVAR.ClaTurno\n        ,TBLVAR.IdUsuario\n        ,${msg.IdPO} as IdPO\n        ,${msg.ClavePO} as ClavePO\n        ,${msg.ClaEstatus} as ClaEstatus\n        ,${msg.IdCajaTerminada} as IdUnidadCaja\n        ,TBLVAR.ClaArticulo\n        ,PODET.FechaInicioReal\n        ,PODET.FechaFinReal\n        ,PODET.IdMateriaPrimaInicio \n        ,PODET.IdMateriaPrimaFin \n        ,1 AS ClaEstatusReplica\n        ,'current' as FechaUltimaMod\n        ,${global.get('ClaUsuarioMod')} as ClaUsuarioMod\n        ,'${global.get('NombrePcMod')}' as NombrePcMod\nFROM ASWLite_VariablesProduccion TBLVAR\nJOIN ASWLite_CatWorkUnit MAQ\nON TBLVAR.IdComponente = MAQ.ClaMaquina\nJOIN ASWLite_TraOrdenProduccionDet PODET\nON TBLVAR.IdComponente = PODET.IdComponente \nAND TBLVAR.IdPO = PODET.IdPO\nWHERE PODET.IdUnidad = ${msg.payload.IdCajaTerminada}\n`*/\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 160,
        "wires": [
            [
                "c4611c39.5234d"
            ]
        ]
    },
    {
        "id": "f8e2ed76.39eee",
        "type": "sqlite",
        "z": "2bb83287.f44a8e",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 890,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "327abafa.eb3b46",
        "type": "subflow:1ae9450.7021cbb",
        "z": "2bb83287.f44a8e",
        "name": "",
        "env": [],
        "x": 710,
        "y": 160,
        "wires": [
            [
                "f8e2ed76.39eee"
            ]
        ]
    },
    {
        "id": "c4611c39.5234d",
        "type": "sqlite",
        "z": "2bb83287.f44a8e",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 510,
        "y": 160,
        "wires": [
            [
                "327abafa.eb3b46"
            ]
        ]
    },
    {
        "id": "05378176fa6615c4",
        "type": "catch",
        "z": "2bb83287.f44a8e",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 140,
        "y": 280,
        "wires": [
            [
                "e425b4f68c43125d"
            ]
        ]
    },
    {
        "id": "e425b4f68c43125d",
        "type": "function",
        "z": "2bb83287.f44a8e",
        "name": "Error Handler",
        "func": "node.warn(`ERROR NO CONTROLADO >  ${env.get(\"NAME\")} > ${JSON.stringify(msg)}`)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "43bc25fb.1302dc",
        "type": "function",
        "z": "871820c8.db65d",
        "name": "GetDatosPO",
        "func": "msg.topic=`SELECT IdPOInicio\n\t,IdPOFin\n\t,IPI.ClaArticulo AS ClaArticuloInicio\n\t,IPF.ClaArticulo AS ClaArticuloFin\nFROM AswLite_BitParos BP\nJOIN ASWLite_TraOrdenProduccion IPI\n\tON BP.IdPOInicio = IPI.IdPO\nJOIN ASWLite_TraOrdenProduccion IPF\n\tON BP.IdPOFin = IPF.IdPO\nWHERE IdParo=${msg.IdParo}\n;`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 350,
        "y": 40,
        "wires": [
            [
                "cba11731.be4108"
            ]
        ]
    },
    {
        "id": "cba11731.be4108",
        "type": "sqlite",
        "z": "871820c8.db65d",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 501,
        "y": 40,
        "wires": [
            [
                "2d4d632b.516d1c"
            ]
        ]
    },
    {
        "id": "39b0c764.21b258",
        "type": "rbe",
        "z": "871820c8.db65d",
        "name": "EsNuevaPO",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "property": "payload[0].IdPOFin",
        "x": 803,
        "y": 40,
        "wires": [
            [
                "e207e420.4a92f8"
            ]
        ]
    },
    {
        "id": "e207e420.4a92f8",
        "type": "function",
        "z": "871820c8.db65d",
        "name": "DatosPOMsg",
        "func": "if (msg.payload && msg.payload.length > 0){\n    msg.ClaArticuloAnt = msg.payload[0].ClaArticuloInicio\n    msg.ClaArticuloAct = msg.payload[0].ClaArticuloFin\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 350,
        "y": 102,
        "wires": [
            [
                "b3ffe6d0.dd50f8"
            ]
        ]
    },
    {
        "id": "b3ffe6d0.dd50f8",
        "type": "function",
        "z": "871820c8.db65d",
        "name": "GetFechaTurno",
        "func": "msg.topic=`SELECT [ClaTurno]\n\t,[FechaAdministrativa]\nFROM [ASWLite_VariablesProduccion]\n;`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 520,
        "y": 102,
        "wires": [
            [
                "a47dbbeb.66a5d8"
            ]
        ]
    },
    {
        "id": "a47dbbeb.66a5d8",
        "type": "sqlite",
        "z": "871820c8.db65d",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 670,
        "y": 102,
        "wires": [
            [
                "68e56cff.658ee4"
            ]
        ]
    },
    {
        "id": "68e56cff.658ee4",
        "type": "function",
        "z": "871820c8.db65d",
        "name": "FechaTurnoEventoMsg",
        "func": "var date = new Date().toISOString();\ndate = date.replace(\"T\",\" \");\ndate = date.replace(\"Z\",\" \");\n\nif (msg.payload && msg.payload.length > 0){\n    msg.FechaAdmAnt = msg.payload[0].FechaAdministrativa\n    msg.ClaTurnoAnt = msg.payload[0].ClaTurno\n    msg.FechaAdmAct = msg.payload[0].FechaAdministrativa\n    msg.ClaTurnoAct = msg.payload[0].ClaTurno\n}\nelse\n{\n    msg.FechaAdmAnt = date;\n    msg.ClaTurnoAnt = 0;\n    msg.FechaAdmAct = date;\n    msg.ClaTurnoAct = 0;\n}    \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 102,
        "wires": [
            [
                "9d5fc5a1.90f0f8"
            ]
        ]
    },
    {
        "id": "252da7d4.44ff78",
        "type": "subflow:86ffa80d.aef248",
        "z": "871820c8.db65d",
        "name": "",
        "env": [],
        "x": 600,
        "y": 163,
        "wires": []
    },
    {
        "id": "9d5fc5a1.90f0f8",
        "type": "function",
        "z": "871820c8.db65d",
        "name": "FnMsgToPayload",
        "func": "msg.payload = {\n    FechaAdmAnt : msg.FechaAdmAnt,\n    ClaTurnoAnt : msg.ClaTurnoAnt,\n    ClaArticuloAnt : msg.ClaArticuloAnt,\n    FechaAdmAct : msg.FechaAdmAct,\n    ClaTurnoAct : msg.ClaTurnoAct,\n    ClaArticuloAct : msg.ClaArticuloAct,\n    Evento : 'ChangeOver'\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 370,
        "y": 163,
        "wires": [
            [
                "252da7d4.44ff78"
            ]
        ]
    },
    {
        "id": "2d4d632b.516d1c",
        "type": "function",
        "z": "871820c8.db65d",
        "name": "SetTopic",
        "func": "msg.topic = 'ChangeOver'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 640,
        "y": 40,
        "wires": [
            [
                "39b0c764.21b258"
            ]
        ]
    },
    {
        "id": "7a774595.50feec",
        "type": "switch",
        "z": "871820c8.db65d",
        "name": "EsCambioPO",
        "property": "payload.Evento",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "CAMBIOPO",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 180,
        "y": 47,
        "wires": [
            [
                "43bc25fb.1302dc"
            ],
            []
        ]
    },
    {
        "id": "e92288cb973f920d",
        "type": "catch",
        "z": "871820c8.db65d",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 80,
        "y": 320,
        "wires": [
            [
                "c564cd3cf9be7e63"
            ]
        ]
    },
    {
        "id": "c564cd3cf9be7e63",
        "type": "function",
        "z": "871820c8.db65d",
        "name": "Error Handler",
        "func": "node.warn(`ERROR NO CONTROLADO >  ${env.get(\"NAME\")} > ${JSON.stringify(msg)}`)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "b4c89dd0.22c31",
        "type": "http in",
        "z": "72c19d2d.532ce4",
        "name": "CU402_Pag2_DescargaBluePrint_Sel",
        "url": "/sqlite/CU402_Pag2_DescargaBluePrint_Sel",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 100,
        "wires": [
            [
                "d51deff3.a72d8",
                "b441a7ab.7588e8"
            ]
        ]
    },
    {
        "id": "d51deff3.a72d8",
        "type": "function",
        "z": "72c19d2d.532ce4",
        "name": "qryArticuloBluePrint",
        "func": "/*cada registro tiene la forma ClaArticulo,idBluePrint\n  si no hay blueprints para el articulo regresa -1 como IdBluePrint\n*/\nmsg.topic = `\nSELECT ART.ClaArticulo||','||COALESCE(PBP.idBluePrint ,'-1') as Clave\nFROM ASWLite_CatArticuloGeneral ART\nLEFT JOIN ASWLite_TraProductBluePrint PBP\nON ART.ClaArticulo = PBP.ClaArticulo \n`\nmsg.DirBluePrintPath = msg.payload.DirBluePrintPath\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 431,
        "y": 100,
        "wires": [
            [
                "62b27a08.795334"
            ]
        ]
    },
    {
        "id": "b441a7ab.7588e8",
        "type": "debug",
        "z": "72c19d2d.532ce4",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 400,
        "y": 160,
        "wires": []
    },
    {
        "id": "62b27a08.795334",
        "type": "sqlite",
        "z": "72c19d2d.532ce4",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 591,
        "y": 100,
        "wires": [
            [
                "6a696d79.cb4df4"
            ]
        ]
    },
    {
        "id": "6a696d79.cb4df4",
        "type": "function",
        "z": "72c19d2d.532ce4",
        "name": "FormatListaExecute",
        "func": "/*Crea un string separando con | cada registro obtenido */\nif (msg.payload.length > 0)\n{\n    const listaArtBP = msg.payload.reduce((strLista,reg)=> strLista ? strLista+'|'+reg.Clave : reg.Clave,'')\n    \n    msg.payload = {\"sp_name\":\"ASWSch.ASW_CU402_Pag2_DescargaBluePrint_Sel\",\"params\":{\"PsListaArticulos\":listaArtBP}}\n    \n}else{\n    msg.payload = null\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 781,
        "y": 100,
        "wires": [
            [
                "d0f1e5b0.84fb88"
            ]
        ]
    },
    {
        "id": "d0f1e5b0.84fb88",
        "type": "http request",
        "z": "72c19d2d.532ce4",
        "name": "SQLServerExecute",
        "method": "POST",
        "ret": "txt",
        "paytoqs": false,
        "url": "http://localhost:18800/sqlServer/execute",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 1011,
        "y": 100,
        "wires": [
            [
                "9955a848.01a638"
            ]
        ]
    },
    {
        "id": "9955a848.01a638",
        "type": "function",
        "z": "72c19d2d.532ce4",
        "name": "Format",
        "func": "msg.payload = JSON.parse(msg.payload)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1201,
        "y": 100,
        "wires": [
            [
                "9e54d7b0.432878"
            ]
        ]
    },
    {
        "id": "9e54d7b0.432878",
        "type": "split",
        "z": "72c19d2d.532ce4",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1331,
        "y": 100,
        "wires": [
            [
                "1d347635.4ce07a"
            ]
        ]
    },
    {
        "id": "1d347635.4ce07a",
        "type": "function",
        "z": "72c19d2d.532ce4",
        "name": "Format",
        "func": "\n\n//INSERTAR SOLO SI NO EXISTE EN LA TABLA\nmsg.topic = `INSERT INTO ASWLite_TraProductBluePrint (IdBluePrint,ClaArticulo,Descripcion,NombreArchivo,FechaUltimaMod)\n             SELECT ${msg.payload.idBluePrint},${msg.payload.ClaArticulo},'${msg.payload.Descripcion}','${msg.payload.NombreArchivo}','${msg.payload.FechaUltimaMod}'\n             WHERE ${msg.payload.idBluePrint} NOT IN (SELECT IdBluePrint FROM ASWLite_TraProductBluePrint WHERE idBluePrint = ${msg.payload.idBluePrint})`\n             \n             \nmsg.payload = {path:`${msg.DirBluePrintPath}/${msg.payload.NombreArchivo}`,\n               buffer:msg.payload.binary}             \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1481,
        "y": 100,
        "wires": [
            [
                "b0b9111.cbd6df",
                "895a6b3f.41b398",
                "2cbb095e.a8a9e6"
            ]
        ]
    },
    {
        "id": "b0b9111.cbd6df",
        "type": "http request",
        "z": "72c19d2d.532ce4",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": false,
        "url": "http://localhost:18800/guardaArchivoLocal/",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 1651,
        "y": 100,
        "wires": [
            [
                "d674c2e7.55703"
            ]
        ]
    },
    {
        "id": "895a6b3f.41b398",
        "type": "sqlite",
        "z": "72c19d2d.532ce4",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 1631,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "2cbb095e.a8a9e6",
        "type": "debug",
        "z": "72c19d2d.532ce4",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1631,
        "y": 240,
        "wires": []
    },
    {
        "id": "d674c2e7.55703",
        "type": "join",
        "z": "72c19d2d.532ce4",
        "name": "",
        "mode": "auto",
        "build": "string",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": "false",
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "x": 1791,
        "y": 100,
        "wires": [
            [
                "b499949c.f7ab48"
            ]
        ]
    },
    {
        "id": "b499949c.f7ab48",
        "type": "http response",
        "z": "72c19d2d.532ce4",
        "name": "Res_CU402_Pag1_DescargaBluePrints",
        "statusCode": "",
        "headers": {},
        "x": 2081,
        "y": 100,
        "wires": []
    },
    {
        "id": "bcafcdbc.c8a56",
        "type": "http in",
        "z": "72c19d2d.532ce4",
        "name": "CU402_Pag2_BluePrints_Sel",
        "url": "/sqlite/CU402_Pag2_BluePrints_Sel",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 240,
        "wires": [
            [
                "a824e940.7d43b8"
            ]
        ]
    },
    {
        "id": "a824e940.7d43b8",
        "type": "function",
        "z": "72c19d2d.532ce4",
        "name": "qryBluePrints",
        "func": "msg.topic = `;WITH CteUltimasTerminadas as (\nSELECT IdPO,ClavePO,ClaArticulo,ClaveArticulo,CASE WHEN PO.ClaEstatus =2 THEN 'Current' ELSE ''END as Titulo\n,ClaEstatus\n,FechaFinReal\nFROM ASWLite_TraOrdenProduccion PO\nWHERE ClaEstatus in (3)\nORDER BY PO.ClaEstatus ASC,FechaFinReal DESC\nLIMIT 3),\nCteCurrent as (\nSELECT IdPO,ClavePO,ClaArticulo,ClaveArticulo,CASE WHEN PO.ClaEstatus =2 THEN 'Current' ELSE ''END as Titulo\n,ClaEstatus\n,FechaFinReal\nFROM ASWLite_TraOrdenProduccion PO\nWHERE ClaEstatus in (2)\n)\nSELECT UT.IdPO,UT.ClavePO,UT.Titulo,BP.IdBluePrint,UT.ClaArticulo,UT.ClaveArticulo,BP.Descripcion,BP.NombreArchivo as NombreArchivo,UT.ClaEstatus,UT.FechaFinReal\nFROM CteUltimasTerminadas UT\nLEFT JOIN ASWLite_TraProductBluePrint BP\nON UT.ClaArticulo = BP.ClaArticulo\nUNION ALL\nSELECT CU.IdPO,CU.ClavePO,CU.Titulo,BP.IdBluePrint,CU.ClaArticulo,CU.ClaveArticulo,BP.Descripcion,BP.NombreArchivo as NombreArchivo,CU.ClaEstatus,CU.FechaFinReal\nFROM CteCurrent CU\nLEFT JOIN ASWLite_TraProductBluePrint BP\nON CU.ClaArticulo = BP.ClaArticulo\nORDER BY ClaEstatus ASC,FechaFinReal DESC\n`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 380,
        "y": 240,
        "wires": [
            [
                "ca9089bc.6cbdc8"
            ]
        ]
    },
    {
        "id": "ca9089bc.6cbdc8",
        "type": "sqlite",
        "z": "72c19d2d.532ce4",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 530,
        "y": 240,
        "wires": [
            [
                "1d61b700.8e6d19"
            ]
        ]
    },
    {
        "id": "1d61b700.8e6d19",
        "type": "http response",
        "z": "72c19d2d.532ce4",
        "name": "Resp_CU402_Pag2_BluePrints_Sel",
        "statusCode": "",
        "headers": {},
        "x": 770,
        "y": 240,
        "wires": []
    },
    {
        "id": "237a296d364b6adb",
        "type": "catch",
        "z": "72c19d2d.532ce4",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 80,
        "y": 360,
        "wires": [
            [
                "8fab50272a8518dd"
            ]
        ]
    },
    {
        "id": "8fab50272a8518dd",
        "type": "function",
        "z": "72c19d2d.532ce4",
        "name": "Error Handler",
        "func": "node.warn(`ERROR NO CONTROLADO >  ${env.get(\"NAME\")} > ${JSON.stringify(msg)}`)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "120b7d0.27b6483",
        "type": "function",
        "z": "c1f3db55.552f78",
        "name": "qryMicroparoConf",
        "func": "\nmsg.topic = `SELECT (VALOR1) * 60000 as MsMicroParo\nFROM ASWLite_CfgConfiguracion \nWHERE ClaveConfiguracion = 'MICROPARO'\n`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 670,
        "y": 140,
        "wires": [
            [
                "d5c7c7e7.6a66d8"
            ]
        ]
    },
    {
        "id": "d5c7c7e7.6a66d8",
        "type": "sqlite",
        "z": "c1f3db55.552f78",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 850,
        "y": 140,
        "wires": [
            [
                "267a85e6.14c48a"
            ]
        ]
    },
    {
        "id": "267a85e6.14c48a",
        "type": "function",
        "z": "c1f3db55.552f78",
        "name": "setDelay",
        "func": "msg.delay = msg.payload[0].MsMicroParo + 1000\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1040,
        "y": 140,
        "wires": [
            [
                "8711d6e9.d2c898"
            ]
        ]
    },
    {
        "id": "8711d6e9.d2c898",
        "type": "delay",
        "z": "c1f3db55.552f78",
        "name": "CU522_Pag1_DelayMicroParo",
        "pauseType": "delayv",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 1270,
        "y": 140,
        "wires": [
            [
                "5cc1edfb.f91ad4"
            ]
        ]
    },
    {
        "id": "5cc1edfb.f91ad4",
        "type": "function",
        "z": "c1f3db55.552f78",
        "name": "qryRevisaSiParoSigueAbierto",
        "func": "msg.topic = `SELECT 1\nFROM AswLite_BitParos\nWHERE idParo = ${msg.IdParo}\nAND FechaHoraFinal IS NULL\nAND ClaSeccionParo IS NULL\n`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1610,
        "y": 140,
        "wires": [
            [
                "7fa65349.6c64ec"
            ]
        ]
    },
    {
        "id": "7fa65349.6c64ec",
        "type": "sqlite",
        "z": "c1f3db55.552f78",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 1830,
        "y": 140,
        "wires": [
            [
                "8b97c952.5534c8"
            ]
        ]
    },
    {
        "id": "8b97c952.5534c8",
        "type": "switch",
        "z": "c1f3db55.552f78",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1970,
        "y": 140,
        "wires": [
            [
                "e649f225.09da1"
            ]
        ]
    },
    {
        "id": "e649f225.09da1",
        "type": "function",
        "z": "c1f3db55.552f78",
        "name": "qryUpdateSeccionParo",
        "func": "msg.topic = `\n;WITH CteAutoJustifica AS (\n    SELECT Valor1 \n    FROM ASWLite_CfgConfiguracion\n    WHERE ClaveConfiguracion = 'AUTOJUSTIFICA'\n)\nUPDATE AswLite_BitParos\nSET ClaSeccionParo = CASE WHEN ClaTurno =1 AND CAST(strftime('%H',FechaHoraInicial) AS INTEGER) = 7 AND CAST(strftime('%M',FechaHoraInicial) AS INTEGER) <= 9\n\t\t\t\t\t\t\tTHEN 185 \n\t\t\t\t\t\tWHEN ClaTurno =3 AND CAST(strftime('%H',FechaHoraInicial) AS INTEGER) = 21 AND CAST(strftime('%M',FechaHoraInicial) AS INTEGER) <= 9\n\t\t\t\t\t\t\tTHEN 185 \n\t\t\t\t\t\tWHEN ClaTurno =1 AND CAST(strftime('%H',FechaHoraInicial) AS INTEGER) = 16 AND CAST(strftime('%M',FechaHoraInicial) AS INTEGER) >= 50\n\t\t\t\t\t\t\tTHEN 187 \n\t\t\t\t\t\tWHEN ClaTurno =3 AND CAST(strftime('%H',FechaHoraInicial) AS INTEGER) = 6 AND CAST(strftime('%M',FechaHoraInicial) AS INTEGER) >= 50\n\t\t\t\t\t\t\tTHEN 187 \n\t\t\t\t\t\tELSE \n\t\t\t\t\t\t\t(SELECT Valor1 FROM CteAutoJustifica) \n\t\t\t\t\t\tEND\n,ClaEstatusReplica = 1\n,ClaEventoJustificacion = 1\n,FechaUltimaMod = datetime('now','localtime')\nWHERE IdParo = ${msg.IdParo}\n`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2170,
        "y": 140,
        "wires": [
            [
                "ca1caf4f.bb292"
            ]
        ]
    },
    {
        "id": "ca1caf4f.bb292",
        "type": "sqlite",
        "z": "c1f3db55.552f78",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 2390,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "dbbfeb1f.0dae78",
        "type": "function",
        "z": "c1f3db55.552f78",
        "name": "ValidarIdParo",
        "func": "\nif(msg.hasOwnProperty(\"IdParo\") && msg.IdParo){\n    msg.Evento = msg.payload.Evento\n    \n    return msg;\n}else{\n    return null\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 200,
        "y": 140,
        "wires": [
            [
                "67c585d7.83174c"
            ]
        ]
    },
    {
        "id": "67c585d7.83174c",
        "type": "switch",
        "z": "c1f3db55.552f78",
        "name": "revisaEventoInicioParo",
        "property": "Evento",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "INICIOPARO",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 420,
        "y": 140,
        "wires": [
            [
                "120b7d0.27b6483"
            ]
        ]
    },
    {
        "id": "3d1b3f47aa6ca79f",
        "type": "catch",
        "z": "c1f3db55.552f78",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 60,
        "y": 300,
        "wires": [
            [
                "9a0aca26ac36be49"
            ]
        ]
    },
    {
        "id": "9a0aca26ac36be49",
        "type": "function",
        "z": "c1f3db55.552f78",
        "name": "Error Handler",
        "func": "node.warn(`ERROR NO CONTROLADO >  ${env.get(\"NAME\")} > ${JSON.stringify(msg)}`)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "ab898333.4671",
        "type": "sqlite",
        "z": "86d5434a.cfc9c",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 830,
        "y": 80,
        "wires": [
            [
                "b9444586.354b48"
            ]
        ]
    },
    {
        "id": "d03abc96.0bc4a",
        "type": "function",
        "z": "86d5434a.cfc9c",
        "name": "qryConsultaOts",
        "func": "\n// Si la Ot tiene EsTerminada = 1 ->  Se considera ClaEstatusOt =3 y NomEstatus = 'Colsed'\n\nmsg.topic = `SELECT OT.ClaUbicacion\n    ,OT.IdOt\n    ,EC.NomEquipoCelda\n    ,OT.NomGuia\n    ,CASE WHEN OT.EsTerminada = 1 THEN 3 ELSE OT.ClaEstatusOt END AS ClaEstatusOt\n    ,CASE WHEN OT.EsTerminada = 1 THEN 'Closed' ELSE  OT.NomEstatus END AS NomEstatus\n    ,OT.ClaEquipo\n    ,OT.IdCelda\n    ,OT.ClaGuia\n    ,DATE(OT.FechaProgInicio) as FechaProgInicio\n    ,OT.ClaTurno\n    ,OT.TiempoEstimado\n    ,OT.ClaEstatusReplica\n    ,CASE WHEN ClaEstatusOt = 1 THEN 2 WHEN ClaEstatusOt = 2 THEN 1 ELSE ClaEstatusOt END as orden\nFROM ASWLite_MtoTraOT OT\nJOIN ASWLite_MtoCatEquipoCelda EC\n    ON OT.ClaEquipo = EC.ClaEquipo\n    AND OT.IdCelda = EC.IdCelda\nWHERE DATE(OT.FechaProgInicio) = DATE('now','localtime')\nAND Coalesce(OT.BajaLogica,0) = 0\nORDER BY orden\n,FechaProgInicio `\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 500,
        "y": 80,
        "wires": [
            [
                "ab898333.4671"
            ]
        ]
    },
    {
        "id": "b9444586.354b48",
        "type": "http response",
        "z": "86d5434a.cfc9c",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1010,
        "y": 80,
        "wires": []
    },
    {
        "id": "ecbe5d0b.9462b",
        "type": "http in",
        "z": "86d5434a.cfc9c",
        "name": "CU710_Pag1_ConsultaOts_Sel",
        "url": "/sqlite/CU710_Pag1_ConsultaOts_Sel",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 80,
        "wires": [
            [
                "d03abc96.0bc4a"
            ]
        ]
    },
    {
        "id": "8a97cbb.9df4638",
        "type": "catch",
        "z": "86d5434a.cfc9c",
        "name": "ErrSQLite",
        "scope": [
            "ab898333.4671"
        ],
        "uncaught": false,
        "x": 720,
        "y": 20,
        "wires": [
            [
                "db56cc7e.a7e8b"
            ]
        ]
    },
    {
        "id": "db56cc7e.a7e8b",
        "type": "function",
        "z": "86d5434a.cfc9c",
        "name": "",
        "func": "msg.statusCode = 500\nmsg.payload = {Err:\"Error al ejecutar:\" +msg.error.message}\nconsole.log(msg)\n//node.error(\"Error SQLITE\")\n//node.error(msg.error.message)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 850,
        "y": 20,
        "wires": [
            [
                "b9444586.354b48"
            ]
        ]
    },
    {
        "id": "ab6712f1.8630e",
        "type": "http in",
        "z": "86d5434a.cfc9c",
        "name": "CU710_Pag2_ConsultaActividades_Sel",
        "url": "/sqlite/CU710_Pag2_ConsultaActividades_Sel",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 190,
        "y": 220,
        "wires": [
            [
                "afedbfc0.08c44"
            ]
        ]
    },
    {
        "id": "afedbfc0.08c44",
        "type": "function",
        "z": "86d5434a.cfc9c",
        "name": "qryActividades",
        "func": "msg.topic = `SELECT \n       ClaUbicacion\n      ,IdOt\n      ,ClaActividad\n      ,NomSistema\n      ,NomSubSistema\n      ,NomActividad\n      ,EsRealizada\n      ,TiempoEstimado\n      ,GeneraDerivadaSN\n      ,IdOtDerivada\n  FROM ASWLite_MtoTraOTActividad\n  WHERE COALESCE(BajaLogica,0) = 0\n  AND IdOt = ${msg.payload.IdOt}`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 500,
        "y": 220,
        "wires": [
            [
                "14de4221.94fbbe"
            ]
        ]
    },
    {
        "id": "14de4221.94fbbe",
        "type": "sqlite",
        "z": "86d5434a.cfc9c",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 830,
        "y": 220,
        "wires": [
            [
                "e74b1cb9.0a2e5"
            ]
        ]
    },
    {
        "id": "e74b1cb9.0a2e5",
        "type": "http response",
        "z": "86d5434a.cfc9c",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1010,
        "y": 220,
        "wires": []
    },
    {
        "id": "33690f82.c4e8c",
        "type": "function",
        "z": "86d5434a.cfc9c",
        "name": "",
        "func": "msg.statusCode = 500\nmsg.payload = {Err:\"Error al ejecutar:\" +msg.error.message}\nconsole.log(msg)\n//node.error(\"Error SQLITE\")\n//node.error(msg.error.message)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 850,
        "y": 160,
        "wires": [
            [
                "e74b1cb9.0a2e5"
            ]
        ]
    },
    {
        "id": "b4605bf.bdb32a8",
        "type": "catch",
        "z": "86d5434a.cfc9c",
        "name": "ErrSQLite",
        "scope": [
            "14de4221.94fbbe"
        ],
        "uncaught": false,
        "x": 720,
        "y": 160,
        "wires": [
            [
                "33690f82.c4e8c"
            ]
        ]
    },
    {
        "id": "3d24878.f6ea678",
        "type": "http in",
        "z": "86d5434a.cfc9c",
        "name": "CU710_Pag3_ConsultaPasosVariables_Sel",
        "url": "/sqlite/CU710_Pag3_ConsultaPasosVariables_Sel",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 230,
        "y": 460,
        "wires": [
            [
                "5183c2b2.dd929c"
            ]
        ]
    },
    {
        "id": "5183c2b2.dd929c",
        "type": "function",
        "z": "86d5434a.cfc9c",
        "name": "qryActPasosVariables",
        "func": "msg.topic = `SELECT \n ACT.IdOT\n,ACT.ClaActividad\n,ACTP.ClaActividadPaso\n,ACTV.ClaVariable\n,EC.NomEquipoCelda \n,ACT.NomActividad\n,ACTP.Paso\n,ACTP.Descripcion\n,ACTP.EsRealizada as EsRealizadaPaso\n,ACTV.ValorMinimo||' '|| ACTV.NomUnidadVariable as ValorMinimo\n,CASE WHEN ACTV.ClaTipoVariable = 2 THEN ACTV.NomReferenciaCumple ELSE ACTV.ValorEstandar||' '|| ACTV.NomUnidadVariable  END as ValorEstandar\n,ACTV.ValorMaximo||' '|| ACTV.NomUnidadVariable as ValorMaximo\n,ACTV.ClaTipoVariable\n,ACTV.ValorReal\nFROM  ASWLite_MtoTraOT OT\nJOIN ASWLite_MtoCatEquipoCelda EC\n    ON OT.ClaEquipo = EC.ClaEquipo\n    AND OT.IdCelda = EC.IdCelda\nJOIN ASWLite_MtoTraOTActividad ACT\n    ON OT.IdOt = ACT.IdOt\nJOIN ASWLite_MtoTraOTActividadPaso ACTP\n    ON ACT.IdOt = ACTP.IdOt\n    AND ACT.ClaActividad = ACTP.ClaActividad\nJOIN ASWLite_MtoTraOTActividadVariable ACTV\n    ON ACTP.IdOt = ACTV.IdOt\n    AND ACTP.ClaActividad = ACTV.ClaActividad\n    AND ACTP.ClaActividadPaso = ACTV.ClaActividadPaso\nWHERE ACT.IdOT = ${msg.payload.IdOt}\nAND   ACT.ClaActividad = ${msg.payload.ClaActividad}`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 550,
        "y": 460,
        "wires": [
            [
                "4b9408c7.f7ced8"
            ]
        ]
    },
    {
        "id": "1f7b309b.35ab8f",
        "type": "catch",
        "z": "86d5434a.cfc9c",
        "name": "ErrSQLite",
        "scope": [
            "4b9408c7.f7ced8"
        ],
        "uncaught": false,
        "x": 720,
        "y": 400,
        "wires": [
            [
                "be0e7fe2.2f46e"
            ]
        ]
    },
    {
        "id": "be0e7fe2.2f46e",
        "type": "function",
        "z": "86d5434a.cfc9c",
        "name": "",
        "func": "msg.statusCode = 500\nmsg.payload = {Err:\"Error al ejecutar:\" +msg.error.message}\nconsole.log(msg)\n//node.error(\"Error SQLITE\")\n//node.error(msg.error.message)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 850,
        "y": 400,
        "wires": [
            [
                "963bd26f.075f3"
            ]
        ]
    },
    {
        "id": "963bd26f.075f3",
        "type": "http response",
        "z": "86d5434a.cfc9c",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1010,
        "y": 460,
        "wires": []
    },
    {
        "id": "4b9408c7.f7ced8",
        "type": "sqlite",
        "z": "86d5434a.cfc9c",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 830,
        "y": 460,
        "wires": [
            [
                "963bd26f.075f3"
            ]
        ]
    },
    {
        "id": "8036d2bb.b296d",
        "type": "http in",
        "z": "86d5434a.cfc9c",
        "name": "CU710_Pag3_Variable_IU",
        "url": "/sqlite/CU710_Pag3_Variable_IU",
        "method": "put",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 620,
        "wires": [
            [
                "cc7aa4a7.7db2f8"
            ]
        ]
    },
    {
        "id": "52a29132.adbae",
        "type": "function",
        "z": "86d5434a.cfc9c",
        "name": "qryVariableUpd",
        "func": "msg.topic = `\nUPDATE ASWLite_MtoTraOTActividadVariable\nSET  ValorReal = '${msg.Data.ValorReal}'\n    ,FechaUltimaMod = DATETIME('now','localtime')\n    ,ClaEstatusReplica = 1\n    ,NombrePCMod = '${global.get('NombrePcMod')}'\nWHERE IdOT = ${msg.Data.IdOt}\nAND ClaActividad = ${msg.Data.ClaActividad}\nAND ClaActividadPaso = ${msg.Data.ClaActividadPaso}\n`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 560,
        "y": 620,
        "wires": [
            [
                "6fe0057b.787f4c"
            ]
        ]
    },
    {
        "id": "6fe0057b.787f4c",
        "type": "sqlite",
        "z": "86d5434a.cfc9c",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 730,
        "y": 620,
        "wires": [
            [
                "c6806a09.b88a88"
            ]
        ]
    },
    {
        "id": "d04bb7da.422e98",
        "type": "catch",
        "z": "86d5434a.cfc9c",
        "name": "ErrSQLite",
        "scope": [
            "6fe0057b.787f4c",
            "6da0b4cf.475d9c"
        ],
        "uncaught": false,
        "x": 1000,
        "y": 560,
        "wires": [
            [
                "3d8d979.e28f968"
            ]
        ]
    },
    {
        "id": "3d8d979.e28f968",
        "type": "function",
        "z": "86d5434a.cfc9c",
        "name": "",
        "func": "msg.statusCode = 500\nmsg.payload = {Err:\"Error al ejecutar:\" +msg.error.message}\nconsole.log(msg)\n//node.error(\"Error SQLITE\")\n//node.error(msg.error.message)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1130,
        "y": 560,
        "wires": [
            [
                "9300fb6.3ce1a08"
            ]
        ]
    },
    {
        "id": "9300fb6.3ce1a08",
        "type": "http response",
        "z": "86d5434a.cfc9c",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1290,
        "y": 620,
        "wires": []
    },
    {
        "id": "2f55404c.4bd2a",
        "type": "http in",
        "z": "86d5434a.cfc9c",
        "name": "CU710_Pag3_Paso_IU",
        "url": "/sqlite/CU710_Pag3_Paso_IU",
        "method": "put",
        "upload": false,
        "swaggerDoc": "",
        "x": 160,
        "y": 780,
        "wires": [
            [
                "3eadde32.525802"
            ]
        ]
    },
    {
        "id": "3eadde32.525802",
        "type": "function",
        "z": "86d5434a.cfc9c",
        "name": "qryPasoUpd",
        "func": "msg.topic = `\nUPDATE ASWLite_MtoTraOTActividadPaso\nSET EsRealizada = ${msg.payload.data.EsRealizada}\n,ClaEstatusReplica = 1\n,NombrePcMod = '${global.get('NombrePcMod')}'\n,FechaUltimaMod = DATETIME('now','localtime')\n,ClaUsuarioMod =  ${msg.payload.data.ClaUsuarioMod}\nWHERE IdOt =  ${msg.payload.data.IdOt}\nAND ClaActividad = ${msg.payload.data.ClaActividad}\nAND ClaActividadPaso = ${msg.payload.data.ClaActividadPaso}\n\n`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 510,
        "y": 780,
        "wires": [
            [
                "14325e0c.815ea2"
            ]
        ]
    },
    {
        "id": "14325e0c.815ea2",
        "type": "sqlite",
        "z": "86d5434a.cfc9c",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 830,
        "y": 780,
        "wires": [
            [
                "503488f6.060678"
            ]
        ]
    },
    {
        "id": "503488f6.060678",
        "type": "http response",
        "z": "86d5434a.cfc9c",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1010,
        "y": 780,
        "wires": []
    },
    {
        "id": "a93ca9e.1fe9158",
        "type": "catch",
        "z": "86d5434a.cfc9c",
        "name": "ErrSQLite",
        "scope": [
            "14325e0c.815ea2"
        ],
        "uncaught": false,
        "x": 720,
        "y": 720,
        "wires": [
            [
                "baa27bc0.4f8778"
            ]
        ]
    },
    {
        "id": "baa27bc0.4f8778",
        "type": "function",
        "z": "86d5434a.cfc9c",
        "name": "",
        "func": "msg.statusCode = 500\nmsg.payload = {Err:\"Error al ejecutar:\" +msg.error.message}\nconsole.log(msg)\n//node.error(\"Error SQLITE\")\n//node.error(msg.error.message)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 850,
        "y": 720,
        "wires": [
            [
                "503488f6.060678"
            ]
        ]
    },
    {
        "id": "90fd5642.0880f8",
        "type": "http in",
        "z": "86d5434a.cfc9c",
        "name": "CU710_Pag3_ValidaActTerminada_Proc",
        "url": "/sqlite/CU710_Pag3_ValidaActTerminada_Proc",
        "method": "put",
        "upload": false,
        "swaggerDoc": "",
        "x": 220,
        "y": 900,
        "wires": [
            [
                "6ff2d0b7.c39d1"
            ]
        ]
    },
    {
        "id": "a4965b1d.ee30c8",
        "type": "function",
        "z": "86d5434a.cfc9c",
        "name": "QryValActTerminada",
        "func": "msg.topic=`\nSELECT  CASE WHEN count(1) = sum(EsRealizada) THEN 1 ELSE 0 END AS Terminada\nFROM  ASWLite_MtoTraOTActividadPaso\nWHERE IdOT= ${msg.Data.IdOt}\nAND ClaActividad = ${msg.Data.ClaActividad}\n\n`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 680,
        "y": 900,
        "wires": [
            [
                "94c750bf.b2b62"
            ]
        ]
    },
    {
        "id": "6ff2d0b7.c39d1",
        "type": "function",
        "z": "86d5434a.cfc9c",
        "name": "GuardaDatos",
        "func": "msg.Data = msg.payload\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 490,
        "y": 900,
        "wires": [
            [
                "a4965b1d.ee30c8"
            ]
        ]
    },
    {
        "id": "94c750bf.b2b62",
        "type": "sqlite",
        "z": "86d5434a.cfc9c",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 850,
        "y": 900,
        "wires": [
            [
                "799e0305.de5f5c"
            ]
        ]
    },
    {
        "id": "799e0305.de5f5c",
        "type": "function",
        "z": "86d5434a.cfc9c",
        "name": "qryUpdateActividad",
        "func": "msg.topic = `\n    UPDATE ASWLite_MtoTraOTActividad\n    SET  EsRealizada = ${msg.payload[0].Terminada}\n        ,FechaUltimaMod = DATETIME('now','localtime')\n        ,NombrePcMod = '${global.get('NombrePcMod')}'\n        ,ClaUsuarioMod = ${msg.Data.ClaUsuarioMod}\n        ,ClaEstatusReplica = 1\n        \n    WHERE IdOt = ${msg.Data.IdOt}\n    AND ClaActividad = ${msg.Data.ClaActividad}\n`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1030,
        "y": 900,
        "wires": [
            [
                "428ee760.6cf5b8"
            ]
        ]
    },
    {
        "id": "428ee760.6cf5b8",
        "type": "sqlite",
        "z": "86d5434a.cfc9c",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 1210,
        "y": 900,
        "wires": [
            [
                "99cea946.22d258"
            ]
        ]
    },
    {
        "id": "99cea946.22d258",
        "type": "function",
        "z": "86d5434a.cfc9c",
        "name": "qryValOtTerminada",
        "func": "msg.topic=`\nSELECT CASE WHEN count(1) = sum(EsRealizada) THEN 1 ELSE 0 END AS Terminada\nFROM ASWLite_MtoTraOTActividad\nwhere idOt = ${msg.Data.IdOt}\n`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1410,
        "y": 900,
        "wires": [
            [
                "67638378.dfde3c"
            ]
        ]
    },
    {
        "id": "67638378.dfde3c",
        "type": "sqlite",
        "z": "86d5434a.cfc9c",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 1590,
        "y": 900,
        "wires": [
            [
                "108c09dd.322d46"
            ]
        ]
    },
    {
        "id": "108c09dd.322d46",
        "type": "function",
        "z": "86d5434a.cfc9c",
        "name": "qryUpdOtTerminada",
        "func": "if(msg.payload[0].Terminada == 1){\n    msg.topic = `\n        UPDATE ASWLite_MtoTraOT\n        SET  EsTerminada = 1\n            ,FechaUltimaMod = DATETIME('now','localtime')\n            ,NombrePCMod = '${global.get('NombrePcMod')}'\n            ,ClaUsuarioMod = ${msg.Data.ClaUsuarioMod}\n            ,ClaEstatusReplica = 1\n        WHERE IdOt = ${msg.Data.IdOt}\n    `\n}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1800,
        "y": 900,
        "wires": [
            [
                "9b6019d9.83f0f8"
            ]
        ]
    },
    {
        "id": "9b6019d9.83f0f8",
        "type": "sqlite",
        "z": "86d5434a.cfc9c",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 1970,
        "y": 900,
        "wires": [
            [
                "595f97a6.0e2548"
            ]
        ]
    },
    {
        "id": "595f97a6.0e2548",
        "type": "http response",
        "z": "86d5434a.cfc9c",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 2130,
        "y": 900,
        "wires": []
    },
    {
        "id": "c6806a09.b88a88",
        "type": "function",
        "z": "86d5434a.cfc9c",
        "name": "qryValValorReal",
        "func": "msg.topic = `\nSELECT \nCASE   WHEN ClaTipoVariable = 1 AND ValorReal NOT BETWEEN ValorMinimo AND ValorMaximo \n       THEN 1\n       WHEN ClaTipoVariable = 2 AND ValorReal <> ClaReferenciaCumple \n       THEN 1\n       ELSE 0\n  END as FueraRango\nFROM ASWLite_MtoTraOTActividadVariable\nWHERE IdOt = ${msg.Data.IdOt}\nAND ClaActividad = ${msg.Data.ClaActividad}\nAND ClaActividadPaso = ${msg.Data.ClaActividadPaso}`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 950,
        "y": 620,
        "wires": [
            [
                "6da0b4cf.475d9c",
                "a9d4d810.735c38"
            ]
        ]
    },
    {
        "id": "cc7aa4a7.7db2f8",
        "type": "function",
        "z": "86d5434a.cfc9c",
        "name": "guardaDatos",
        "func": "msg.Data = msg.payload.data\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 370,
        "y": 620,
        "wires": [
            [
                "52a29132.adbae"
            ]
        ]
    },
    {
        "id": "6da0b4cf.475d9c",
        "type": "sqlite",
        "z": "86d5434a.cfc9c",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 1110,
        "y": 620,
        "wires": [
            [
                "9300fb6.3ce1a08"
            ]
        ]
    },
    {
        "id": "a9d4d810.735c38",
        "type": "debug",
        "z": "86d5434a.cfc9c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1130,
        "y": 680,
        "wires": []
    },
    {
        "id": "29c341dc.44dade",
        "type": "http in",
        "z": "86d5434a.cfc9c",
        "name": "CU710_Pag3_GenerarDerivada_Proc",
        "url": "/sqlite/CU710_Pag3_GenerarDerivada_Proc",
        "method": "put",
        "upload": false,
        "swaggerDoc": "",
        "x": 210,
        "y": 1060,
        "wires": [
            [
                "e82ad4d0.91ef58"
            ]
        ]
    },
    {
        "id": "e82ad4d0.91ef58",
        "type": "function",
        "z": "86d5434a.cfc9c",
        "name": "QryGeneraDerivadaUpd",
        "func": "msg.topic = `UPDATE ASWLite_MtoTraOTActividad\nSET GeneraDerivadaSN = 1\n,ClaEstatusReplica = 1\n\nWHERE IdOt = ${msg.payload.IdOt}\nAND ClaActividad = ${msg.payload.ClaActividad}`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 530,
        "y": 1060,
        "wires": [
            [
                "95a4a0e.af3bb6"
            ]
        ]
    },
    {
        "id": "95a4a0e.af3bb6",
        "type": "sqlite",
        "z": "86d5434a.cfc9c",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 730,
        "y": 1060,
        "wires": [
            [
                "ca6cb502.f80628"
            ]
        ]
    },
    {
        "id": "3b5a0d6c.477ad2",
        "type": "catch",
        "z": "86d5434a.cfc9c",
        "name": "ErrSQLite",
        "scope": [
            "14325e0c.815ea2"
        ],
        "uncaught": false,
        "x": 820,
        "y": 1000,
        "wires": [
            [
                "7057a485.3f9e2c"
            ]
        ]
    },
    {
        "id": "7057a485.3f9e2c",
        "type": "function",
        "z": "86d5434a.cfc9c",
        "name": "",
        "func": "msg.statusCode = 500\nmsg.payload = {Err:\"Error al ejecutar:\" +msg.error.message}\nconsole.log(msg)\n//node.error(\"Error SQLITE\")\n//node.error(msg.error.message)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 970,
        "y": 1000,
        "wires": [
            [
                "ca6cb502.f80628"
            ]
        ]
    },
    {
        "id": "ca6cb502.f80628",
        "type": "http response",
        "z": "86d5434a.cfc9c",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1110,
        "y": 1060,
        "wires": []
    },
    {
        "id": "0f1d3d24039d40b4",
        "type": "catch",
        "z": "86d5434a.cfc9c",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 120,
        "y": 1260,
        "wires": [
            [
                "f8f5976a4d9c5560"
            ]
        ]
    },
    {
        "id": "f8f5976a4d9c5560",
        "type": "function",
        "z": "86d5434a.cfc9c",
        "name": "Error Handler",
        "func": "node.warn(`ERROR NO CONTROLADO >  ${env.get(\"NAME\")} > ${JSON.stringify(msg)}`)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 1260,
        "wires": [
            []
        ]
    },
    {
        "id": "6657b62b.d1a998",
        "type": "websocket out",
        "z": "f57bfe69.a6a55",
        "name": "CU159_Pag2_AvisoGeneral",
        "server": "7fb8f2b5.e7f0ac",
        "client": "",
        "x": 240,
        "y": 60,
        "wires": []
    },
    {
        "id": "4726f33c.ef7cac",
        "type": "function",
        "z": "d3a37898.3d3278",
        "name": "fnPreparaDatos",
        "func": "let datos = {};\nlet nombretabla = 'ASWLite_VariablesProduccion';\nif (msg.payload.length > 0){\n    \n    datos['nombretabla'] = nombretabla\n    datos['CajasXHora'] = msg.CajasXHora\n    Object.assign(datos, msg.payload[0]);\n}\n\n\nmsg.payload = [datos];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 807,
        "y": 130,
        "wires": [
            [
                "39fdfa86.562c56"
            ]
        ]
    },
    {
        "id": "ac146f8c.25278",
        "type": "sqlite",
        "z": "d3a37898.3d3278",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 1137,
        "y": 130,
        "wires": [
            []
        ]
    },
    {
        "id": "39fdfa86.562c56",
        "type": "function",
        "z": "d3a37898.3d3278",
        "name": "fnParseUpdate",
        "func": "let Datos = msg.payload //[{\"nombretabla\":\"ASWLite_TraOrdenProduccion\",\"ClaUbicacion\":\"68\",\"IdPO\":3,\"IdCelda\":\"1\",\"ClaArticulo\":\"611645\",\"ClaveArticulo\":\"611645\",\"Orden\":\"3\",\"ClaEstatus\":\"1\",\"BajaLogica\":\"0\",\"ClaUsuarioMod\":\"0\",\"NombrePcMod\":\"302NGALAZ\",\"FechaUltimaMod\":\"2020-03-05T01:43:57.713\"}]\nDatos = Datos[0];\nlet NombreTabla = Datos.nombretabla;\nlet CteStr = 'WITH CteTmp (';\nlet CteSelectStr = 'AS ( SELECT '\nlet UpdateStr = `UPDATE ${NombreTabla} SET `;\nlet CamposUpdateStr = '';\nlet WhereUpdateStr = ''\nlet QryFinal = '';\n//LISTA DE CAMPOS DE LA CTE\nObject.keys(Datos).forEach((key,idx) => {\n    if(key != 'nombretabla'){\n        CteStr += key,idx;\n        CteStr += (idx != (Object.keys(Datos).length -1) ) ? ',':') ';\n        CteSelectStr += (typeof(Datos[key]) == 'string') ? `'${Datos[key]}'` : `${Datos[key]}`;\n        CteSelectStr += (idx != (Object.keys(Datos).length -1) ) ? ',':') ';\n    }\n});\n\n//COMPLETAMOS STRING PARA CREAR CTE\nCteStr += CteSelectStr;\n\nObject.keys(Datos).forEach((key,idx) => {\n    let campo = key;\n    let valor = (typeof(Datos[key]) == 'string') ? `'${Datos[key]}'` : Datos[key];\n    if(campo != 'nombretabla'){\n        CamposUpdateStr += `${key} = (SELECT ${campo} FROM CteTmp )`\n        CamposUpdateStr += (idx != (Object.keys(Datos).length -1) ) ? ',':' ';\n    }\n    \n})\n//AGREGAMOS CLAUSULA WHERE AL UPDATE\n//WhereUpdateStr = ` WHERE IdPO = ${Datos[\"IdPO\"]} `\n\n//COMPLETAR UPDATE\nUpdateStr += CamposUpdateStr + WhereUpdateStr;\n\n//COMPLETAR QUERY\nQryFinal = CteStr+UpdateStr;\n\n\n//msg.payload={NombreTabla,CteStr,CteSelectStr,CamposUpdateStr,WhereUpdateStr,UpdateStr}\nmsg.topic=QryFinal;\nreturn msg;\n\n\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 987,
        "y": 130,
        "wires": [
            [
                "ac146f8c.25278"
            ]
        ],
        "info": "CREA EL UPDATE A EJECUTAR PARA ACTUALIZAR ORDENES DE TRABAJO\n *    ** SOLO PROCESA UN REGISTRO**"
    },
    {
        "id": "27f09de8.0d4322",
        "type": "http request",
        "z": "d3a37898.3d3278",
        "name": "CurrentProductionOrder_Sel",
        "method": "GET",
        "ret": "txt",
        "paytoqs": false,
        "url": "http://localhost:18800/sqlite/CU151_Pag1_CurrentProductionOrder_Sel",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 200,
        "y": 120,
        "wires": [
            [
                "a5f4abed.674188"
            ]
        ]
    },
    {
        "id": "a5f4abed.674188",
        "type": "function",
        "z": "d3a37898.3d3278",
        "name": "",
        "func": "msg.payload = JSON.parse(msg.payload);\nif(msg.payload.length > 0){\n    msg.payload = [\n        {'IdPO': msg.payload[0].IdPO,\n         'ClaArticulo': msg.payload[0].ClaArticulo,\n         'ClaveArticulo': msg.payload[0].ClaveArticulo,\n         'UnidadesProgramadas':msg.payload[0].UnidadesProgramadas\n        }\n    ]  \n    msg.ClaArticulo = msg.payload[0].ClaArticulo\n}\nelse{\n    return\n}\n            \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 397,
        "y": 130,
        "wires": [
            [
                "87565be.78d64a8"
            ]
        ]
    },
    {
        "id": "87565be.78d64a8",
        "type": "subflow:39e21cf9.935554",
        "z": "d3a37898.3d3278",
        "name": "",
        "env": [],
        "x": 587,
        "y": 130,
        "wires": [
            [
                "4726f33c.ef7cac"
            ]
        ]
    },
    {
        "id": "eca39e9e.3a454",
        "type": "sqlite",
        "z": "27a291e8.5fa3be",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 190,
        "y": 220,
        "wires": [
            [
                "ee1b9f64.ecc6e",
                "842c9821.324fd8"
            ]
        ]
    },
    {
        "id": "afd348f6.338b68",
        "type": "function",
        "z": "27a291e8.5fa3be",
        "name": "InicializarRegistro",
        "func": "/*CREAR OBJETO DE ESTADO DE PRODUCCION*/\n\n\n/*SINO EXISTE UN REGISTRO EN LA TABLA ENTOCNES\n INSERTA UNO CON VALORES DUMMY*/\n \nmsg.topic = `INSERT INTO ASWLite_VariablesProduccion \n(idComponente)\n SELECT ClaMaquina\n FROM ASWLite_CatWorkUnit\n WHERE NOT EXISTS (SELECT 1 FROM ASWLite_VariablesProduccion)\n AND ClaTipoMaquina = 6\n `\n \n \n \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1376,
        "y": 169,
        "wires": [
            [
                "eca39e9e.3a454"
            ]
        ]
    },
    {
        "id": "ee1b9f64.ecc6e",
        "type": "function",
        "z": "27a291e8.5fa3be",
        "name": "revisaIdPOtblVariables",
        "func": "msg.topic = `SELECT 1 \nFROM ASWLite_VariablesProduccion\nWHERE IdPO IS NULL\n`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 260,
        "wires": [
            [
                "8e74bae0.d9ce88"
            ]
        ]
    },
    {
        "id": "95318346.d82a8",
        "type": "switch",
        "z": "27a291e8.5fa3be",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 730,
        "y": 260,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "8e74bae0.d9ce88",
        "type": "sqlite",
        "z": "27a291e8.5fa3be",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 590,
        "y": 260,
        "wires": [
            [
                "95318346.d82a8"
            ]
        ]
    },
    {
        "id": "26d4b0cb.266ff",
        "type": "function",
        "z": "27a291e8.5fa3be",
        "name": "ValidaRegistroMaquina",
        "func": "msg.topic = `SELECT 1\nFROM [ASWLite_VariablesProduccion]\nWHERE IdComponente not in (SELECT [ClaMaquina] FROM [ASWLite_CatWorkUnit])`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 160,
        "wires": [
            [
                "b8324484.f91b58"
            ]
        ]
    },
    {
        "id": "5ec279a0.2bcfe8",
        "type": "function",
        "z": "27a291e8.5fa3be",
        "name": "EliminarRegistros",
        "func": "msg.topic = `DELETE\nFROM [ASWLite_VariablesProduccion]\nWHERE IdComponente NOT IN (SELECT [ClaMaquina] \n\t\t\t\t\t\t   FROM [ASWLite_CatWorkUnit])`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 120,
        "wires": [
            [
                "670dc8df.fe3b38"
            ]
        ]
    },
    {
        "id": "ee738fa2.8dda5",
        "type": "switch",
        "z": "27a291e8.5fa3be",
        "name": "CambioMaquina",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 780,
        "y": 160,
        "wires": [
            [
                "5ec279a0.2bcfe8",
                "433356df7f0aa0e4"
            ],
            [
                "afd348f6.338b68"
            ]
        ]
    },
    {
        "id": "b8324484.f91b58",
        "type": "sqlite",
        "z": "27a291e8.5fa3be",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 610,
        "y": 160,
        "wires": [
            [
                "ee738fa2.8dda5"
            ]
        ]
    },
    {
        "id": "670dc8df.fe3b38",
        "type": "sqlite",
        "z": "27a291e8.5fa3be",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 1190,
        "y": 120,
        "wires": [
            [
                "afd348f6.338b68"
            ]
        ]
    },
    {
        "id": "842c9821.324fd8",
        "type": "function",
        "z": "27a291e8.5fa3be",
        "name": "ExisteComponente",
        "func": "msg.topic = `SELECT 1 FROM ASWLite_VariablesProduccion`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 220,
        "wires": [
            [
                "10c3d3b.eeeaf2c"
            ]
        ]
    },
    {
        "id": "10c3d3b.eeeaf2c",
        "type": "sqlite",
        "z": "27a291e8.5fa3be",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 590,
        "y": 220,
        "wires": [
            [
                "417a47e.96b58b8"
            ]
        ]
    },
    {
        "id": "417a47e.96b58b8",
        "type": "switch",
        "z": "27a291e8.5fa3be",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "empty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 730,
        "y": 220,
        "wires": [
            [
                "96f2be0a.f973"
            ]
        ]
    },
    {
        "id": "96f2be0a.f973",
        "type": "function",
        "z": "27a291e8.5fa3be",
        "name": "Error:NoRobotComponent",
        "func": "msg.payload = {type:'error', key:'error:NoRobotComponent', message:'No assets were found for registration of box production'};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 930,
        "y": 220,
        "wires": [
            [
                "c5ba13de.cfda8"
            ]
        ]
    },
    {
        "id": "c5ba13de.cfda8",
        "type": "subflow:f57bfe69.a6a55",
        "z": "27a291e8.5fa3be",
        "name": "",
        "env": [],
        "x": 1200,
        "y": 220,
        "wires": []
    },
    {
        "id": "433356df7f0aa0e4",
        "type": "debug",
        "z": "27a291e8.5fa3be",
        "name": "Eliminar",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 840,
        "y": 80,
        "wires": []
    },
    {
        "id": "d3f1a89f.7b3138",
        "type": "function",
        "z": "e4f0e9b3.dbf928",
        "name": "fnParseUpdate",
        "func": "\nlet Datos = msg.payload // [{ \"nombretabla\": \"ASWLite_TraOrdenProduccion\", \"keys\": \"ClaUbicacion,IdPO\", \"ClaUbicacion\": \"68\", \"IdPO\": 3, \"IdCelda\": \"1\", \"ClaArticulo\": \"611645\", \"ClaveArticulo\": \"611645\", \"Orden\": \"3\", \"ClaEstatus\": \"1\", \"BajaLogica\": \"0\", \"ClaUsuarioMod\": \"0\", \"NombrePcMod\": \"302NGALAZ\", \"FechaUltimaMod\": \"2020-03-05T01:43:57.713\" }]\n//Datos = Datos[0];\nlet NombreTabla = Datos.nombretabla;\nlet CteStr = 'WITH CteTmp (';\nlet CteSelectStr = 'AS ( SELECT '\nlet UpdateStr = `UPDATE ${NombreTabla} SET `;\nlet CamposUpdateStr = '';\nlet WhereUpdateStr = ''\nlet QryFinal = '';\n//LISTA DE CAMPOS DE LA CTE\nObject.keys(Datos).forEach((key, idx) => {\n    if (key != 'nombretabla' && key != 'keys') {\n        CteStr += key, idx;\n        CteStr += (idx != (Object.keys(Datos).length - 1)) ? ',' : ') ';\n        \n        CteSelectStr += (typeof(Datos[key]) == 'string') ? `'${Datos[key].replace(/'/g,\"''\")}'` : `${Datos[key]}`;\n        \n        CteSelectStr += (idx != (Object.keys(Datos).length - 1)) ? ',' : ') ';\n    }\n});\n\n//COMPLETAMOS STRING PARA CREAR CTE\nCteStr += CteSelectStr;\n\nObject.keys(Datos).forEach((key, idx) => {\n    let campo = key;\n    let valor = (typeof(Datos[key]) == 'string') ? `'${Datos[key]}'` : Datos[key];\n    if (campo != 'nombretabla' && campo != 'keys') {\n        CamposUpdateStr += `${key} = (SELECT ${campo} FROM CteTmp )`\n        CamposUpdateStr += (idx != (Object.keys(Datos).length - 1)) ? ',' : ' ';\n    }\n\n})\n\n//AGREGAMOS CLAUSULA WHERE AL UPDATE\nif (Datos.keys) {\n    Keys = Datos.keys.split(\",\")\n    if (Keys.length > 0) {\n        WhereUpdateStr = ` WHERE `\n        Keys.forEach((key, idx) => {\n                let campo = key;\n                let valor = (typeof(Datos[key]) == 'string') ? `'${Datos[key]}'` : Datos[key];\n                \n                //WhereUpdateStr += `${key} = ${Datos[key]}`\n                WhereUpdateStr += `${key} = ${valor}`\n                \n                WhereUpdateStr += idx != Keys.length - 1 ? ' AND ' : ' ';\n            })\n            //`ClaUbicacion = ${Datos[\"ClaUbicacion\"]} `\n\n    }\n}\n\n\n\n//COMPLETAR UPDATE\nUpdateStr += CamposUpdateStr + WhereUpdateStr;\n\n//COMPLETAR QUERY\nQryFinal = CteStr + UpdateStr;\n\n//console.log(QryFinal);\n//msg.payload={NombreTabla,CteStr,CteSelectStr,CamposUpdateStr,WhereUpdateStr,UpdateStr}\nmsg.topic = QryFinal;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 199,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "7b3e6b61.537e84",
        "type": "function",
        "z": "690d6306.10b5ec",
        "name": "RegresarPayloadOriginal",
        "func": "msg.payload = flow.get('PayloadOriginal')\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1130,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "8ad37353.ec8f4",
        "type": "function",
        "z": "690d6306.10b5ec",
        "name": "Format",
        "func": "msg.IdComponente = msg.payload.IdComponente\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 260,
        "wires": [
            [
                "7b3e6b61.537e84"
            ]
        ]
    },
    {
        "id": "418a23c4.2b835c",
        "type": "split",
        "z": "690d6306.10b5ec",
        "name": "SplitIdComponente",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 770,
        "y": 260,
        "wires": [
            [
                "8ad37353.ec8f4"
            ]
        ]
    },
    {
        "id": "62e2f069.057d5",
        "type": "sqlite",
        "z": "690d6306.10b5ec",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 610,
        "y": 260,
        "wires": [
            [
                "418a23c4.2b835c"
            ]
        ]
    },
    {
        "id": "c2de0568.42f488",
        "type": "function",
        "z": "690d6306.10b5ec",
        "name": "qryComponentes",
        "func": "msg.topic = `\nSELECT \nClaMaquina as IdComponente\nFROM ASWLite_CatWorkUnit\nWHERE COALESCE(BajaLogica,0) = 0 \nAND EsMaquina = 1\n`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 260,
        "wires": [
            [
                "62e2f069.057d5"
            ]
        ]
    },
    {
        "id": "bac261c9.512af",
        "type": "function",
        "z": "690d6306.10b5ec",
        "name": "guardarPayloadOriginal",
        "func": "flow.set('PayloadOriginal',msg.payload) \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 260,
        "wires": [
            [
                "c2de0568.42f488"
            ]
        ]
    },
    {
        "id": "308f7150.26785e",
        "type": "function",
        "z": "16e2ce83.628ca1",
        "name": "AddInfoFromMaquinasCelda",
        "func": "let maquinas = global.get(\"MaquinasCelda\");\nif (maquinas) {\n    maquinas = maquinas.filter(maquina => maquina.TipoSeñal == 1)\n    //Tipo señal 1 = GPIO\n    maquina = maquinas.find(maquina => maquina.GPIO == msg.GPIO)\n    if(maquina){\n        msg.idComponente = maquina.ClaMaquinaReporta\n        msg.esMaquina = maquina.EsMaquina\n        msg.idOrigen = maquina.IdComponente\n        msg.esGralProduccion = maquina.EsGralProduccion\n        msg.esGralParos = maquina.EsGralParos\n        msg.nomMaquina = maquina.NomTipoMaquina;\n        msg.NPP = maquina.NailsPerRev / (maquina.PullyArms*maquina.PulleyRevs)\n        return msg;\n    }   \n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 220,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "54d4e1e2afcc8151",
        "type": "function",
        "z": "1144a4b6.dd0f6b",
        "name": "PulseAdder",
        "func": "\n//cada 60 segundos reseteo el contador de pulsos para la produccion\nif(msg.resetPulse){\n    context.set(\"counter1\",0);\n}\n\nvar counter1 = context.get(\"counter1\") || 0;\n\n//solo aumento el contador cuando el payload es un pulso\nif(msg.payload == 1){\n    counter1++;\n}\n\ncontext.set(\"counter1\",counter1);\nmsg.payload = counter1;\n\n\nif (!msg.resetCounter){\n    return msg;\n    \n}else{\n    //resetea el contador pero envia el ultimo mensaje con el acumulado\n    //no se resetea la velocidad porque en ese caso de debe mantener el conteo cada 60s\n    context.set(\"counter1\",0);\n    return [null,msg];\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 220,
        "wires": [
            [
                "6bd552cafdc7c7ca"
            ],
            [
                "cb44a54f6453175e"
            ]
        ]
    },
    {
        "id": "f9239a9b36ec29dc",
        "type": "change",
        "z": "1144a4b6.dd0f6b",
        "name": "Reset_count",
        "rules": [
            {
                "t": "set",
                "p": "resetPulse",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 140,
        "wires": [
            [
                "54d4e1e2afcc8151"
            ]
        ]
    },
    {
        "id": "24d6500dba8675d9",
        "type": "switch",
        "z": "1144a4b6.dd0f6b",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 190,
        "y": 120,
        "wires": [
            [
                "54d4e1e2afcc8151",
                "9ddc96cd6e0456f0"
            ],
            [
                "54d4e1e2afcc8151"
            ]
        ]
    },
    {
        "id": "6bd552cafdc7c7ca",
        "type": "delay",
        "z": "1144a4b6.dd0f6b",
        "name": "",
        "pauseType": "rate",
        "timeout": "10",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "outputs": 1,
        "x": 590,
        "y": 180,
        "wires": [
            [
                "f9239a9b36ec29dc",
                "cb44a54f6453175e"
            ]
        ]
    },
    {
        "id": "cb44a54f6453175e",
        "type": "function",
        "z": "1144a4b6.dd0f6b",
        "name": "Conversion",
        "func": "\n\nvar pulses1 = msg.payload;\n\nvar UNIT_PRODUCTION1 = pulses1 * msg.NPP\nvar unitProduction1 = context.get(\"UnitProduction\")||0;\nunitProduction1 = unitProduction1 + UNIT_PRODUCTION1;\ncontext.set(\"UnitProduction\",unitProduction1);\n\nmsg.payload = {'UNIT_PRODUCTION': unitProduction1}\n\n\nif (!msg.resetCounter){//reseteamos el contador pero enviamos el acumulado\n    return msg;\n}else{\n    context.set(\"UnitProduction\",0);\nreturn [null,msg];\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 220,
        "wires": [
            [
                "f4eec3be2a184867"
            ],
            [
                "f4eec3be2a184867"
            ]
        ]
    },
    {
        "id": "9ddc96cd6e0456f0",
        "type": "msg-speed",
        "z": "1144a4b6.dd0f6b",
        "name": "",
        "frequency": "sec",
        "interval": "30",
        "estimation": false,
        "ignore": false,
        "pauseAtStartup": false,
        "topicDependent": false,
        "x": 370,
        "y": 80,
        "wires": [
            [
                "abb8b34757b209a2"
            ],
            []
        ]
    },
    {
        "id": "abb8b34757b209a2",
        "type": "function",
        "z": "1144a4b6.dd0f6b",
        "name": "SinCambio",
        "func": "\nvar speed = msg.payload*2;\n\nif(msg.payload < 1)\n{\n    msg.payload={\"ON_OFF\":false\n        ,'SPEED_NAIL_MINUTE': speed\n    };\n}\nelse\n{\n    msg.payload={\"ON_OFF\":true\n        ,'SPEED_NAIL_MINUTE': speed};\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 80,
        "wires": [
            [
                "f4eec3be2a184867"
            ]
        ]
    },
    {
        "id": "f4eec3be2a184867",
        "type": "join",
        "z": "1144a4b6.dd0f6b",
        "name": "",
        "mode": "custom",
        "build": "merged",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": true,
        "timeout": "",
        "count": "1",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 910,
        "y": 140,
        "wires": [
            [
                "bc38d56f.1e60b8"
            ]
        ]
    },
    {
        "id": "54d8547e6e979d63",
        "type": "delay",
        "z": "1144a4b6.dd0f6b",
        "name": "",
        "pauseType": "rate",
        "timeout": "10",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "30",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "outputs": 1,
        "x": 1260,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "bc38d56f.1e60b8",
        "type": "switch",
        "z": "1144a4b6.dd0f6b",
        "name": "",
        "property": "resetCounter",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1090,
        "y": 160,
        "wires": [
            [
                "7442597d.b7bed8"
            ],
            [
                "54d8547e6e979d63"
            ]
        ]
    },
    {
        "id": "7442597d.b7bed8",
        "type": "change",
        "z": "1144a4b6.dd0f6b",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "resetCounter",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1120,
        "y": 80,
        "wires": [
            [
                "f4eec3be2a184867"
            ]
        ]
    },
    {
        "id": "9313dfb8.1f1f2",
        "type": "function",
        "z": "b568b641.da5428",
        "name": "",
        "func": "if (msg.payload == 0){\n    msg.payload = {\"ON_OFF\":false}\n}else{\n    msg.payload = {\"ON_OFF\":true}\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "22ce4940.e4dd06",
        "type": "function",
        "z": "e10e5505.0b2a38",
        "name": "PulseAdder",
        "func": "\nvar counter1 = context.get(\"counter1\") || 0;\n\n//solo aumento el contador cuando el payload es un pulso\nif(msg.payload == 1){\n    counter1++;\n}\n\ncontext.set(\"counter1\",counter1);\nmsg.payload = {'STRIP_PRODUCTION': counter1}\n\n\nif (!msg.resetCounter){\n    return msg;\n    \n}else{\n    //resetea el contador pero envia el ultimo mensaje con el acumulado\n    //no se resetea la velocidad porque en ese caso de debe mantener el conteo cada 60s\n    context.set(\"counter1\",0);\n    return [null,msg];\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 140,
        "wires": [
            [
                "bf3d8fc0.af3e9"
            ],
            [
                "bf3d8fc0.af3e9"
            ]
        ]
    },
    {
        "id": "b1718fbf.9fe02",
        "type": "switch",
        "z": "e10e5505.0b2a38",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 190,
        "y": 120,
        "wires": [
            [
                "22ce4940.e4dd06",
                "e1eacf86.75535"
            ],
            [
                "22ce4940.e4dd06"
            ]
        ]
    },
    {
        "id": "e1eacf86.75535",
        "type": "msg-speed",
        "z": "e10e5505.0b2a38",
        "name": "",
        "frequency": "sec",
        "interval": "30",
        "estimation": false,
        "ignore": false,
        "pauseAtStartup": false,
        "topicDependent": false,
        "x": 370,
        "y": 80,
        "wires": [
            [
                "bee051ff.8c5f3"
            ],
            []
        ]
    },
    {
        "id": "bee051ff.8c5f3",
        "type": "function",
        "z": "e10e5505.0b2a38",
        "name": "on, off, velocidad",
        "func": "\nvar speed = msg.payload*2;\n\nif(msg.payload < 1)\n{\n    //msg.payload={\"ON_OFF_VISION\":false\n    msg.payload={\"ON_OFF\":false\n        ,'SPEED_STRIP_MINUTE': speed\n    };\n}\nelse\n{\n    msg.payload={\"ON_OFF\":true\n        ,'SPEED_STRIP_MINUTE': speed};\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 80,
        "wires": [
            [
                "bf3d8fc0.af3e9"
            ]
        ]
    },
    {
        "id": "bf3d8fc0.af3e9",
        "type": "join",
        "z": "e10e5505.0b2a38",
        "name": "",
        "mode": "custom",
        "build": "merged",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": true,
        "timeout": "",
        "count": "1",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 770,
        "y": 140,
        "wires": [
            [
                "10ed720d.26a21e"
            ]
        ]
    },
    {
        "id": "a9cb3150.84142",
        "type": "delay",
        "z": "e10e5505.0b2a38",
        "name": "",
        "pauseType": "rate",
        "timeout": "10",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "30",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "outputs": 1,
        "x": 1080,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "10ed720d.26a21e",
        "type": "switch",
        "z": "e10e5505.0b2a38",
        "name": "",
        "property": "resetCounter",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 910,
        "y": 140,
        "wires": [
            [
                "28156b23.3ed464"
            ],
            [
                "a9cb3150.84142"
            ]
        ]
    },
    {
        "id": "28156b23.3ed464",
        "type": "change",
        "z": "e10e5505.0b2a38",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "resetCounter",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 860,
        "y": 60,
        "wires": [
            [
                "bf3d8fc0.af3e9"
            ]
        ]
    },
    {
        "id": "a3c59532.945ac8",
        "type": "function",
        "z": "4a12be2e.080d7",
        "name": "PulseAdder",
        "func": "\nvar counter1 = context.get(\"counter1\") || 0;\n\n//solo aumento el contador cuando el payload es un pulso\nif(msg.payload == 1){\n    counter1++;\n}\n\ncontext.set(\"counter1\",counter1);\nmsg.payload = {'STRIP_REJECTED': counter1}\n\n\nif (!msg.resetCounter){\n    return msg;\n    \n}else{\n    //resetea el contador pero envia el ultimo mensaje con el acumulado\n    //no se resetea la velocidad porque en ese caso de debe mantener el conteo cada 60s\n    context.set(\"counter1\",0);\n    return [null,msg];\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 160,
        "wires": [
            [
                "a232d995.0d94c8"
            ],
            [
                "a232d995.0d94c8"
            ]
        ]
    },
    {
        "id": "a232d995.0d94c8",
        "type": "join",
        "z": "4a12be2e.080d7",
        "name": "",
        "mode": "custom",
        "build": "merged",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": true,
        "timeout": "",
        "count": "1",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 370,
        "y": 160,
        "wires": [
            [
                "2e57145.877c2ec"
            ]
        ]
    },
    {
        "id": "292c858.584ad7a",
        "type": "delay",
        "z": "4a12be2e.080d7",
        "name": "",
        "pauseType": "rate",
        "timeout": "10",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "30",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "outputs": 1,
        "x": 680,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "2e57145.877c2ec",
        "type": "switch",
        "z": "4a12be2e.080d7",
        "name": "",
        "property": "resetCounter",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 510,
        "y": 160,
        "wires": [
            [
                "9722832f.13518"
            ],
            [
                "292c858.584ad7a"
            ]
        ]
    },
    {
        "id": "9722832f.13518",
        "type": "change",
        "z": "4a12be2e.080d7",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "resetCounter",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 460,
        "y": 80,
        "wires": [
            [
                "a232d995.0d94c8"
            ]
        ]
    },
    {
        "id": "b191fa15.09bd78",
        "type": "switch",
        "z": "ebe34ea7.4705a",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 390,
        "y": 160,
        "wires": [
            [
                "257a751.4b7348a",
                "1be0ed04.eb48c3"
            ],
            [
                "1be0ed04.eb48c3"
            ]
        ]
    },
    {
        "id": "1be0ed04.eb48c3",
        "type": "function",
        "z": "ebe34ea7.4705a",
        "name": "Conversion",
        "func": "\nvar counter1 = context.get(\"counter1\") || 0;\nvar nailsBox=  global.get(\"NailsBox\") || undefined;\nvar boxCompleted = msg.payload? true:false;\n\n//solo aumento el contador cuando el payload es un pulso\nif(msg.payload == 1){\n    counter1++;\n}\n\ncontext.set(\"counter1\",counter1);\nmsg.payload = {'PACK_PRODUCTION': counter1,\n                'PACK_COMPLETED': boxCompleted,\n                'UNIT_PRODUCTION': counter1*nailsBox\n}\n\n\nif (msg.resetCounter){\n    //resetea el contador pero envia el ultimo mensaje con el acumulado\n    context.set(\"counter1\",0);\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "257a751.4b7348a",
        "type": "msg-speed",
        "z": "ebe34ea7.4705a",
        "name": "",
        "frequency": "sec",
        "interval": "30",
        "estimation": false,
        "ignore": false,
        "pauseAtStartup": false,
        "topicDependent": false,
        "x": 570,
        "y": 120,
        "wires": [
            [
                "16d9e01f.c6734",
                "e4e871e0.e7916"
            ],
            []
        ]
    },
    {
        "id": "16d9e01f.c6734",
        "type": "function",
        "z": "ebe34ea7.4705a",
        "name": "ON_OFF",
        "func": "\nmsg.idComponente = flow.get(\"idComponente\");\nmsg.nomMaquina = flow.get(\"nomMaquina\");\n\n\nif(msg.payload < 1)\n{\n    msg.payload={\"ON_OFF\":false};\n}\nelse\n{\n    msg.payload={\"ON_OFF\":true};\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "e4e871e0.e7916",
        "type": "function",
        "z": "ebe34ea7.4705a",
        "name": "SPEED",
        "func": "\nvar speed = msg.payload*2;\nvar nailsBox=  global.get(\"NailsBox\") || undefined;\n\nmsg.idComponente = flow.get('idComponente');\nmsg.nomMaquina = flow.get('nomMaquina');\n\nif(msg.payload < 1)\n{\n    msg.payload={\"SPEED\":0};\n}\nelse\n{\n    msg.payload={\"SPEED\":speed*nailsBox};\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "468ccb6a.33ba94",
        "type": "function",
        "z": "ebe34ea7.4705a",
        "name": "AsignaVariableFlow",
        "func": "flow.set('idComponente', msg.idComponente);\nflow.set('nomMaquina', msg.nomMaquina);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 160,
        "wires": [
            [
                "b191fa15.09bd78"
            ]
        ]
    },
    {
        "id": "be422a7a7aabdeb0",
        "type": "comment",
        "z": "518934b7c7fabd9f",
        "name": "Recibimos IdParo de la salida del Subflujo CU201_Pag1_BitParos",
        "info": "",
        "x": 280,
        "y": 40,
        "wires": []
    },
    {
        "id": "1abd9a240c7e6206",
        "type": "function",
        "z": "518934b7c7fabd9f",
        "name": "qryConfTiempoAgrupar",
        "func": "node.warn(\"ENTRO A AGRUPAR BITPAros\")\nmsg.topic = `SELECT (VALOR1) as Tiempo\nFROM ASWLite_CfgConfiguracion \nWHERE ClaveConfiguracion = 'GROUPING_TIME'\n`\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 100,
        "wires": [
            [
                "e82e6cdcda3e4659"
            ]
        ]
    },
    {
        "id": "e82e6cdcda3e4659",
        "type": "sqlite",
        "z": "518934b7c7fabd9f",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 550,
        "y": 100,
        "wires": [
            [
                "7f395187611d2c5b"
            ]
        ]
    },
    {
        "id": "7f395187611d2c5b",
        "type": "function",
        "z": "518934b7c7fabd9f",
        "name": "AlmacenaConfTiempo",
        "func": "msg.TiempoAgrupa = msg.payload[0].Tiempo\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 100,
        "wires": [
            [
                "c43490f1b207efdf"
            ]
        ]
    },
    {
        "id": "c43490f1b207efdf",
        "type": "function",
        "z": "518934b7c7fabd9f",
        "name": "QryObtenerDatosParo",
        "func": "msg.topic = `\nSELECT IdParo\n,FechaHoraInicial\n,FechaHoraFinal\n,IdAgrupador\nFROM aswlite_bitparos\nWHERE idparo = ${msg.IdParo}\n`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 100,
        "wires": [
            [
                "540ed37e104a06ae"
            ]
        ]
    },
    {
        "id": "540ed37e104a06ae",
        "type": "sqlite",
        "z": "518934b7c7fabd9f",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 1170,
        "y": 100,
        "wires": [
            [
                "718cc1fcf7f46dfc"
            ]
        ]
    },
    {
        "id": "718cc1fcf7f46dfc",
        "type": "function",
        "z": "518934b7c7fabd9f",
        "name": "QryObtenerParos",
        "func": "let FechaHoraInicial = msg.payload[0].fechaHoraInicial\nlet IdParo = msg.payload[0].IdParo\n\nmsg.topic = `\n SELECT IdParo\n ,IdAgrupador\n FROM aswlite_bitparos\n WHERE FechaHoraInicial BETWEEN DATETIME('${FechaHoraInicial}','-${msg.TiempoAgrupa} Minutes') AND DATETIME('${FechaHoraInicial}','+${msg.TiempoAgrupa} Minutes')\n AND IdParo <> ${IdParo}\n\n`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 200,
        "wires": [
            [
                "3c377168bc8eb2db"
            ]
        ]
    },
    {
        "id": "3c377168bc8eb2db",
        "type": "sqlite",
        "z": "518934b7c7fabd9f",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 470,
        "y": 200,
        "wires": [
            [
                "303202fc24b44c48"
            ]
        ]
    },
    {
        "id": "303202fc24b44c48",
        "type": "switch",
        "z": "518934b7c7fabd9f",
        "name": "ExistenParos",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 630,
        "y": 200,
        "wires": [
            [
                "716315b005942688"
            ]
        ]
    },
    {
        "id": "716315b005942688",
        "type": "function",
        "z": "518934b7c7fabd9f",
        "name": "UpdAsignarAgrupador",
        "func": "const TieneAgrupador = msg.payload.filter( paro => paro.IdAgrupador )\n\nif(TieneAgrupador.length){\n   \n    //ya existe un agrupador, se asignará el mismo \n    msg.topic = `\n        UPDATE aswlite_bitparos\n        SET IdAgrupador = ${TieneAgrupador[0].IdAgrupador}\n        WHERE IdParo = ${msg.IdParo}\n\n    `\n    \n\n\n}else{\n  \n    //GENERO UNA LISTA DE IdParo PARA USAR EN EL WHERE \n    const listaIdParos = msg.payload.map((paro)=> paro.IdParo).join(\",\") +\",\"+ String(msg.IdParo)\n    \n    node.warn('UpdAsignarAgrupador '+listaIdParos)\n    \n    \n    msg.topic = `\n        UPDATE Aswlite_BitParos\n        SET IdAgrupador = (SELECT COALESCE( MAX(idagrupador),0 ) + 1 FROM Aswlite_BitParos )\n        WHERE IdParo IN (${listaIdParos})\n\n    `\n     \n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 200,
        "wires": [
            [
                "b5eb5553a970b39d"
            ]
        ]
    },
    {
        "id": "b5eb5553a970b39d",
        "type": "sqlite",
        "z": "518934b7c7fabd9f",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 1050,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "2747dac982d7ba99",
        "type": "catch",
        "z": "518934b7c7fabd9f",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 100,
        "y": 340,
        "wires": [
            [
                "9ab4f5adab912a26"
            ]
        ]
    },
    {
        "id": "9ab4f5adab912a26",
        "type": "function",
        "z": "518934b7c7fabd9f",
        "name": "Error Handler",
        "func": "node.warn(`ERROR NO CONTROLADO >  ${env.get(\"NAME\")} > ${JSON.stringify(msg)}`)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "ce74f9ef6d62c3aa",
        "type": "function",
        "z": "1b4307314ea43f2e",
        "name": "ASW_CU1_Pag5_FolioBitacoraParo_Sel",
        "func": "let idcelda = global.get('celda');\nlet ClaUbicacion = global.get('ClaUbicacion');\n\nmsg.payload = {\"sp_name\":\"AswSch.ASW_CU1_Pag5_FolioBitacoraParo_Sel\",\"params\":{PnClaUbicacion:ClaUbicacion, PsIdCelda:idcelda}}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1100,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "67b625e930aafa89",
        "type": "function",
        "z": "1b4307314ea43f2e",
        "d": true,
        "name": "QryCatFolioBitacora",
        "func": "msg.topic =  `SELECT count(1) as existe\n                     ,ClaveFolioBitacora   \n              FROM AswLite_CatFolioBitacora\n              GROUP BY ClaveFolioBitacora`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 40,
        "wires": [
            [
                "8c713fabd1811873"
            ]
        ]
    },
    {
        "id": "8c713fabd1811873",
        "type": "sqlite",
        "z": "1b4307314ea43f2e",
        "d": true,
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 490,
        "y": 40,
        "wires": [
            [
                "8005ee38f93f4252"
            ]
        ]
    },
    {
        "id": "8005ee38f93f4252",
        "type": "switch",
        "z": "1b4307314ea43f2e",
        "d": true,
        "name": "RevisaExistenFolios",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "empty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 660,
        "y": 40,
        "wires": [
            [
                "fcb063a9d725e64e"
            ]
        ]
    },
    {
        "id": "fcb063a9d725e64e",
        "type": "function",
        "z": "1b4307314ea43f2e",
        "d": true,
        "name": "CU1_Pag5_FolioBitacora_Sel",
        "func": "let idcelda = global.get('celda');\nlet ClaUbicacion = global.get('ClaUbicacion');\n\nmsg.payload = {\"sp_name\":\"ASWSch.ASW_CU1_Pag5_FolioBitacora_Sel\",\"params\":{PnClaUbicacion:ClaUbicacion, PnIdCelda:idcelda}}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "e7c044e85c3a461e",
        "type": "function",
        "z": "1b4307314ea43f2e",
        "name": "ASW_CU1_Pag5_FolioBitacoraAndon_Sel",
        "func": "let idcelda = global.get('celda');\nlet ClaUbicacion = global.get('ClaUbicacion');\n\nmsg.payload = {\"sp_name\":\"AswSch.ASW_CU1_Pag5_FolioBitacoraAndon_Sel\",\"params\":{PnClaUbicacion:ClaUbicacion, PsIdCelda:idcelda}}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1090,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "f75cbe4fb23d2fae",
        "type": "function",
        "z": "1b4307314ea43f2e",
        "name": "ASW_CU1_Pag5_FolioBitacoraProduccion_Sel",
        "func": "let idcelda = global.get('celda');\nlet ClaUbicacion = global.get('ClaUbicacion');\n\nmsg.payload = {\"sp_name\":\"AswSch.ASW_CU1_Pag5_FolioBitacoraProduccion_Sel\",\"params\":{PnClaUbicacion:ClaUbicacion, PsIdCelda:idcelda}}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "6d834d496374dbc2",
        "type": "function",
        "z": "1b4307314ea43f2e",
        "name": "ASW_CU1_Pag5_FolioBitacoraEficiencia_Sel",
        "func": "let idcelda = global.get('celda');\nlet ClaUbicacion = global.get('ClaUbicacion');\n\nmsg.payload = {\"sp_name\":\"AswSch.ASW_CU1_Pag5_FolioBitacoraEficiencia_Sel\",\"params\":{PnClaUbicacion:ClaUbicacion, PsIdCelda:idcelda}}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "edcf3f8276295ee0",
        "type": "sqlite",
        "z": "1b4307314ea43f2e",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 590,
        "y": 100,
        "wires": [
            [
                "c6110d2367195012"
            ]
        ]
    },
    {
        "id": "c9f2ee07aa821f5d",
        "type": "function",
        "z": "1b4307314ea43f2e",
        "name": "QryCatFolioBitacoraParos",
        "func": "msg.topic =  `SELECT 1\n              FROM AswLite_CatFolioBitacora\n              WHERE ClaveFolioBitacora = 'FolBitParos' `\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 100,
        "wires": [
            [
                "edcf3f8276295ee0"
            ]
        ]
    },
    {
        "id": "c6110d2367195012",
        "type": "switch",
        "z": "1b4307314ea43f2e",
        "name": "RevisaExistenFolios",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "empty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 780,
        "y": 100,
        "wires": [
            [
                "ce74f9ef6d62c3aa"
            ]
        ]
    },
    {
        "id": "7cba273e444218e3",
        "type": "function",
        "z": "1b4307314ea43f2e",
        "name": "QryCatFolioBitacoraAndon",
        "func": "msg.topic =  `SELECT 1\n              FROM AswLite_CatFolioBitacora\n              WHERE ClaveFolioBitacora = 'FolBitAndon' `\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 160,
        "wires": [
            [
                "dc282a7d9e7395d8"
            ]
        ]
    },
    {
        "id": "dc282a7d9e7395d8",
        "type": "sqlite",
        "z": "1b4307314ea43f2e",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 610,
        "y": 160,
        "wires": [
            [
                "ac3b1bef9f254cea"
            ]
        ]
    },
    {
        "id": "ac3b1bef9f254cea",
        "type": "switch",
        "z": "1b4307314ea43f2e",
        "name": "RevisaExistenFolios",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "empty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 780,
        "y": 160,
        "wires": [
            [
                "e7c044e85c3a461e"
            ]
        ]
    },
    {
        "id": "169ea06529cb0e3d",
        "type": "function",
        "z": "1b4307314ea43f2e",
        "name": "QryCatFolioBitacoraProduccion",
        "func": "msg.topic =  `SELECT 1\n              FROM AswLite_CatFolioBitacora\n              WHERE ClaveFolioBitacora = 'FolBitProd' `\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 200,
        "wires": [
            [
                "174a952064f75292"
            ]
        ]
    },
    {
        "id": "174a952064f75292",
        "type": "sqlite",
        "z": "1b4307314ea43f2e",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 610,
        "y": 200,
        "wires": [
            [
                "d8e43fb6ebb72056"
            ]
        ]
    },
    {
        "id": "d8e43fb6ebb72056",
        "type": "switch",
        "z": "1b4307314ea43f2e",
        "name": "RevisaExistenFolios",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "empty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 780,
        "y": 200,
        "wires": [
            [
                "f75cbe4fb23d2fae"
            ]
        ]
    },
    {
        "id": "b2b1b10d05d9eb40",
        "type": "function",
        "z": "1b4307314ea43f2e",
        "name": "QryCatFolioBitacoraEficiencia",
        "func": "msg.topic =  `SELECT 1\n              FROM AswLite_CatFolioBitacora\n              WHERE ClaveFolioBitacora = 'FolBitEficiencia' `\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 240,
        "wires": [
            [
                "e76b65bf87b2eecd"
            ]
        ]
    },
    {
        "id": "e76b65bf87b2eecd",
        "type": "sqlite",
        "z": "1b4307314ea43f2e",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 610,
        "y": 240,
        "wires": [
            [
                "0408a0b4bfab9768"
            ]
        ]
    },
    {
        "id": "0408a0b4bfab9768",
        "type": "switch",
        "z": "1b4307314ea43f2e",
        "name": "RevisaExistenFolios",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "empty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 780,
        "y": 240,
        "wires": [
            [
                "6d834d496374dbc2"
            ]
        ]
    },
    {
        "id": "9d2a48b515339fa1",
        "type": "catch",
        "z": "1b4307314ea43f2e",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 100,
        "y": 360,
        "wires": [
            [
                "3787a08d2f74491a"
            ]
        ]
    },
    {
        "id": "3787a08d2f74491a",
        "type": "function",
        "z": "1b4307314ea43f2e",
        "name": "Error Handler",
        "func": "node.warn(`ERROR NO CONTROLADO >  ${env.get(\"NAME\")} > ${JSON.stringify(msg)}`)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "6616aeb50a61c434",
        "type": "function",
        "z": "a593733916e04f5f",
        "name": "",
        "func": "msg[\"topic\"] = \n'SELECT ClaArticulo,ClaveArticulo, IdPO FROM ASWLite_TraOrdenProduccion WHERE ClaEstatus = 2';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 140,
        "wires": [
            [
                "ec707968cb918ea3"
            ]
        ]
    },
    {
        "id": "ec707968cb918ea3",
        "type": "sqlite",
        "z": "a593733916e04f5f",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 670,
        "y": 140,
        "wires": [
            [
                "49b387be57517108"
            ]
        ]
    },
    {
        "id": "49b387be57517108",
        "type": "function",
        "z": "a593733916e04f5f",
        "name": "",
        "func": "previousPO = global.get('previousPO')\n\nmsg.topic = `UPDATE ASWLite_VariablesProduccion\nSET ClaArticulo = ${msg.payload[0].ClaArticulo}, ClaveArticulo = \"${msg.payload[0].ClaveArticulo}\", IdPO = ${msg.payload[0].IdPO}\nWHERE IdPO = ${previousPO}\n;`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 140,
        "wires": [
            [
                "6b0b7c748bef7fc6"
            ]
        ]
    },
    {
        "id": "6b0b7c748bef7fc6",
        "type": "sqlite",
        "z": "a593733916e04f5f",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 930,
        "y": 140,
        "wires": [
            [
                "44cd51e3a4ae2248"
            ]
        ]
    },
    {
        "id": "44cd51e3a4ae2248",
        "type": "function",
        "z": "a593733916e04f5f",
        "name": "SelectIdComponente",
        "func": "msg[\"topic\"] = \n'SELECT IdComponente,IdPO FROM ASWLite_VariablesProduccion';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1100,
        "y": 140,
        "wires": [
            [
                "822a1123f64a53af"
            ]
        ]
    },
    {
        "id": "822a1123f64a53af",
        "type": "sqlite",
        "z": "a593733916e04f5f",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 1270,
        "y": 140,
        "wires": [
            [
                "f43e0fb8f38e5380"
            ]
        ]
    },
    {
        "id": "f43e0fb8f38e5380",
        "type": "function",
        "z": "a593733916e04f5f",
        "name": "",
        "func": "msg.IdComponente = msg.payload[0].IdComponente;\nmsg.IdPO = msg.payload[0].IdPO;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1400,
        "y": 140,
        "wires": [
            [
                "f67b49be18c6c0b5"
            ]
        ]
    },
    {
        "id": "f67b49be18c6c0b5",
        "type": "function",
        "z": "a593733916e04f5f",
        "name": "guardarPayloadOriginal",
        "func": "flow.set('PayloadOriginal',msg.payload) \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1590,
        "y": 140,
        "wires": [
            [
                "ced32f6f4809abf7"
            ]
        ]
    },
    {
        "id": "ced32f6f4809abf7",
        "type": "function",
        "z": "a593733916e04f5f",
        "name": "InsertCajaNueva",
        "func": "\nmsg.topic = `INSERT INTO ASWLite_TraOrdenProduccionDet(ClaUbicacion,IdPO,IdComponente,IdUnidad,EsTerminado,EsAdicional,FechaInicioReal,ClaEstatusReplica,BajaLogica,ClaUsuarioMod,NombrePcMod,FechaUltimaMod,IdMateriaPrimaInicio,FechaInicioAdm,ClaTurno)\n    SELECT \n        (SELECT Valor1 FROM ASWLite_CfgConfiguracion WHERE ClaveConfiguracion = 'UBI_DEFAULT') as ClaUbicacion\n        ,${msg.IdPO}\n        ,${msg.IdComponente}\n        ,(SELECT (COALESCE(MAX(UnidadesProducidas),0) + 1 ) FROM ASWLite_TraOrdenProduccion WHERE IdPO = ${msg.IdPO}) as IdUnidad\n        ,0 as EsTerminado\n        ,0 as EsAdicional\n        ,datetime('now','localtime') as FechaInicioReal\n        ,1 as ClaEstatusReplica\n        ,0 as BajaLogica\n        ,${global.get('ClaUsuarioMod')||345} as ClaUsuarioMod\n        ,'RB' as NombrePcMod\n        ,datetime('now','localtime') as FechaUltimaMod\n        ,(SELECT IdBarCode FROM ASWLite_TraMateriaPrima WHERE IdPO = ${msg.IdPO} and EsEnUso = 1) as IdMateriaPrimaInicio\n        ,Var.FechaAdministrativa as FechaInicioAdm\n        ,Var.ClaTurno as ClaTurno\n    FROM ASWLite_VariablesProduccion Var\n    WHERE var.idcomponente = ${msg.IdComponente}`\nnode.warn('AGREGAR CAJA NUEVA TraOrderProduccionDet')\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1830,
        "y": 140,
        "wires": [
            [
                "b9e5e06f38a1b44d"
            ]
        ]
    },
    {
        "id": "b9e5e06f38a1b44d",
        "type": "sqlite",
        "z": "a593733916e04f5f",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 1990,
        "y": 140,
        "wires": [
            [
                "148f868e273b7166"
            ]
        ]
    },
    {
        "id": "148f868e273b7166",
        "type": "function",
        "z": "a593733916e04f5f",
        "name": "CajaNuevaTblVariables",
        "func": "msg.topic=`WITH CteTmp (IdUnidad) AS ( SELECT MAX(IdUnidad) as IdUnidad FROM ASWLite_TraOrdenProduccionDet\n                                        WHERE idComponente = ${msg.IdComponente}\n                                        AND IdPO in (SELECT IdPO FROM ASWLite_VariablesProduccion WHERE IdComponente = ${msg.IdComponente}))\nUPDATE ASWLite_VariablesProduccion \nSET IdUnidadCaja = (SELECT IdUnidad FROM CteTmp )\nWHERE IdComponente = ${msg.IdComponente};`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2230,
        "y": 140,
        "wires": [
            [
                "555a1f14c69b17da"
            ]
        ]
    },
    {
        "id": "555a1f14c69b17da",
        "type": "sqlite",
        "z": "a593733916e04f5f",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 2450,
        "y": 140,
        "wires": [
            [
                "26a5a6f180143e39"
            ]
        ]
    },
    {
        "id": "26a5a6f180143e39",
        "type": "function",
        "z": "a593733916e04f5f",
        "name": "RegresarPayloadOriginal",
        "func": "msg.payload = flow.get('PayloadOriginal')\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2670,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "2532e1189fa1d397",
        "type": "function",
        "z": "a593733916e04f5f",
        "name": "CancelarOrden",
        "func": "\nmsg.topic = `UPDATE ASWLite_TraOrdenProduccion\nSET ClaEstatusReplica=1, ClaEstatus = 4, FechaFinReal = strftime('%Y-%m-%d %H:%M:%S', datetime('now','localtime')),FechaUltimaMod = strftime('%Y-%m-%d %H:%M:%S', datetime('now','localtime'))\nWHERE IdPO = ${msg.payload.CurrentPO}\n;`\n\nnode.info(`[CU999] - Se termina la orden ${msg.payload.CurrentPO}`)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 220,
        "y": 80,
        "wires": [
            [
                "167a3c7a5394ee6e"
            ]
        ]
    },
    {
        "id": "db1d4fc0ca65fda3",
        "type": "function",
        "z": "a593733916e04f5f",
        "name": "ActivarrOrden",
        "func": "\nmsg.topic = `UPDATE ASWLite_TraOrdenProduccion\nSET ClaEstatusReplica=1, ClaEstatus = 2, FechaInicioReal = strftime('%Y-%m-%d %H:%M:%S', datetime('now','localtime')),FechaUltimaMod = strftime('%Y-%m-%d %H:%M:%S', datetime('now','localtime'))\nWHERE IdPO = ${msg.payload.NextPO}\n;`\n\nnode.info(`[CU999] - Se activa la orden ${msg.payload.NextPO}`)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 220,
        "y": 140,
        "wires": [
            [
                "6735eeb03c30eec2"
            ]
        ]
    },
    {
        "id": "167a3c7a5394ee6e",
        "type": "sqlite",
        "z": "a593733916e04f5f",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 390,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "6735eeb03c30eec2",
        "type": "sqlite",
        "z": "a593733916e04f5f",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 390,
        "y": 140,
        "wires": [
            [
                "6616aeb50a61c434"
            ]
        ]
    },
    {
        "id": "6e020f97920a5601",
        "type": "function",
        "z": "a593733916e04f5f",
        "name": "SetPreviousPO",
        "func": "global.set(\"previousPO\", msg.payload.CurrentPO);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "8f21193a9219d386",
        "type": "catch",
        "z": "a593733916e04f5f",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 100,
        "y": 280,
        "wires": [
            [
                "1ad64e9b898b3ab1"
            ]
        ]
    },
    {
        "id": "1ad64e9b898b3ab1",
        "type": "function",
        "z": "a593733916e04f5f",
        "name": "Error Handler",
        "func": "node.warn(`ERROR NO CONTROLADO >  ${env.get(\"NAME\")} > ${JSON.stringify(msg)}`)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "646df62e5fa4640d",
        "type": "catch",
        "z": "63ea8e21528482a0",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 100,
        "y": 240,
        "wires": [
            [
                "afcc7c4be8ed7378"
            ]
        ]
    },
    {
        "id": "afcc7c4be8ed7378",
        "type": "function",
        "z": "63ea8e21528482a0",
        "name": "Error Handler",
        "func": "node.warn(`ERROR NO CONTROLADO >  ${env.get(\"NAME\")} > ${JSON.stringify(msg)}`)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "3416ad64f01251ce",
        "type": "function",
        "z": "63ea8e21528482a0",
        "name": "KeySearch",
        "func": "let obj = {\n  fechaAdm:  global.get('FechaAdm'),\n  turno : global.get('ClaTurno'),\n  IdComponente : msg.IdComponente,\n  TipoComponente : msg.tipoComponente\n \n};\nlet missing = [];\nObject.keys(obj).forEach(key => {\n  if(obj[key]==undefined){\n      missing.push(key);\n  }\n});\nmsg.payload = missing;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 40,
        "wires": [
            [
                "5c880a8177431256"
            ]
        ]
    },
    {
        "id": "5c880a8177431256",
        "type": "function",
        "z": "63ea8e21528482a0",
        "name": "AlertMessage",
        "func": "if(msg.payload.length>0){\n    node.warn(`Los campos ${msg.payload} no están definidos`)\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "d97c5487aeea4c53",
        "type": "function",
        "z": "63ea8e21528482a0",
        "name": "UltimoCheckinTurnoSel",
        "func": "var turno = global.get('ClaTurno');\nvar fechaAdm = global.get('FechaAdm');\nvar columnaTiempo;\n\n\nmsg.IdComponente = msg.payload.IdComponente\nmsg.tipoComponente = msg.payload.tipoComponente;\nmsg.indice = parseInt(msg.payload.indice) + 1;\n\n//Columna segun el indice\n//el ordemamiento de los componentes se hace en FnComponentesSel cuando se cargan los componentes en la App\n columnaTiempo = 'TiempoParo' + msg.indice;\n\nmsg.topic = \n`SELECT ${columnaTiempo} AS Horometro \n    ,fechaUltimaMod\nFROM ASWLite_TraReporteProduccion \nWHERE ClaTurno=${turno} AND FechaAdmScada = \"${fechaAdm}\" AND ClaTipoRegistro = 1 AND EsManual = 1 ORDER BY Id DESC LIMIT 1;`;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 120,
        "wires": [
            [
                "beb82cc821e15693",
                "3416ad64f01251ce"
            ]
        ]
    },
    {
        "id": "beb82cc821e15693",
        "type": "sqlite",
        "z": "63ea8e21528482a0",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 430,
        "y": 120,
        "wires": [
            [
                "359e43d1e13a162b"
            ]
        ]
    },
    {
        "id": "359e43d1e13a162b",
        "type": "function",
        "z": "63ea8e21528482a0",
        "name": "HayCheckin?",
        "func": "\nif(msg.payload.length>0){\n    \n    msg.horometro = msg.payload[0].Horometro\n    \n    msg.checkIn = msg.payload[0].FechaUltimaMod\n    msg.horaInicio = new Date(msg.payload[0].FechaUltimaMod).getTime();\n    msg.horaActual = new Date();\n    msg.horaActual = msg.horaActual.getTime();\n    \n    msg.duracionTurno = (msg.horaActual - msg.horaInicio)/3600000;\n    \n    //msg.runHrs = msg.duracionTurno - msg.tiempoParo;\n    return [msg,null];\n\n}else{\n    return [null,{indice:msg.indice}];\n}\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 120,
        "wires": [
            [
                "ffc9c57dbaae09c2"
            ],
            [
                "934ab875c666cc58"
            ]
        ]
    },
    {
        "id": "ffc9c57dbaae09c2",
        "type": "function",
        "z": "63ea8e21528482a0",
        "name": "TiempoParoSel",
        "func": "let fechaAdm = global.get('FechaAdm');\nlet claTurno = global.get('ClaTurno');\n\nmsg.topic = `\n    SELECT COALESCE(SUM(\n                (JULIANDAY(COALESCE(FechaHoraFinal, DATETIME('now', 'localtime')))\n        \t\t- JULIANDAY(MAX(DATETIME('${msg.checkIn}'),FechaHoraInicial))\n        \t\t) * 24\n            ),0) AS TiempoParo \n    FROM AswLite_BitParos \n    WHERE fechaAdmSCADA = \"${fechaAdm}\" \n    AND ClaTurno = ${claTurno} \n    AND IdComponente = ${msg.IdComponente} \n    AND (FechaHoraFinal >= DATETIME('${msg.checkIn}')\n\t    OR FechaHoraFinal IS NULL);`\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 100,
        "wires": [
            [
                "c02cbff553fc64b4"
            ]
        ]
    },
    {
        "id": "c02cbff553fc64b4",
        "type": "sqlite",
        "z": "63ea8e21528482a0",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 890,
        "y": 100,
        "wires": [
            [
                "c1354023c2a269b6"
            ]
        ]
    },
    {
        "id": "c1354023c2a269b6",
        "type": "function",
        "z": "63ea8e21528482a0",
        "name": "CalculaHorometro",
        "func": "\nmsg.tiempoParo = msg.payload[0].TiempoParo\n\nmsg.totalRunHrs =parseFloat((msg.duracionTurno - msg.tiempoParo + msg.horometro).toFixed(2));\nmsg.payload = msg.totalRunHrs;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "934ab875c666cc58",
        "type": "function",
        "z": "63ea8e21528482a0",
        "name": "UltimoCheckin/outSel",
        "func": "var turno = global.get('ClaTurno');\nvar fechaAdm = global.get('FechaAdm');\nvar columnaTiempo;\n\n//Columna segun el indice\n//el ordemamiento de los componentes se hace en FnComponentesSel cuando se cargan los componentes en la App\n columnaTiempo = 'TiempoParo' + msg.indice;\n\nmsg.topic = \n`SELECT ${columnaTiempo} AS Horometro \n    ,fechaUltimaMod\nFROM ASWLite_TraReporteProduccion \nWHERE EsManual = 1 ORDER BY Id DESC LIMIT 1;`;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 140,
        "wires": [
            [
                "ec9846291dc0c23b"
            ]
        ]
    },
    {
        "id": "ec9846291dc0c23b",
        "type": "sqlite",
        "z": "63ea8e21528482a0",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 930,
        "y": 140,
        "wires": [
            [
                "e7d092a0b7ea4ab0"
            ]
        ]
    },
    {
        "id": "e7d092a0b7ea4ab0",
        "type": "function",
        "z": "63ea8e21528482a0",
        "name": "UltimoHorometro",
        "func": "\nif(msg.payload.length>0){\n    \n    msg.horometro = msg.payload[0].Horometro\n   \n    msg.payload = msg.horometro;\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1090,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "49ca4d5db6f0c5b3",
        "type": "function",
        "z": "10996779f0a53f03",
        "name": "guardarPayloadOriginal",
        "func": "flow.set('PayloadOriginal',msg.payload) \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 120,
        "wires": [
            [
                "754bc3ce6d33fc31"
            ]
        ]
    },
    {
        "id": "3093f9f6badd98f0",
        "type": "function",
        "z": "10996779f0a53f03",
        "name": "RegresarPayloadOriginal",
        "func": "msg.payload = flow.get('PayloadOriginal')\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 120,
        "wires": [
            [
                "874b53093e592fa3"
            ]
        ]
    },
    {
        "id": "754bc3ce6d33fc31",
        "type": "sqlite",
        "z": "10996779f0a53f03",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 390,
        "y": 120,
        "wires": [
            [
                "3093f9f6badd98f0"
            ]
        ]
    },
    {
        "id": "fd460a8f406a153b",
        "type": "comment",
        "z": "10996779f0a53f03",
        "name": "ejecuta la sentencia sql que se recibe en msg.topic pero regresa lo que venia en msg.payload originalmente",
        "info": "",
        "x": 380,
        "y": 20,
        "wires": []
    },
    {
        "id": "3f8516e8b01e5a07",
        "type": "comment",
        "z": "10996779f0a53f03",
        "name": "usar este subflujo cuando no ocupamos lo que responda sqlite pero si requerimos lo que tenia el payload anteriormente",
        "info": "",
        "x": 420,
        "y": 60,
        "wires": []
    },
    {
        "id": "874b53093e592fa3",
        "type": "change",
        "z": "10996779f0a53f03",
        "name": "DeletePayloadFlow",
        "rules": [
            {
                "t": "delete",
                "p": "PayloadOriginal",
                "pt": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 810,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "68e95eced0302b04",
        "type": "function",
        "z": "210c126b27629e8d",
        "name": "",
        "func": "let ClaUsuarioMod = global.get('ClaUsuarioMod');\nlet NombrePcMod = global.get('NombrePcMod');\n\nmsg.topic = `\nSELECT  'AswLite_BitParos' as nombretabla,\n        bit.IdParo,\n        6 as ClaSeccionParo,\n        datetime('now','localtime') as FechaUltimaMod, \n        ${ClaUsuarioMod} as ClaUsuarioMod,\n        '${NombrePcMod}' as NombrePcMod\nFROM AswLite_BitParos bit\nWHERE  bit.IdParo = ${msg.IdParo}\nAND bit.ClaSeccionParo is NULL\nAND bit.DuracionSegundos >= (SELECT Valor1 * 60 FROM ASWLite_CfgConfiguracion WHERE ClaveConfiguracion = 'CHANGEOVER')\nAND bit.IdPOInicio is not null\nAND bit.IdPOFin is not null\nAND bit.IdPOInicio <> IdPOFin\n`\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 100,
        "wires": [
            [
                "6166d8a4ea7020ea"
            ]
        ]
    },
    {
        "id": "6166d8a4ea7020ea",
        "type": "sqlite",
        "z": "210c126b27629e8d",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 550,
        "y": 100,
        "wires": [
            [
                "ccc8a50f812cc3ff"
            ]
        ]
    },
    {
        "id": "ebc6261509d31e6d",
        "type": "function",
        "z": "210c126b27629e8d",
        "name": "fnParseUpdate",
        "func": "let Datos = msg.payload //[{\"nombretabla\":\"ASWLite_TraOrdenProduccion\",\"ClaUbicacion\":\"68\",\"IdPO\":3,\"IdCelda\":\"1\",\"ClaArticulo\":\"611645\",\"ClaveArticulo\":\"611645\",\"Orden\":\"3\",\"ClaEstatus\":\"1\",\"BajaLogica\":\"0\",\"ClaUsuarioMod\":\"0\",\"NombrePcMod\":\"302NGALAZ\",\"FechaUltimaMod\":\"2020-03-05T01:43:57.713\"}]\nDatos = Datos[0];\nlet NombreTabla = Datos.nombretabla;\nlet CteStr = 'WITH CteTmp (';\nlet CteSelectStr = 'AS ( SELECT '\nlet UpdateStr = `UPDATE ${NombreTabla} SET `;\nlet CamposUpdateStr = '';\nlet WhereUpdateStr = ''\nlet QryFinal = '';\n//LISTA DE CAMPOS DE LA CTE\nObject.keys(Datos).forEach((key,idx) => {\n    if(key != 'nombretabla'){\n        CteStr += key,idx;\n        CteStr += (idx != (Object.keys(Datos).length -1) ) ? ',':') ';\n        CteSelectStr += (typeof(Datos[key]) == 'string') ? `'${Datos[key]}'` : `${Datos[key]}`;\n        CteSelectStr += (idx != (Object.keys(Datos).length -1) ) ? ',':') ';\n    }\n});\n\n//COMPLETAMOS STRING PARA CREAR CTE\nCteStr += CteSelectStr;\n\nObject.keys(Datos).forEach((key,idx) => {\n    let campo = key;\n    let valor = (typeof(Datos[key]) == 'string') ? `'${Datos[key]}'` : Datos[key];\n    if(campo != 'nombretabla'){\n        CamposUpdateStr += `${key} = (SELECT ${campo} FROM CteTmp )`\n        CamposUpdateStr += (idx != (Object.keys(Datos).length -1) ) ? ',':' ';\n    }\n    \n})\n//AGREGAMOS CLAUSULA WHERE AL UPDATE\nWhereUpdateStr = ` WHERE IdParo =  ${Datos[\"IdParo\"]}  `\n\n//COMPLETAR UPDATE\nUpdateStr += CamposUpdateStr + WhereUpdateStr;\n\n//COMPLETAR QUERY\nQryFinal = CteStr+UpdateStr;\n\n\n//msg.payload={NombreTabla,CteStr,CteSelectStr,CamposUpdateStr,WhereUpdateStr,UpdateStr}\nmsg.topic=QryFinal;\nreturn msg;\n\n\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 900,
        "y": 20,
        "wires": [
            [
                "3a7e6ad3321d7534"
            ]
        ],
        "info": "CREA EL UPDATE A EJECUTAR PARA ACTUALIZAR ORDENES DE TRABAJO\n *    ** SOLO PROCESA UN REGISTRO**"
    },
    {
        "id": "0a243c54267d1090",
        "type": "switch",
        "z": "210c126b27629e8d",
        "name": "",
        "property": "IdParo",
        "propertyType": "msg",
        "rules": [
            {
                "t": "istype",
                "v": "number",
                "vt": "number"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 170,
        "y": 151,
        "wires": [
            [
                "68e95eced0302b04"
            ],
            [
                "172e590142a4de47"
            ]
        ]
    },
    {
        "id": "3a7e6ad3321d7534",
        "type": "sqlite",
        "z": "210c126b27629e8d",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 1070,
        "y": 20,
        "wires": [
            [
                "a7483730cd08ce48"
            ]
        ]
    },
    {
        "id": "ccc8a50f812cc3ff",
        "type": "switch",
        "z": "210c126b27629e8d",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 690,
        "y": 100,
        "wires": [
            [
                "ebc6261509d31e6d"
            ],
            [
                "4c5223a486ef76e3"
            ]
        ]
    },
    {
        "id": "a7483730cd08ce48",
        "type": "function",
        "z": "210c126b27629e8d",
        "name": "FormatoPayloadSalidaCambioPO",
        "func": "msg.payload = {Evento:\"CAMBIOPO\",IdComponente:msg.IdComponente}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1360,
        "y": 20,
        "wires": [
            []
        ]
    },
    {
        "id": "4c5223a486ef76e3",
        "type": "function",
        "z": "210c126b27629e8d",
        "name": "FormatoPayloadSalidaFINParo",
        "func": "if(msg.CambioPO == true){\n    msg.payload = {Evento:\"CAMBIOPO\",IdComponente:msg.IdComponente}\n}else{\n    msg.payload = {Evento:\"FINPARO\",IdComponente:msg.IdComponente}\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1088,
        "y": 108,
        "wires": [
            []
        ]
    },
    {
        "id": "172e590142a4de47",
        "type": "function",
        "z": "210c126b27629e8d",
        "name": "FormatoPayloadSalidaCambioPO",
        "func": "msg.payload = {Evento:\"INICIOPARO\",IdComponente:msg.IdComponente}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1100,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "5136683b643d3411",
        "type": "catch",
        "z": "210c126b27629e8d",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 80,
        "y": 260,
        "wires": [
            [
                "e35552c74ed165b2"
            ]
        ]
    },
    {
        "id": "e35552c74ed165b2",
        "type": "function",
        "z": "210c126b27629e8d",
        "name": "Error Handler",
        "func": "node.warn(`ERROR NO CONTROLADO >  ${env.get(\"NAME\")} > ${JSON.stringify(msg)}`)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "379b46a002ae06c8",
        "type": "function",
        "z": "12c081a0a0519d8d",
        "name": "InsertCajaNueva",
        "func": "\nmsg.topic = `INSERT INTO ASWLite_TraOrdenProduccionDet(ClaUbicacion,IdPO,IdComponente,IdUnidad,EsTerminado,EsAdicional,FechaInicioReal,ClaEstatusReplica,BajaLogica,ClaUsuarioMod,NombrePcMod,FechaUltimaMod,IdMateriaPrimaInicio,FechaInicioAdm,ClaTurno)\n    SELECT \n        (SELECT Valor1 FROM ASWLite_CfgConfiguracion WHERE ClaveConfiguracion = 'UBI_DEFAULT') as ClaUbicacion\n        , var.IdPO\n        ,var.IdComponente\n        ,(SELECT (COALESCE(MAX(UnidadesProducidas),0) + 1 ) FROM ASWLite_TraOrdenProduccion WHERE IdPO = var.IdPO) as IdUnidad\n        ,0 as EsTerminado\n        ,0 as EsAdicional\n        ,datetime('now','localtime') as FechaInicioReal\n        ,1 as ClaEstatusReplica\n        ,0 as BajaLogica\n        ,${global.get('ClaUsuarioMod')||345} as ClaUsuarioMod\n        ,'RB' as NombrePcMod\n        ,datetime('now','localtime') as FechaUltimaMod\n        ,(SELECT IdBarCode FROM ASWLite_TraMateriaPrima WHERE IdPO = var.IdPO and EsEnUso = 1) as IdMateriaPrimaInicio\n        ,Var.FechaAdministrativa as FechaInicioAdm\n        ,Var.ClaTurno as ClaTurno\n    FROM ASWLite_VariablesProduccion Var\n    WHERE var.idcomponente = ${msg.IdComponente}`\n//node.warn('3.-AGREGAR CAJA NUEVA')\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 140,
        "wires": [
            [
                "b3a00e13dbe89308"
            ]
        ]
    },
    {
        "id": "b3a00e13dbe89308",
        "type": "sqlite",
        "z": "12c081a0a0519d8d",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 570,
        "y": 140,
        "wires": [
            [
                "8883d8912d5f7392"
            ]
        ]
    },
    {
        "id": "8883d8912d5f7392",
        "type": "function",
        "z": "12c081a0a0519d8d",
        "name": "CajaNuevaTblVariables",
        "func": "msg.topic=`WITH CteTmp (IdUnidad) AS ( SELECT MAX(IdUnidad) as IdUnidad FROM ASWLite_TraOrdenProduccionDet\n                                        WHERE idComponente = ${msg.IdComponente}\n                                        AND IdPO in (SELECT IdPO FROM ASWLite_VariablesProduccion WHERE IdComponente = ${msg.IdComponente}))\nUPDATE ASWLite_VariablesProduccion \nSET IdUnidadCaja = (SELECT IdUnidad FROM CteTmp )\nWHERE IdComponente = ${msg.IdComponente};`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 140,
        "wires": [
            [
                "51db9f95a4d0fc80"
            ]
        ]
    },
    {
        "id": "51db9f95a4d0fc80",
        "type": "sqlite",
        "z": "12c081a0a0519d8d",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 930,
        "y": 140,
        "wires": [
            [
                "f5699bda6a000d0d"
            ]
        ]
    },
    {
        "id": "b6c1cf71ef27c6af",
        "type": "comment",
        "z": "12c081a0a0519d8d",
        "name": "Iniciar caja nueva",
        "info": "",
        "x": 140,
        "y": 100,
        "wires": []
    },
    {
        "id": "977fb61bc162160d",
        "type": "function",
        "z": "12c081a0a0519d8d",
        "name": "guardarPayloadOriginal",
        "func": "flow.set('PayloadOriginal',msg.payload) \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 140,
        "wires": [
            [
                "379b46a002ae06c8"
            ]
        ]
    },
    {
        "id": "f5699bda6a000d0d",
        "type": "function",
        "z": "12c081a0a0519d8d",
        "name": "RegresarPayloadOriginal",
        "func": "msg.payload = flow.get('PayloadOriginal')\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "422165bb.e98b0c",
        "type": "function",
        "z": "1ae9450.7021cbb",
        "name": "fnParseInsert",
        "func": "let valorCampo = null;\nlet insqry ;\nlet result = msg.payload;\ninsqry = `INSERT INTO ${result[0][\"nombretabla\"]} ( `;\n\nObject.keys(result[0]).forEach((key,idx)=>{\n    //SE AGREGA AL QUERY EL LISTADO DE CAMPOS DE LA TABLA\n    if(key !== 'nombretabla'){\n        insqry += (Object.keys(result[0]).length !== (idx+1)) ? `${key},` : `${key} ) VALUES `;\n    }\n    \n});\n\nresult.forEach((element,elementIdx) => {\n    insqry += '('\n    Object.keys(element).forEach((key,idx) => {\n        //console.log(key);\n        switch(key){\n            \n            case 'nombretabla':\n                break;\n            case 'FechaUltimaMod':\n                //datetime('now','localtime')\n                if (!element[key] || element[key] == 'current'){\n                    valorCampo = \"datetime('now','localtime')\";\n                }\n                else{\n                    valorCampo = (typeof(element[key]) === 'string') ? `'${element[key]}'` : `${element[key]}`;\n                }\n                \n                insqry += (Object.keys(element).length !== (idx+1)) ? `${valorCampo},` : `${valorCampo})`;\n                \n                break;\n            default:\n            if ((typeof(element[key]) === 'string')){\n                if (element[key] == 'current'){\n                    valorCampo = \"datetime('now','localtime')\";\n                }\n                else{\n                    valorCampo =  `'${element[key].replace(/'/g,\"''\")}'` ;\n                }\n            }else{\n                valorCampo =  `${element[key]}`;\n            }\n                \n                insqry += (Object.keys(element).length !== (idx+1)) ? `${valorCampo},` : `${valorCampo})`;\n                //console.log(typeof(element[key]));\n                //insqry += (result.length !== (elementIdx+1) && Object.keys(element).length !== (idx+1) ) ? ',' : '';\n        }\n        \n        // if(key !== 'nombretabla'){\n        //     valorCampo = (typeof(element[key]) === 'string') ? `'${element[key]}'` : `${element[key]}`;\n        //     insqry += (Object.keys(element).length !== (idx+1)) ? `${valorCampo},` : `${valorCampo})`;\n        // //console.log(typeof(element[key]));\n        // //insqry += (result.length !== (elementIdx+1) && Object.keys(element).length !== (idx+1) ) ? ',' : '';\n        // }\n        \n        \n        \n       \n    })\n    insqry += (result.length !== (elementIdx+1)) ? \",\" : \";\" ; \n})\n\nmsg.topic= insqry;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "4c44898469ef9709",
        "type": "function",
        "z": "c8128109.41391",
        "name": "guardarIdComponente",
        "func": "var IdComponente = msg.payload.IdComponente \nvar Valor = msg.Valor;/*(msg.payload.Valor === undefined) ? null : msg.payload.Valor*/\n//DEFINIMOS EN EL MENSAJE EL IDCOMPONENTE PARA USAR POSTERIORMENTE EN EL FLUJO\nmsg.IdComponente = IdComponente || msg.IdComponente\nmsg.Valor = Valor\n\nnode.log(`${env.get(\"NAME\")} > Entro > IdComponente: ${msg.IdComponente} , Valor: ${msg.Valor}`)\n\n//PARA GENERAR METRICA DE DURACION DEL PROCESO\nmsg.fechaHoraInicioProc = Date.now();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 220,
        "y": 120,
        "wires": [
            [
                "657ea69c71d7c5bf"
            ]
        ]
    },
    {
        "id": "308ed7df22358f16",
        "type": "function",
        "z": "c8128109.41391",
        "name": "qryRevisarSiHayParoActivo",
        "func": "msg.topic = `WITH CteTurno(Fecha,Hora,ClaDepartamento,NomDepartamento,ClaTurno,NomTurno,Duracion,horaInicioTurno,horaFinTurno,ProduccionDiaInicio,CruceDia) as (\n    SELECT date('now','localtime') as Fecha, --parametro de entrada\n           time('now','localtime') as Hora,--parametro de entrada\n           TURNO.ClaDepartamento,\n           TURNO.NomDepartamento,\n           TURNO.ClaTurno,\n           TURNO.NomTurno,\n           TURNO.Duracion,\n           TURNO.horaInicioTurno,\n           TURNO.horaFinTurno,\n           TURNO.ProduccionDiaInicio,\n           CASE WHEN  TURNO.horaInicioTurno > TURNO.horaFinTurno THEN 1 ELSE 0 END AS CruceDia\n           FROM ASWLite_CatTurno TURNO\n           WHERE CASE WHEN horaInicioTurno > horaFinTurno \n                    THEN TIME('now','localtime') not between horaFinTurno and horaInicioTurno \n                    ELSE TIME('now','localtime') between horaInicioTurno and horafinTurno \n\t             END\n)\nSELECT CASE WHEN ${msg.EsParoSolucionado || null} = 1 AND var.Valor = false \n             THEN 4 --Cerrar y Abrir x Paro Solucionado\n             WHEN Bit.IdParo IS NOT NULL AND (coalesce(tblvar.Claturno,0) <> Bit.ClaTurno OR (DATE(tblVar.FechaAdministrativa) <> DATE(FechaAdmScada)) OR strftime('%s',datetime('now','localtime')) - strftime('%s',FechaHoraInicial) > ((turno.duracion) * 3600) )\n             THEN 3  --Cerrar y Abrir x Cambio turno\n             WHEN var.Valor = false AND Bit.IdParo IS NULL AND tblvar.ClaTurno IS NOT NULL   --Maquina apagada y no existe paro mientras haya turno\n             THEN 1 --abrir paro\n             WHEN var.Valor = true   AND Bit.IdParo IS NOT NULL  --Maquina prendida y hay paro\n             THEN 2 --cerrar paro\n             ELSE 0 --nada\n         END as Accion\n         ,CASE WHEN ${msg.EsParoSolucionado || null} = 1 AND var.Valor = false \n                  THEN 4 --Cerrar y Abrir x Paro Solucionado\n              WHEN Bit.IdParo IS NOT NULL AND (coalesce(tblvar.Claturno,0) <> Bit.ClaTurno OR (DATE(tblVar.FechaAdministrativa) <> DATE(FechaAdmScada)) OR strftime('%s',datetime('now','localtime')) - strftime('%s',FechaHoraInicial) > ((turno.duracion) * 3600) )\n                  THEN 'CAMBIO TURNO'  --Cerrar y Abrir x Cambio turno\n              WHEN var.Valor = false AND Bit.IdParo IS NULL AND tblvar.ClaTurno IS NOT NULL --Maquina apagada y no existe paro mientras haya turno\n                  THEN 'ABRIR PARO' --abrir paro\n              WHEN var.Valor = true   AND Bit.IdParo IS NOT NULL  --Maquina prendida y hay paro\n                  THEN 'CERRAR PARO' --cerrar paro\n              ELSE 'NADA'--nada\n         END as DescAccion\n        ,CASE WHEN ${msg.EsParoSolucionado || null} = 1 AND var.Valor = false \n                --  THEN null\n                THEN Bit.IdParo --Id del paro a cerrar paro por Paro Solucionado\n            WHEN Bit.IdParo IS NOT NULL AND (coalesce(tblvar.Claturno,0) <> Bit.ClaTurno OR (DATE(tblVar.FechaAdministrativa) <> DATE(FechaAdmScada)) OR strftime('%s',datetime('now','localtime')) - strftime('%s',FechaHoraInicial) > ((turno.duracion) * 3600) )\n                THEN Bit.IdParo --Id del paro a cerrar paro por cambio de turno\n            WHEN var.Valor = false AND Bit.IdParo IS NULL AND tblvar.ClaTurno IS NOT NULL  --Maquina apagada y no existe paro mientras haya turno\n                THEN null --abrir paro\n            WHEN var.Valor = true   AND Bit.IdParo IS NOT NULL  --Maquina prendida y hay paro\n                THEN Bit.IdParo --cerrar paro\n            ELSE NULL --nada\n         END as IdParo\n        ,CASE WHEN Bit.IdParo IS NULL THEN tblvar.IdPO ELSE IdPOInicio END as IdPO\n        ,CASE WHEN Bit.IdParo IS NULL THEN varBox.IdUnidadCaja END as IdUnidadCaja\n        ,CASE WHEN Bit.IdParo IS NULL THEN tblvar.IdUsuario END as IdUsuario\n        ,CASE WHEN Bit.IdParo IS NULL THEN (select ClaTurno from CteTurno) END as ClaTurno\n        ,CASE WHEN Bit.IdParo IS NULL THEN tblvar.FechaAdministrativa END as FechaAdministrativa \n        ,CASE WHEN Bit.IdParo IS NULL THEN datetime('now','localtime') END as FechaHoraInicial \n        ,CASE WHEN Bit.IdParo IS NOT NULL AND (coalesce(tblvar.Claturno,0) <> Bit.ClaTurno OR strftime('%s',datetime('now','localtime')) - strftime('%s',FechaHoraInicial) > ((turno.duracion) * 3600) )\n              THEN CASE WHEN time(Bit.FechaHoraInicial)  > time(Turno.horaFinTurno) \n                         THEN datetime(date(Bit.FechaHoraInicial),time(Turno.horaFinTurno), '+1 day') --Dia Siguiente del que empezo\n                        ELSE  datetime(date(Bit.FechaHoraInicial),time(Turno.horaFinTurno)) --Mismo Dia\n                   END\n              ELSE datetime('now','localtime') \n         END as FechaHoraFinal\n        ,(SELECT IdPO FROM ASWLite_TraOrdenProduccion WHERE ClaEstatus = 2) as IdPOActual\nFROM (SELECT ${msg.IdComponente} as IdComponente, ${msg.Valor} as Valor) var\nLEFT JOIN  AswLite_BitParos Bit\n    ON var.IdComponente = Bit.IdComponente\n    AND Bit.FechaHoraFinal IS NULL\n    AND COALESCE(Bit.BajaLogica,0) = 0\nLEFT JOIN ASWLite_CatTurno Turno\n    ON Turno.ClaTurno  = Bit.ClaTurno\nLEFT JOIN AswLite_VariablesProduccion varBox\n    ON var.IdComponente = varBox.idComponente\nJOIN AswLite_VariablesProduccion tblvar\n    WHERE tblvar.idPO = idPoActual \n`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1260,
        "y": 120,
        "wires": [
            [
                "61c0353dc55205c7"
            ]
        ],
        "info": "Si recibe **FALSE** y **NO** existe un paro abierto devuelve **1** (abrir paro)\n\nSi recibe **TRUE** y  existe un paro abierto devuelve **2** (cerrar paro)\n\nEn otros escenarios devuelve **0** (hacer nada), por ejemplo\n    Recibe **True** y **NO** existe un paro abierto\n    Recibe **False** y existe un paro abierto. "
    },
    {
        "id": "61c0353dc55205c7",
        "type": "sqlite",
        "z": "c8128109.41391",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "qryRevisarSiHayParoActivo",
        "x": 1520,
        "y": 120,
        "wires": [
            [
                "91e5b79bc3db4dc5",
                "0d6282498a779fbc"
            ]
        ]
    },
    {
        "id": "a1e317edfba10a02",
        "type": "switch",
        "z": "c8128109.41391",
        "name": "EvalAccion",
        "property": "payload[0].Accion",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "3",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "4",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "5",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 6,
        "x": 1710,
        "y": 340,
        "wires": [
            [
                "8de6388dc542e255"
            ],
            [
                "b5cb223f91bf1bcd"
            ],
            [
                "bea8f69e5b8d4c13"
            ],
            [
                "d97092d0073fa2ac"
            ],
            [
                "bea8f69e5b8d4c13"
            ],
            []
        ],
        "outputLabels": [
            "nada",
            "abrirParo",
            "cerrarParo",
            "cambioTurno",
            "paroSolucionado",
            ""
        ]
    },
    {
        "id": "b5cb223f91bf1bcd",
        "type": "link out",
        "z": "c8128109.41391",
        "name": "Out_AbrirParo",
        "links": [
            "edd76723061e5b90"
        ],
        "x": 1940,
        "y": 260,
        "wires": [],
        "l": true
    },
    {
        "id": "bea8f69e5b8d4c13",
        "type": "link out",
        "z": "c8128109.41391",
        "name": "Out_CerrarParo",
        "links": [
            "c90b8420ee43fe28"
        ],
        "x": 1940,
        "y": 300,
        "wires": [],
        "l": true
    },
    {
        "id": "edd76723061e5b90",
        "type": "link in",
        "z": "c8128109.41391",
        "name": "In_AbrirParo",
        "links": [
            "b5cb223f91bf1bcd",
            "eaab4b3181327ca5"
        ],
        "x": 130,
        "y": 560,
        "wires": [
            [
                "c1488b6b921ab9e6",
                "996a65b5306f661d"
            ]
        ],
        "l": true
    },
    {
        "id": "d03bebf70ad5edc8",
        "type": "function",
        "z": "c8128109.41391",
        "name": "ObjAbrirParo",
        "func": "function addZero(i) {\n        if (i < 10) {i = \"0\" + i}\n        return i;\n    }\nconst d = new Date();\nlet h = addZero(d.getHours());\nlet m = addZero(d.getMinutes());\nlet s = addZero(d.getSeconds());\nlet time = h + \":\" + m + \":\" + s;\n      \nlet datos = msg.payload[0];\nlet ObjParo = {};\nvar datetime = global.get('FechaAdm')+\" \"+time;\n\nif(msg.payload[0].Accion==1){\n    ObjParo = {  nombretabla: \"AswLite_BitParos\"\n                    ,ClaUbicacion: global.get('ClaUbicacion')\n                    ,IdComponente: msg.IdComponente\n                    ,IdParo:       datos.IdParo\n                    ,IdPOInicio:         datos.IdPO\n                    ,idUnidad:     datos.IdUnidadCaja\n                    ,idUsuario:    datos.IdUsuario\n                    ,fechaHoraInicial: datos.FechaHoraInicial\n                    ,fechaAdmSCADA: datos.FechaAdministrativa\n                    ,ClaTurno:      datos.ClaTurno\n                    ,ClaEstatusReplica: 1\n                    ,ClaEventoParo: 1\n                    ,ClaUsuarioMod: global.get('ClaUsuarioMod')\n                    ,NombrePCMod:   global.get('NombrePcMod')\n                    ,FechaUltimaMod: 'current'\n                    ,BajaLogica: 0\n    }\n}else if (msg.payload[0].Accion==4){\n    ObjParo = {  nombretabla: \"AswLite_BitParos\"\n                    ,ClaUbicacion: global.get('ClaUbicacion')\n                    ,IdComponente: msg.IdComponente\n                    ,IdParo:       datos.IdParo\n                    ,IdPOInicio:         datos.IdPO\n                    ,idUnidad:     datos.IdUnidadCaja\n                    ,idUsuario:    global.get('idusuario')\n                    ,fechaHoraInicial: datetime\n                    ,fechaAdmSCADA: global.get('FechaAdm')\n                    ,ClaTurno:      global.get('ClaTurno')\n                    ,ClaEstatusReplica: 1\n                    ,ClaEventoParo: 1\n                    ,ClaUsuarioMod: global.get('ClaUsuarioMod')\n                    ,NombrePCMod:   global.get('NombrePcMod')\n                    ,FechaUltimaMod: 'current'\n                    ,BajaLogica: 0\n    \n    }\n}\n\nmsg.payload = [ObjParo]\nmsg.IdParoAbierto = datos.IdParo\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1350,
        "y": 560,
        "wires": [
            [
                "14fc947abd83dd8c"
            ]
        ]
    },
    {
        "id": "14fc947abd83dd8c",
        "type": "subflow:1ae9450.7021cbb",
        "z": "c8128109.41391",
        "name": "",
        "env": [],
        "x": 1510,
        "y": 560,
        "wires": [
            [
                "6307b13a01c4ec61"
            ]
        ]
    },
    {
        "id": "6307b13a01c4ec61",
        "type": "sqlite",
        "z": "c8128109.41391",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 1670,
        "y": 560,
        "wires": [
            [
                "81a69121d1cb0d61"
            ]
        ]
    },
    {
        "id": "c90b8420ee43fe28",
        "type": "link in",
        "z": "c8128109.41391",
        "name": "In_CerrarParo",
        "links": [
            "bea8f69e5b8d4c13"
        ],
        "x": 130,
        "y": 480,
        "wires": [
            [
                "68678102ba3eaab0"
            ]
        ],
        "l": true
    },
    {
        "id": "68678102ba3eaab0",
        "type": "function",
        "z": "c8128109.41391",
        "name": "objCerrarParo",
        "func": "let datos = msg.payload[0];\nlet ObjParo = {  nombretabla: \"AswLite_BitParos\"\n                //,IdComponente: msg.IdComponente\n                //,IdParo:       datos.IdParo\n                ,IdPOFin:      datos.IdPOActual\n                ,fechaHoraFinal: datos.FechaHoraFinal\n                ,ClaEstatusReplica: 1\n                ,ClaUsuarioMod: global.get('ClaUsuarioMod')\n                ,NombrePCMod:   global.get('NombrePcMod')\n                ,FechaUltimaMod: datos.FechaHoraFinal\n                ,BajaLogica: 0\n}\nmsg.payload = [ObjParo]\nmsg.IdParo = datos.IdParo\n\nnode.log(`${env.get(\"NAME\")} > objCerrarParo >Accion: ${msg.Accion}> IdComponente: ${msg.IdComponente} , IdParo: ${msg.IdParo}, ObjPAro: ${JSON.stringify(ObjParo)}`)\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 480,
        "wires": [
            [
                "e1cf383166b03b9d"
            ]
        ]
    },
    {
        "id": "e1cf383166b03b9d",
        "type": "function",
        "z": "c8128109.41391",
        "name": "fnParseUpdate",
        "func": "let Datos = msg.payload //[{\"nombretabla\":\"ASWLite_TraOrdenProduccion\",\"ClaUbicacion\":\"68\",\"IdPO\":3,\"IdCelda\":\"1\",\"ClaArticulo\":\"611645\",\"ClaveArticulo\":\"611645\",\"Orden\":\"3\",\"ClaEstatus\":\"1\",\"BajaLogica\":\"0\",\"ClaUsuarioMod\":\"0\",\"NombrePcMod\":\"302NGALAZ\",\"FechaUltimaMod\":\"2020-03-05T01:43:57.713\"}]\nDatos = Datos[0];\nlet NombreTabla = Datos.nombretabla;\nlet CteStr = 'WITH CteTmp (';\nlet CteSelectStr = 'AS ( SELECT '\nlet UpdateStr = `UPDATE ${NombreTabla} SET `;\nlet CamposUpdateStr = '';\nlet WhereUpdateStr = ''\nlet QryFinal = '';\n//LISTA DE CAMPOS DE LA CTE\nObject.keys(Datos).forEach((key,idx) => {\n    if(key != 'nombretabla'){\n        CteStr += key,idx;\n        CteStr += (idx != (Object.keys(Datos).length -1) ) ? ',':') ';\n        CteSelectStr += (typeof(Datos[key]) == 'string') ? `'${Datos[key]}'` : `${Datos[key]}`;\n        CteSelectStr += (idx != (Object.keys(Datos).length -1) ) ? ',':') ';\n    }\n});\n\n//COMPLETAMOS STRING PARA CREAR CTE\nCteStr += CteSelectStr;\n\nObject.keys(Datos).forEach((key,idx) => {\n    let campo = key;\n    let valor = (typeof(Datos[key]) == 'string') ? `'${Datos[key]}'` : Datos[key];\n    if(campo != 'nombretabla'){\n        CamposUpdateStr += `${key} = (SELECT ${campo} FROM CteTmp )`\n        CamposUpdateStr += (idx != (Object.keys(Datos).length -1) ) ? ',':' ';\n    }\n    \n})\n//AGREGAMOS CLAUSULA WHERE AL UPDATE\nWhereUpdateStr = ` WHERE IdParo =  ${msg.IdParo} AND IdComponente = ${msg.IdComponente} `\n\n//COMPLETAR UPDATE\nUpdateStr += CamposUpdateStr + WhereUpdateStr;\n\n//COMPLETAR QUERY\nQryFinal = CteStr+UpdateStr;\n\n\n//msg.payload={NombreTabla,CteStr,CteSelectStr,CamposUpdateStr,WhereUpdateStr,UpdateStr}\nmsg.topic=QryFinal;\nreturn msg;\n\n\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 480,
        "wires": [
            [
                "6f411cb8ba794cc8"
            ]
        ],
        "info": "CREA EL UPDATE A EJECUTAR PARA ACTUALIZAR ORDENES DE TRABAJO\n *    ** SOLO PROCESA UN REGISTRO**"
    },
    {
        "id": "6f411cb8ba794cc8",
        "type": "sqlite",
        "z": "c8128109.41391",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 710,
        "y": 480,
        "wires": [
            [
                "172cdc53b3dff4c5"
            ]
        ]
    },
    {
        "id": "e4aea94d28da7b6c",
        "type": "change",
        "z": "c8128109.41391",
        "name": "AsignarValores",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "Accion",
                "pt": "msg",
                "to": "payload[0].Accion",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1500,
        "y": 340,
        "wires": [
            [
                "a1e317edfba10a02"
            ]
        ]
    },
    {
        "id": "d97092d0073fa2ac",
        "type": "link out",
        "z": "c8128109.41391",
        "name": "Out_CambioTurno",
        "links": [
            "ac4383f696f789bc"
        ],
        "x": 1950,
        "y": 360,
        "wires": [],
        "l": true
    },
    {
        "id": "ac4383f696f789bc",
        "type": "link in",
        "z": "c8128109.41391",
        "name": "In_CambioTurno",
        "links": [
            "d97092d0073fa2ac"
        ],
        "x": 140,
        "y": 420,
        "wires": [
            [
                "f060bf89cc8950d6"
            ]
        ],
        "l": true
    },
    {
        "id": "778f1ff9e8b87709",
        "type": "switch",
        "z": "c8128109.41391",
        "name": "",
        "property": "Accion",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "3",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "4",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 3,
        "x": 1650,
        "y": 480,
        "wires": [
            [
                "ec6a00ee1fa44ba6"
            ],
            [
                "dd8de8602858b1be"
            ],
            [
                "81a69121d1cb0d61"
            ]
        ],
        "outputLabels": [
            "CambioTurno",
            "ParoSolucionado",
            "CerrarParo"
        ]
    },
    {
        "id": "c8ac5790f523a202",
        "type": "sqlite",
        "z": "c8128109.41391",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 1110,
        "y": 480,
        "wires": [
            [
                "a4b0ca96716bba40"
            ]
        ]
    },
    {
        "id": "91e5b79bc3db4dc5",
        "type": "function",
        "z": "c8128109.41391",
        "name": "RevisaCambioDeProduccion",
        "func": "/*\n* Revisar si durante el paro hubo cambio de orden de produccion\n*/\n\nlet datos = msg.payload[0]\nlet cambioPO = false; \n\nif(datos.Accion != 0 && msg.Valor == true && datos.IdPOActual){\n    if(datos.IdPO != datos.IdPOActual){\n        cambioPO = true;\n    }\n}\n\nmsg.CambioPO = cambioPO\n\nnode.log(`${env.get(\"NAME\")} > RevisaCambioDeProduccion > ${cambioPO}`)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1780,
        "y": 120,
        "wires": [
            [
                "7e1b371fe177c237"
            ]
        ]
    },
    {
        "id": "7e1b371fe177c237",
        "type": "switch",
        "z": "c8128109.41391",
        "name": "",
        "property": "CambioPO",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 2010,
        "y": 120,
        "wires": [
            [
                "a1e6addc15c119ea"
            ],
            [
                "a0c5848843e87bf0"
            ]
        ]
    },
    {
        "id": "a0c5848843e87bf0",
        "type": "link out",
        "z": "c8128109.41391",
        "name": "In_BitParo_Continual",
        "links": [
            "23974cec3c982a11"
        ],
        "x": 2135,
        "y": 127,
        "wires": []
    },
    {
        "id": "a1e6addc15c119ea",
        "type": "function",
        "z": "c8128109.41391",
        "name": "guardarPayload",
        "func": "flow.set('payloadOrg',msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2170,
        "y": 80,
        "wires": [
            [
                "f93276c0cf359cb7"
            ]
        ]
    },
    {
        "id": "f93276c0cf359cb7",
        "type": "function",
        "z": "c8128109.41391",
        "name": "IndicarElComponente",
        "func": "msg.payload = {IdComponente:msg.IdComponente}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2400,
        "y": 80,
        "wires": [
            [
                "ed609143eb5a1a29"
            ]
        ]
    },
    {
        "id": "ed609143eb5a1a29",
        "type": "http request",
        "z": "c8128109.41391",
        "name": "CU155_Pag2_DatosOp_Componente",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://localhost:18800/sqlite/CU155_Pag2_DatosOp_Componente",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 2700,
        "y": 80,
        "wires": [
            [
                "a267e207f12666e3"
            ]
        ]
    },
    {
        "id": "3c7cdc6bbdb439bd",
        "type": "http request",
        "z": "c8128109.41391",
        "name": "BATCH_COMPLETED",
        "method": "POST",
        "ret": "txt",
        "paytoqs": false,
        "url": "http://localhost:18800/plc/BATCH_COMPLETED",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 3210,
        "y": 80,
        "wires": [
            [
                "d15a24706aa08b6a"
            ]
        ]
    },
    {
        "id": "fac041a53245f603",
        "type": "http request",
        "z": "c8128109.41391",
        "name": "BATCH_COMPLETED",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://localhost:18800/plc/BATCH_COMPLETED",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 3450,
        "y": 40,
        "wires": [
            [
                "ebcc2e805c5b21af"
            ]
        ]
    },
    {
        "id": "ebcc2e805c5b21af",
        "type": "function",
        "z": "c8128109.41391",
        "name": "recuperarPayload",
        "func": "\nmsg.payload = flow.get('payloadOrg');\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3670,
        "y": 40,
        "wires": [
            [
                "830b112bd40ba2bf"
            ]
        ]
    },
    {
        "id": "830b112bd40ba2bf",
        "type": "subflow:12c081a0a0519d8d",
        "z": "c8128109.41391",
        "name": "",
        "x": 3900,
        "y": 40,
        "wires": [
            [
                "b76d72ab3d535756"
            ]
        ]
    },
    {
        "id": "23974cec3c982a11",
        "type": "link in",
        "z": "c8128109.41391",
        "name": "Out_ContinuarBitParos",
        "links": [
            "a0c5848843e87bf0",
            "b76d72ab3d535756"
        ],
        "x": 1275,
        "y": 340,
        "wires": [
            [
                "e4aea94d28da7b6c"
            ]
        ]
    },
    {
        "id": "b76d72ab3d535756",
        "type": "link out",
        "z": "c8128109.41391",
        "name": "In_BitParo_Continual_CambioPO",
        "links": [
            "23974cec3c982a11"
        ],
        "x": 4035,
        "y": 40,
        "wires": []
    },
    {
        "id": "f2025473545a711d",
        "type": "link in",
        "z": "c8128109.41391",
        "name": "In_RevisarSiHayParo",
        "links": [
            "5fb26115d56aff76",
            "80abcd7cc1f91d4b"
        ],
        "x": 1105,
        "y": 140,
        "wires": [
            [
                "308ed7df22358f16"
            ]
        ]
    },
    {
        "id": "5fb26115d56aff76",
        "type": "link out",
        "z": "c8128109.41391",
        "name": "Out_RevisarSiHayParo",
        "links": [
            "f2025473545a711d"
        ],
        "x": 1915,
        "y": 440,
        "wires": [],
        "info": "Al cambiar de turno se vuelve a correr el proceso para abrir el nuevo paro del turno en curso"
    },
    {
        "id": "81a69121d1cb0d61",
        "type": "subflow:210c126b27629e8d",
        "z": "c8128109.41391",
        "name": "",
        "env": [],
        "x": 1970,
        "y": 560,
        "wires": [
            [
                "08a6fbdf35ae3e85"
            ]
        ]
    },
    {
        "id": "a267e207f12666e3",
        "type": "function",
        "z": "c8128109.41391",
        "name": "setBatchCompleted",
        "func": "\n\nmsg.payload = {IdComponente:parseInt(msg.IdComponente),dato:true}\n\nnode.log(`${env.get(\"NAME\")} > setBatchCompleted > ${JSON.stringify(msg.payload)}`)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2970,
        "y": 80,
        "wires": [
            [
                "3c7cdc6bbdb439bd"
            ]
        ]
    },
    {
        "id": "d15a24706aa08b6a",
        "type": "function",
        "z": "c8128109.41391",
        "name": "setBatchCompleted",
        "func": "msg.payload = {IdComponete:parseInt(msg.IdComponente),dato:false}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3230,
        "y": 40,
        "wires": [
            [
                "fac041a53245f603"
            ]
        ]
    },
    {
        "id": "08a6fbdf35ae3e85",
        "type": "function",
        "z": "c8128109.41391",
        "name": "setIdParo",
        "func": "if(msg.payload.Evento==='INICIOPARO'){\n    msg.IdParo = msg.IdParoAbierto\n    msg.IdParoAbierto = null\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2240,
        "y": 560,
        "wires": [
            [
                "15fc7295cb0415d9",
                "81e34527a7264a61"
            ]
        ]
    },
    {
        "id": "80abcd7cc1f91d4b",
        "type": "link out",
        "z": "c8128109.41391",
        "name": "Out_RevisarSiHayParo",
        "links": [
            "f2025473545a711d"
        ],
        "x": 2395,
        "y": 480,
        "wires": [],
        "info": "Al cambiar de turno se vuelve a correr el proceso para abrir el nuevo paro del turno en curso"
    },
    {
        "id": "dd8de8602858b1be",
        "type": "http request",
        "z": "c8128109.41391",
        "name": "ConsultaVariable_ON_OFF",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://localhost:18800/plc/CU2_Pag3_ConsultaVariable?idComponente={{{IdComponente}}}&variable=ON_OFF",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 1920,
        "y": 480,
        "wires": [
            [
                "99fa4068a14abd0c"
            ]
        ]
    },
    {
        "id": "99fa4068a14abd0c",
        "type": "function",
        "z": "c8128109.41391",
        "name": "resetEsParoSolucionado",
        "func": "msg.EsParoSolucionado = null\nmsg.IdParo = null\nmsg.Valor = JSON.parse(msg.payload).valor\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2230,
        "y": 480,
        "wires": [
            [
                "80abcd7cc1f91d4b"
            ]
        ]
    },
    {
        "id": "e41d29c2d1b8bdf5",
        "type": "function",
        "z": "c8128109.41391",
        "name": "SetValorFalse",
        "func": "msg.Valor = JSON.parse(msg.payload).valor\n\nnode.warn(`CAMBIO TURNO: El status ahora es ${msg.Valor}`)\nmsg.payload = msg.payloadOrig\n\ndelete msg.payloadOrig\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 420,
        "wires": [
            [
                "68678102ba3eaab0"
            ]
        ]
    },
    {
        "id": "f159b4f7d7e07ce1",
        "type": "delay",
        "z": "c8128109.41391",
        "name": "",
        "pauseType": "rate",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 170,
        "y": 60,
        "wires": [
            [
                "4c44898469ef9709"
            ]
        ]
    },
    {
        "id": "402190d515925ae0",
        "type": "http request",
        "z": "c8128109.41391",
        "name": "ConsultaVariable_ON_OFF",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://localhost:18800/plc/CU2_Pag3_ConsultaVariable?idComponente={{{IdComponente}}}&variable=ON_OFF",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 580,
        "y": 420,
        "wires": [
            [
                "e41d29c2d1b8bdf5"
            ]
        ]
    },
    {
        "id": "f060bf89cc8950d6",
        "type": "function",
        "z": "c8128109.41391",
        "name": "GuardarPayload",
        "func": "msg.payloadOrig = msg.payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 420,
        "wires": [
            [
                "402190d515925ae0"
            ]
        ]
    },
    {
        "id": "657ea69c71d7c5bf",
        "type": "function",
        "z": "c8128109.41391",
        "name": "GuardarPayload",
        "func": "msg.payloadOrig = msg.payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 120,
        "wires": [
            [
                "f50517635f7b6988"
            ]
        ]
    },
    {
        "id": "f50517635f7b6988",
        "type": "http request",
        "z": "c8128109.41391",
        "name": "ConsultaVariable_ON_OFF",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://localhost:18800/plc/CU2_Pag3_ConsultaVariable?idComponente={{{IdComponente}}}&variable=ON_OFF",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 650,
        "y": 120,
        "wires": [
            [
                "736648cb2553c733"
            ]
        ]
    },
    {
        "id": "736648cb2553c733",
        "type": "function",
        "z": "c8128109.41391",
        "name": "SetValorFalse",
        "func": "//SE ASIGNA EL VALOR ACTUAL DE LA SEÑAL QUE RECIBIMOS DE LA PETICION ConsultaVariable_ON_OFF\n\n\nnode.log(`${env.get(\"NAME\")} > SetValorFalse > ConsultaVariable_ON_OFF Respondio: ${msg.payload}`)\n\nnode.log(`${env.get(\"NAME\")} > SetValorFalse > ValorOriginal: ${msg.Valor} , ValorActual:${JSON.parse(msg.payload).valor}`);\n\nmsg.Valor = JSON.parse(msg.payload).valor\n\nmsg.payload = msg.payloadOrig\n\ndelete msg.payloadOrig\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 120,
        "wires": [
            [
                "308ed7df22358f16"
            ]
        ]
    },
    {
        "id": "a4b0ca96716bba40",
        "type": "function",
        "z": "c8128109.41391",
        "name": "UpdEsCierreAutomatico",
        "func": "/*Si el paro se cerro automaticamente y no está justificado\no tiene la justificacion default se actualiza ClaEventoCierre = 1\npara cerrar el paro en el ERP desde sql server\n*/\n\nmsg.topic = `\nUPDATE aswLite_bitParos\nSET  ClaEstatusReplica = 1\n    ,ClaEventoCierre   = 1\nWHERE (ClaSeccionParo IS NOT NULL )\nAND fechaHoraFinal IS NOT NULL  \nAND IdComponente = ${msg.IdComponente}\nAND IdParo = ${msg.IdParo} `\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1310,
        "y": 480,
        "wires": [
            [
                "92ceaac13d2be160"
            ]
        ]
    },
    {
        "id": "92ceaac13d2be160",
        "type": "sqlite",
        "z": "c8128109.41391",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 1530,
        "y": 480,
        "wires": [
            [
                "778f1ff9e8b87709"
            ]
        ]
    },
    {
        "id": "ec6a00ee1fa44ba6",
        "type": "function",
        "z": "c8128109.41391",
        "name": "resetIdParo",
        "func": "msg.IdParo = null\nmsg.IdParoAbierto = null\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1800,
        "y": 440,
        "wires": [
            [
                "5fb26115d56aff76"
            ]
        ]
    },
    {
        "id": "eaab4b3181327ca5",
        "type": "link out",
        "z": "c8128109.41391",
        "name": "Out_AbrirParo",
        "links": [
            "edd76723061e5b90"
        ],
        "x": 1600,
        "y": 420,
        "wires": [],
        "l": true
    },
    {
        "id": "c1488b6b921ab9e6",
        "type": "switch",
        "z": "c8128109.41391",
        "name": "",
        "property": "payload[0].Accion",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "4",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 330,
        "y": 640,
        "wires": [
            [
                "1ec2195c06f5cf2d"
            ]
        ]
    },
    {
        "id": "1ec2195c06f5cf2d",
        "type": "function",
        "z": "c8128109.41391",
        "name": "",
        "func": "function addZero(i) {\n        if (i < 10) {i = \"0\" + i}\n        return i;\n    }\nconst d = new Date();\nlet h = addZero(d.getHours());\nlet m = addZero(d.getMinutes());\nlet s = addZero(d.getSeconds());\nlet time = h + \":\" + m + \":\" + s;\nlet datos = msg.payload[0];\nlet paroAnterior = datos.IdParo - 1;\nvar datetime = global.get('FechaAdm')+\" \"+time;\nmsg.topic = `\nUPDATE AswLite_BitParos\nSET fechaHoraFinal = \"${datetime}\"\nWHERE IdParo = ${paroAnterior}    \n`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 640,
        "wires": [
            [
                "d5a3ebff9bf52398"
            ]
        ]
    },
    {
        "id": "d5a3ebff9bf52398",
        "type": "sqlite",
        "z": "c8128109.41391",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 650,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "39ffa30102f33ff0",
        "type": "sqlite",
        "z": "c8128109.41391",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 930,
        "y": 560,
        "wires": [
            [
                "5cfeaf686a865ff6"
            ]
        ]
    },
    {
        "id": "5cfeaf686a865ff6",
        "type": "function",
        "z": "c8128109.41391",
        "name": "fnRecuperarPayloadOriginal",
        "func": "//OBTENEMOS AQUI EL IDPARO PARA QUE SE OBTENGA LO MÁS PROXIMO AL INSERT Y EVITAR QUE SE GENEREN DUPLICADOS\n\nlet IdParoNuevo = msg.payload[0].IdParo\n\nmsg.payload = msg.payloadOriginal   \n\nmsg.payload[0].IdParo = IdParoNuevo\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1140,
        "y": 560,
        "wires": [
            [
                "d03bebf70ad5edc8"
            ]
        ]
    },
    {
        "id": "15fc7295cb0415d9",
        "type": "function",
        "z": "c8128109.41391",
        "name": "updClaEstatusReplica",
        "func": "//Se actualiza ClaEstatusReplica = 1 al final del flujo para asegurar que todos los cambios se repliquen a sqlserver\nmsg.payloadOrig = msg.payload\n\nmsg.topic = `\nUPDATE aswLite_bitParos\nSET  ClaEstatusReplica = 1\nWHERE IdComponente = ${msg.IdComponente}\n    AND IdParo = ${msg.IdParo} `\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2440,
        "y": 560,
        "wires": [
            [
                "783b4ff8f5a6a716"
            ]
        ]
    },
    {
        "id": "783b4ff8f5a6a716",
        "type": "sqlite",
        "z": "c8128109.41391",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 2630,
        "y": 560,
        "wires": [
            [
                "ad086bec899ac253"
            ]
        ]
    },
    {
        "id": "ad086bec899ac253",
        "type": "function",
        "z": "c8128109.41391",
        "name": "fnRecuperoaPayload",
        "func": "msg.payload = msg.payloadOrig\n\n\nnode.log(`${env.get(\"NAME\")} > fnRecuperoaPayload > DuracionProceso: ${Date.now() - msg.fechaHoraInicioProc} MS`)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2820,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "81e34527a7264a61",
        "type": "websocket out",
        "z": "c8128109.41391",
        "name": "CU201_Pag1_WS_BitacoraParos",
        "server": "93537e3111ba5ea4",
        "client": "",
        "x": 2500,
        "y": 620,
        "wires": []
    },
    {
        "id": "2f8109ba42815403",
        "type": "function",
        "z": "c8128109.41391",
        "name": "fnObtenerIdParo",
        "func": "//OBTENEMOS AQUI EL IDPARO PARA QUE SE OBTENGA LO MÁS PROXIMO AL INSERT Y EVITAR QUE SE GENEREN DUPLICADOS\nmsg.payloadOriginal = msg.payload\n\n//msg.topic = `SELECT COALESCE(MAX(IdParo),0) + 1 as IdParo FROM AswLite_BitParos`\nmsg.topic =   `SELECT COALESCE(Folio,0)  as IdParo \n               FROM AswLite_CatFolioBitacora\n               WHERE ClaveFolioBitacora = 'FolBitParos'`\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 560,
        "wires": [
            [
                "39ffa30102f33ff0"
            ]
        ]
    },
    {
        "id": "996a65b5306f661d",
        "type": "function",
        "z": "c8128109.41391",
        "name": "FnActualizaFoliador",
        "func": "msg.topic = `UPDATE AswLite_CatFolioBitacora\n             SET Folio = Folio + 1\n             ,FechaUltimaMod = DATE('now','localtime')\n             ,NombrePcMod = '${global.get(\"NombrePcMod\")}'\n             WHERE ClaveFolioBitacora  = 'FolBitParos' `\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 560,
        "wires": [
            [
                "d474e67bf8d9c367"
            ]
        ]
    },
    {
        "id": "172cdc53b3dff4c5",
        "type": "function",
        "z": "c8128109.41391",
        "name": "SetDuracionYMicroparo",
        "func": "msg.topic = `\nUPDATE AswLite_BitParos\nSET  DuracionSegundos = strftime('%s',datetime(FechaHoraFinal)) - strftime('%s',FechaHoraInicial) \n    ,microParoSN =  CASE WHEN strftime('%s',datetime(FechaHoraFinal)) - strftime('%s',FechaHoraInicial) > (SELECT Valor1 * 60 FROM ASWLite_CfgConfiguracion WHERE ClaveConfiguracion = 'MICROPARO')\n                              THEN 0\n                         ELSE 1\n                    END \n    ,ClaSeccionParo =  CASE WHEN ClaSeccionParo IS NULL AND strftime('%s',datetime(FechaHoraFinal)) - strftime('%s',FechaHoraInicial) > (SELECT Valor1 * 60 FROM ASWLite_CfgConfiguracion WHERE ClaveConfiguracion = 'MICROPARO')\n                                THEN (SELECT Valor1 \n                                    FROM ASWLite_CfgConfiguracion\n                                    WHERE ClaveConfiguracion = 'AUTOJUSTIFICA')\n                                ELSE ClaSeccionParo\n                        END\n    ,ClaEventoJustificacion =   CASE WHEN ClaSeccionParo IS NULL AND strftime('%s',datetime(FechaHoraFinal)) - strftime('%s',FechaHoraInicial) > (SELECT Valor1 * 60 FROM ASWLite_CfgConfiguracion WHERE ClaveConfiguracion = 'MICROPARO')\n                                        THEN 1\n                                        ELSE ClaEventoJustificacion\n                                        \n                                END\nWHERE DuracionSegundos IS NULL\n    AND microParoSN IS NULL\n    AND FechaHoraFinal IS NOT NULL\n`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 480,
        "wires": [
            [
                "c8ac5790f523a202"
            ]
        ]
    },
    {
        "id": "d474e67bf8d9c367",
        "type": "subflow:10996779f0a53f03",
        "z": "c8128109.41391",
        "name": "",
        "x": 560,
        "y": 560,
        "wires": [
            [
                "2f8109ba42815403"
            ]
        ]
    },
    {
        "id": "3aea519d1c5f1230",
        "type": "catch",
        "z": "c8128109.41391",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 120,
        "y": 820,
        "wires": [
            [
                "314fd4c2ff88550c"
            ]
        ]
    },
    {
        "id": "314fd4c2ff88550c",
        "type": "function",
        "z": "c8128109.41391",
        "name": "Error Handler",
        "func": "node.warn(`ERROR NO CONTROLADO >  ${env.get(\"NAME\")} > ${JSON.stringify(msg)}`)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "0d6282498a779fbc",
        "type": "function",
        "z": "c8128109.41391",
        "name": "LogInfoQryRevisarSiHayParoActivo",
        "func": "node.log(`${env.get(\"NAME\")} > LogInfoQryRevisarSiHayParoActivo > IdComponente: ${msg.IdComponente}> ${JSON.stringify(msg.payload)}`)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1800,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "e0fe43e7f06cd0c0",
        "type": "link in",
        "z": "c8128109.41391",
        "name": "In_RevisaAutojustificacion",
        "links": [
            "8de6388dc542e255"
        ],
        "x": 170,
        "y": 720,
        "wires": [
            [
                "292e404dafd29fd7"
            ]
        ],
        "l": true
    },
    {
        "id": "292e404dafd29fd7",
        "type": "function",
        "z": "c8128109.41391",
        "name": "fnUpdRevisaAutojustificacion",
        "func": "/*CUANDO ENTRE A LA BITACORA Y LA ACCION ES \"NADA\" \n  SE REVISA SI EL PARO DEBE AUTOJUSTIFICARSE*/\n  \nmsg.topic = `UPDATE AswLite_BitParos\nSET ,ClaSeccionParo =  CASE WHEN ClaSeccionParo IS NULL AND strftime('%s',datetime(FechaHoraFinal)) - strftime('%s',FechaHoraInicial) > (SELECT Valor1 * 60 FROM ASWLite_CfgConfiguracion WHERE ClaveConfiguracion = 'MICROPARO')\n                                THEN (SELECT Valor1 \n                                    FROM ASWLite_CfgConfiguracion\n                                    WHERE ClaveConfiguracion = 'AUTOJUSTIFICA')\n                                ELSE ClaSeccionParo\n                        END\n    ,ClaEventoJustificacion =   CASE WHEN ClaSeccionParo IS NULL AND strftime('%s',datetime(FechaHoraFinal)) - strftime('%s',FechaHoraInicial) > (SELECT Valor1 * 60 FROM ASWLite_CfgConfiguracion WHERE ClaveConfiguracion = 'MICROPARO')\n                                        THEN 1\n                                        ELSE ClaEventoJustificacion\n                                        \n                                END\n    ,ClaEstatusReplica = CASE WHEN ClaSeccionParo IS NULL AND strftime('%s',datetime(FechaHoraFinal)) - strftime('%s',FechaHoraInicial) > (SELECT Valor1 * 60 FROM ASWLite_CfgConfiguracion WHERE ClaveConfiguracion = 'MICROPARO')\n                                THEN 1\n                                ELSE ClaEstatusReplica\n                         END\nWHERE FechaAdmScada = ${global.get('FechaAdm')}\nAND ClaSeccionParo is null`\n  \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 720,
        "wires": [
            [
                "87eac113f671413d"
            ]
        ]
    },
    {
        "id": "87eac113f671413d",
        "type": "sqlite",
        "z": "c8128109.41391",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 670,
        "y": 720,
        "wires": [
            [
                "74c74d1d69bc743a"
            ]
        ]
    },
    {
        "id": "74c74d1d69bc743a",
        "type": "function",
        "z": "c8128109.41391",
        "name": "TerminarFlujoAccionNada",
        "func": "\nreturn null;",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 720,
        "wires": []
    },
    {
        "id": "8de6388dc542e255",
        "type": "link out",
        "z": "c8128109.41391",
        "name": "out_RevisaAutojustificacion",
        "mode": "link",
        "links": [
            "e0fe43e7f06cd0c0"
        ],
        "x": 1980,
        "y": 220,
        "wires": [],
        "l": true
    },
    {
        "id": "fb4b754859f0d1f4",
        "type": "switch",
        "z": "deda2d839f7f8b3b",
        "name": "EsAgrupado",
        "property": "IdAgrupador",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 250,
        "y": 140,
        "wires": [
            [
                "ea868763935129aa"
            ]
        ]
    },
    {
        "id": "ea868763935129aa",
        "type": "function",
        "z": "deda2d839f7f8b3b",
        "name": "qryCerrarParosAgrupados",
        "func": "//PARA MANDAR A CERRAR TODOS LOS PAROS AGRUPADOS CUANDO SE SOLUCIONE DESDE LA APP\n\nmsg.topic = `\nSELECT IdComponente \nFROM AswLite_BitParos \nWHERE IdAgrupador = ${msg.IdAgrupador}\nand FechaHoraFinal IS NULL\n`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 140,
        "wires": [
            [
                "d23f9119a3df8543"
            ]
        ]
    },
    {
        "id": "d23f9119a3df8543",
        "type": "sqlite",
        "z": "deda2d839f7f8b3b",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "CerrarParosAgrupados",
        "x": 690,
        "y": 140,
        "wires": [
            [
                "2e167a4c7d1096f9"
            ]
        ]
    },
    {
        "id": "2e167a4c7d1096f9",
        "type": "split",
        "z": "deda2d839f7f8b3b",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 880,
        "y": 140,
        "wires": [
            [
                "85b12d9bb05fa86f"
            ]
        ]
    },
    {
        "id": "85b12d9bb05fa86f",
        "type": "change",
        "z": "deda2d839f7f8b3b",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "IdComponente",
                "pt": "msg",
                "to": "payload.IdComponente",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "EsParoSolucionado",
                "pt": "msg",
                "to": "1",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1050,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "83dc4e058c0bea85",
        "type": "function",
        "z": "6b0d45cf53597d13",
        "name": "FiltroCargaArticulo",
        "func": "msg.topic = `SELECT Valor1\nFROM ASWLite_CfgConfiguracion\nWHERE ClaveConfiguracion = 'CARGA_ARTICULO';`\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 80,
        "wires": [
            [
                "2b5a68238e1394b3"
            ]
        ]
    },
    {
        "id": "2b5a68238e1394b3",
        "type": "sqlite",
        "z": "6b0d45cf53597d13",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 410,
        "y": 80,
        "wires": [
            [
                "3fa489e36faebd52"
            ]
        ]
    },
    {
        "id": "3fa489e36faebd52",
        "type": "switch",
        "z": "6b0d45cf53597d13",
        "name": "",
        "property": "payload[0].Valor1",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "2",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 570,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "e47fdc18cdead769",
        "type": "function",
        "z": "5af6fa3c2a72a88e",
        "name": "AsignaComposicion",
        "func": "msg.payload = msg.ArrComposicion;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 80,
        "wires": [
            [
                "35938ecfbc2c6ad3"
            ]
        ]
    },
    {
        "id": "35938ecfbc2c6ad3",
        "type": "split",
        "z": "5af6fa3c2a72a88e",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 410,
        "y": 80,
        "wires": [
            [
                "70aa2512eaea3fc7"
            ]
        ]
    },
    {
        "id": "70aa2512eaea3fc7",
        "type": "function",
        "z": "5af6fa3c2a72a88e",
        "name": "UpdateArtComposicion",
        "func": "msg.topic=`\nUPDATE ASWLite_CatArticuloComposicion\nSET ClaArticulo = '${msg.payload.ClaArticulo||null}',\n    ClaMateriaPrima = '${msg.payload.ClaMateriaPrima||null}',\n    ClaveMateriaPrima = '${msg.payload.ClaveMateriaPrima||null}',\n    NomMateriaPrima = '${msg.payload.NomMateriaPrima||null}',\n    Cantidad = '${msg.payload.Cantidad||null}',\n    Unidad = '${msg.payload.Unidad||null}',\n    CantidadUnidad = '${msg.payload.CantidadUnidad||null}',\n    EsAlambre = '${msg.payload.EsAlambre||null}',\n    BajaLogica = '${msg.payload.BajaLogica||null}',\n    FechaBajaLogica = '${msg.payload.FechaBajaLogica||null}',\n    FechaUltimaMod = '${msg.payload.FechaUltimaMod||null}'\nWHERE ClaArticulo=${msg.payload.ClaArticulo} \n\tAND ClaMateriaPrima=${msg.payload.ClaMateriaPrima}\n`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 80,
        "wires": [
            [
                "66afb7280bdfa6d4"
            ]
        ]
    },
    {
        "id": "66afb7280bdfa6d4",
        "type": "sqlite",
        "z": "5af6fa3c2a72a88e",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 790,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "a740ee5adf3808d8",
        "type": "function",
        "z": "2ba697921f82ce42",
        "name": "AsignaCaracteristicas",
        "func": "msg.payload = msg.ArrCaracteristicas\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 80,
        "wires": [
            [
                "ab1fa05e6f8ff9ff"
            ]
        ]
    },
    {
        "id": "4ed564d96254240d",
        "type": "sqlite",
        "z": "2ba697921f82ce42",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 790,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "dcf2382b91c6a4e3",
        "type": "function",
        "z": "2ba697921f82ce42",
        "name": "UpdateArtCaracteristicas",
        "func": "msg.topic=`\nUPDATE ASWLite_CatArticuloCaracteristicas\nSET \n    NomPlantilla = '${msg.payload.NomPlantilla||null}',\n    NomPlantillaIngles = '${msg.payload.NomPlantillaIngles||null}',\n    NomCaracteristica = '${msg.payload.NomCaracteristica||null}',\n    NomCaracteristicaIngles = '${msg.payload.NomCaracteristicaIngles||null}',\n    NomValorCaract = '${msg.payload.NomValorCaract||null}',\n    NomValorCaractIngles = '${msg.payload.NomValorCaractIngles||null}',\n    BajaLogica = '${msg.payload.BajaLogica||null}',\n    FechaBajaLogica = '${msg.payload.FechaBajaLogica||null}',\n    FechaUltimaMod = '${msg.payload.FechaUltimaMod||null}'\nWHERE ClaArticulo=${msg.payload.ClaArticulo} \nAND ClaPlantilla=${msg.payload.ClaPlantilla}\nAND ClaCaracteristica=${msg.payload.ClaCaracteristica}\n`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 80,
        "wires": [
            [
                "4ed564d96254240d"
            ]
        ]
    },
    {
        "id": "ab1fa05e6f8ff9ff",
        "type": "split",
        "z": "2ba697921f82ce42",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 410,
        "y": 80,
        "wires": [
            [
                "dcf2382b91c6a4e3"
            ]
        ]
    },
    {
        "id": "106c1ad3667914eb",
        "type": "function",
        "z": "b4e7e623dc29aacd",
        "name": "AsignaArticulo",
        "func": "msg.payload = msg.ArrArticulos\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 220,
        "y": 80,
        "wires": [
            [
                "bce27499fcbec80f"
            ]
        ]
    },
    {
        "id": "b507c790550d584c",
        "type": "function",
        "z": "b4e7e623dc29aacd",
        "name": "UpdateArtGeneral",
        "func": "msg.topic=`\nUPDATE ASWLite_CatArticuloGeneral\nSET \n    ClaveArticulo = '${msg.payload.ClaveArticulo}',\n    NomArticulo = '${msg.payload.NomArticulo}',\n    NomArticuloIngles = '${msg.payload.NomArticuloIngles}',\n    EspesorAltura = '${msg.payload.EspesorAltura || null}',\n    EspesorAlturaIngles = '${msg.payload.EspesorAlturaIngles || null}',\n    Longitud = '${msg.payload.Longitud|| null}',\n    LongitudIngles = '${msg.payload.LongitudIngles|| null}',\n    CajasSkid = '${msg.payload.CajasSkid}',\n    Peso = '${msg.payload.Peso|| null}',\n    BajaLogica = '${msg.payload.BajaLogica}',\n    FechaBajaLogica = '${msg.payload.FechaBajaLogica}',\n    FechaUltimaMod = '${msg.payload.FechaUltimaMod}'\nWHERE ClaArticulo=${msg.payload.ClaArticulo} \n`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 80,
        "wires": [
            [
                "d7a49652608f5820"
            ]
        ]
    },
    {
        "id": "d7a49652608f5820",
        "type": "sqlite",
        "z": "b4e7e623dc29aacd",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 790,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "bce27499fcbec80f",
        "type": "split",
        "z": "b4e7e623dc29aacd",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 410,
        "y": 80,
        "wires": [
            [
                "b507c790550d584c"
            ]
        ]
    },
    {
        "id": "54cb3b21a7b67d41",
        "type": "function",
        "z": "f640fd6ee29efded",
        "name": "",
        "func": "let nombreMaquinas = global.get(\"NombreMaquinas\");\nlet puertos = global.get(\"Puertos\");\nlet portClass = global.get(\"PortClass\");\nmsg.payload = nombreMaquinas;\nmsg.puertos = puertos;\nmsg.portClass = portClass;\n\nlet indicadorPort7 = global.get('port7')||0;\nlet indicadorPort11 = global.get('port11')||0;\nlet indicadorPort13 = global.get('port13')||0;\nlet indicadorPort15 = global.get('port15')||0;\nlet indicadorPort29 = global.get('port29')||0;\nlet indicadorPort31 = global.get('port31')||0;\nlet indicadorPort33 = global.get('port33')||0;\nlet indicadorPort35 = global.get('port35')||0;\n\nmsg.indicadorPort7 = indicadorPort7;\nmsg.indicadorPort11 = indicadorPort11;\nmsg.indicadorPort13 = indicadorPort13;\nmsg.indicadorPort15 = indicadorPort15;\nmsg.indicadorPort29 = indicadorPort29;\nmsg.indicadorPort31 = indicadorPort31;\nmsg.indicadorPort33 = indicadorPort33;\nmsg.indicadorPort35 = indicadorPort35;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 40,
        "wires": [
            [
                "8d22f9952f9979bf"
            ]
        ]
    },
    {
        "id": "1990e06aab6d3f77",
        "type": "inject",
        "z": "f640fd6ee29efded",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "30",
        "crontab": "",
        "once": true,
        "onceDelay": "15",
        "topic": "",
        "payloadType": "date",
        "x": 130,
        "y": 40,
        "wires": [
            [
                "54cb3b21a7b67d41"
            ]
        ]
    },
    {
        "id": "8d22f9952f9979bf",
        "type": "websocket out",
        "z": "f640fd6ee29efded",
        "name": "CU5_Pag1_NombreMaquinas",
        "server": "544e07b16f7301bc",
        "client": "",
        "x": 530,
        "y": 40,
        "wires": []
    },
    {
        "id": "a4b8c51cc09eab89",
        "type": "websocket out",
        "z": "f640fd6ee29efded",
        "name": "CU204_Pag1_AlertaParos",
        "server": "b9aa418a1b1568cb",
        "client": "",
        "x": 940,
        "y": 100,
        "wires": []
    },
    {
        "id": "e9ea1a29769dc137",
        "type": "inject",
        "z": "f640fd6ee29efded",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "30",
        "crontab": "",
        "once": true,
        "onceDelay": "15",
        "topic": "",
        "payloadType": "date",
        "x": 130,
        "y": 100,
        "wires": [
            [
                "ada34035b5673c7a"
            ]
        ]
    },
    {
        "id": "ada34035b5673c7a",
        "type": "function",
        "z": "f640fd6ee29efded",
        "name": "fnQryRevisaParosActivos",
        "func": "msg.topic = \n`SELECT COUNT(*) \nFROM AswLite_BitParos a \nINNER JOIN ASWLite_CatWorkUnit b \nON a.IdComponente = b.ClaMaquina\nWHERE b.EsMaquina = 1 \nAND a.ClaEventoSolucionado IS NULL \nAND a.microParoSN IS NULL \nAND a.ClaTurno = ${global.get('ClaTurno')} `;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 100,
        "wires": [
            [
                "c992cfa1901b700e"
            ]
        ]
    },
    {
        "id": "c992cfa1901b700e",
        "type": "sqlite",
        "z": "f640fd6ee29efded",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 530,
        "y": 100,
        "wires": [
            [
                "bb03416446d58414"
            ]
        ]
    },
    {
        "id": "bb03416446d58414",
        "type": "function",
        "z": "f640fd6ee29efded",
        "name": "setPayloadContador",
        "func": "msg.payload = msg.payload[0][\"COUNT(*)\"]\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 100,
        "wires": [
            [
                "a4b8c51cc09eab89"
            ]
        ]
    },
    {
        "id": "f1737240a2e5fd32",
        "type": "catch",
        "z": "f640fd6ee29efded",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 100,
        "y": 280,
        "wires": [
            [
                "2f5f00d0d6316e24"
            ]
        ]
    },
    {
        "id": "2f5f00d0d6316e24",
        "type": "function",
        "z": "f640fd6ee29efded",
        "name": "Error Handler",
        "func": "node.warn(`ERROR NO CONTROLADO >  ${env.get(\"NAME\")} > ${JSON.stringify(msg)}`)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "6b4ca8148f5b34fb",
        "type": "websocket out",
        "z": "b567b8d0aa74c819",
        "name": "CU5_Pag_Port31",
        "server": "6be2f2819d010882",
        "client": "",
        "x": 470,
        "y": 660,
        "wires": []
    },
    {
        "id": "abe55383d1d8bee7",
        "type": "function",
        "z": "b567b8d0aa74c819",
        "name": "",
        "func": "global.set(\"port7\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "fde91689709610d0",
        "type": "websocket out",
        "z": "b567b8d0aa74c819",
        "name": "CU5_Pag1_Port7",
        "server": "10fcc5a2ad246159",
        "client": "",
        "x": 430,
        "y": 60,
        "wires": []
    },
    {
        "id": "ad3c41c2173deba3",
        "type": "websocket out",
        "z": "b567b8d0aa74c819",
        "name": "CU5_Pag1_Port29",
        "server": "4b775d0f3829009c",
        "client": "",
        "x": 470,
        "y": 540,
        "wires": []
    },
    {
        "id": "7f0b5c3ea2a8b447",
        "type": "rpi-gpio in",
        "z": "b567b8d0aa74c819",
        "name": "GPIO19+Pin35 Spare",
        "pin": "25",
        "intype": "tri",
        "debounce": "25",
        "read": false,
        "bcm": true,
        "x": 160,
        "y": 880,
        "wires": [
            [
                "832ed57a3117903f",
                "c5465dc6da27761e"
            ]
        ]
    },
    {
        "id": "1a41668234b08cd0",
        "type": "rpi-gpio in",
        "z": "b567b8d0aa74c819",
        "name": "GPIO13+Pin33 Spare",
        "pin": "13",
        "intype": "tri",
        "debounce": "25",
        "read": false,
        "bcm": true,
        "x": 160,
        "y": 760,
        "wires": [
            [
                "f56fdd50b48523b6",
                "1ff214a69e776a23"
            ]
        ]
    },
    {
        "id": "5c75de51c9387ca7",
        "type": "rpi-gpio in",
        "z": "b567b8d0aa74c819",
        "name": "GPIO06+Pin31 Box Counter",
        "pin": "6",
        "intype": "tri",
        "debounce": "0",
        "read": false,
        "bcm": true,
        "x": 180,
        "y": 660,
        "wires": [
            [
                "6b4ca8148f5b34fb",
                "070edad1349fcffc"
            ]
        ]
    },
    {
        "id": "e61c1a092d49e188",
        "type": "rpi-gpio in",
        "z": "b567b8d0aa74c819",
        "name": "GPIO05+Pin29 Vision Rejected",
        "pin": "3",
        "intype": "tri",
        "debounce": "0",
        "read": false,
        "bcm": true,
        "x": 190,
        "y": 540,
        "wires": [
            [
                "ad3c41c2173deba3",
                "4b442445c228da43"
            ]
        ]
    },
    {
        "id": "56b01f20879e3f6d",
        "type": "rpi-gpio in",
        "z": "b567b8d0aa74c819",
        "name": "GPIO04-Pin7 Header",
        "pin": "4",
        "intype": "tri",
        "debounce": "0",
        "read": true,
        "bcm": true,
        "x": 160,
        "y": 60,
        "wires": [
            [
                "fde91689709610d0",
                "abe55383d1d8bee7"
            ]
        ]
    },
    {
        "id": "874ef375b5ae8a4f",
        "type": "rpi-gpio in",
        "z": "b567b8d0aa74c819",
        "name": "GPIO17+Pin11 Threader",
        "pin": "17",
        "intype": "tri",
        "debounce": "0",
        "read": false,
        "bcm": true,
        "x": 170,
        "y": 200,
        "wires": [
            [
                "28479760d3848df7",
                "31e7f3f6135a39f0"
            ]
        ]
    },
    {
        "id": "e95142985e8ebfc9",
        "type": "rpi-gpio in",
        "z": "b567b8d0aa74c819",
        "name": "GPIO27+Pin13 Collator",
        "pin": "27",
        "intype": "tri",
        "debounce": "0",
        "read": false,
        "bcm": true,
        "x": 160,
        "y": 340,
        "wires": [
            [
                "11cf9ad0db7224af",
                "d923cfc2023b3b6a"
            ]
        ]
    },
    {
        "id": "c69db5750faef199",
        "type": "rpi-gpio in",
        "z": "b567b8d0aa74c819",
        "name": "GPIO22+Pin15 Vision sensor strrip",
        "pin": "22",
        "intype": "tri",
        "debounce": "0",
        "read": false,
        "bcm": true,
        "x": 200,
        "y": 420,
        "wires": [
            [
                "f5948848f4abf25d",
                "10dceb0c885703ff"
            ]
        ]
    },
    {
        "id": "28479760d3848df7",
        "type": "websocket out",
        "z": "b567b8d0aa74c819",
        "name": "CU5_Pag1_Port11",
        "server": "be02628b9f71157b",
        "client": "",
        "x": 450,
        "y": 180,
        "wires": []
    },
    {
        "id": "832ed57a3117903f",
        "type": "websocket out",
        "z": "b567b8d0aa74c819",
        "name": "CU5_Pag1_Port35",
        "server": "6df9bb9b709ea040",
        "client": "",
        "x": 470,
        "y": 880,
        "wires": []
    },
    {
        "id": "f56fdd50b48523b6",
        "type": "websocket out",
        "z": "b567b8d0aa74c819",
        "name": "CU5_Pag1_Port33",
        "server": "8bf9ed92aa0b5da8",
        "client": "",
        "x": 470,
        "y": 760,
        "wires": []
    },
    {
        "id": "f5948848f4abf25d",
        "type": "websocket out",
        "z": "b567b8d0aa74c819",
        "name": "CU5_Pag1_Port15",
        "server": "0df558ab8c7782f2",
        "client": "",
        "x": 470,
        "y": 420,
        "wires": []
    },
    {
        "id": "11cf9ad0db7224af",
        "type": "websocket out",
        "z": "b567b8d0aa74c819",
        "name": "CU5_Pag1_Port13",
        "server": "4719b2d7eb23de26",
        "client": "",
        "x": 450,
        "y": 300,
        "wires": []
    },
    {
        "id": "31e7f3f6135a39f0",
        "type": "function",
        "z": "b567b8d0aa74c819",
        "name": "",
        "func": "global.set(\"port11\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "d923cfc2023b3b6a",
        "type": "function",
        "z": "b567b8d0aa74c819",
        "name": "",
        "func": "global.set(\"port13\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "10dceb0c885703ff",
        "type": "function",
        "z": "b567b8d0aa74c819",
        "name": "",
        "func": "global.set(\"port15\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "4b442445c228da43",
        "type": "function",
        "z": "b567b8d0aa74c819",
        "name": "",
        "func": "global.set(\"port29\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "070edad1349fcffc",
        "type": "function",
        "z": "b567b8d0aa74c819",
        "name": "",
        "func": "global.set(\"port31\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "1ff214a69e776a23",
        "type": "function",
        "z": "b567b8d0aa74c819",
        "name": "",
        "func": "global.set(\"port33\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "c5465dc6da27761e",
        "type": "function",
        "z": "b567b8d0aa74c819",
        "name": "",
        "func": "global.set(\"port35\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 940,
        "wires": [
            []
        ]
    },
    {
        "id": "9327b51a64e8c9bf",
        "type": "catch",
        "z": "b567b8d0aa74c819",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 120,
        "y": 1040,
        "wires": [
            [
                "789fc70783fe8eab"
            ]
        ]
    },
    {
        "id": "789fc70783fe8eab",
        "type": "function",
        "z": "b567b8d0aa74c819",
        "name": "Error Handler",
        "func": "node.warn(`ERROR NO CONTROLADO >  ${env.get(\"NAME\")} > ${JSON.stringify(msg)}`)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 1040,
        "wires": [
            []
        ]
    },
    {
        "id": "9bc311a5921bc963",
        "type": "rpi-gpio in",
        "z": "c62bf2524e0fc96c",
        "name": "GPIO04-Pin7",
        "pin": "4",
        "intype": "tri",
        "debounce": "0",
        "read": true,
        "bcm": true,
        "x": 670,
        "y": 120,
        "wires": [
            [
                "afdfd2c9.22eb"
            ]
        ]
    },
    {
        "id": "9b4544497439aec5",
        "type": "inject",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": ".1",
        "crontab": "",
        "once": false,
        "onceDelay": "0.1",
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 70,
        "y": 100,
        "wires": [
            [
                "f7faf0fe2ed6d442"
            ]
        ]
    },
    {
        "id": "f24d9a9ce64d71ce",
        "type": "inject",
        "z": "c62bf2524e0fc96c",
        "name": "0 ",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 170,
        "y": 180,
        "wires": [
            [
                "b6f43f3.5366ac"
            ]
        ]
    },
    {
        "id": "494107dbbcc4dd7a",
        "type": "link out",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "links": [
            "9425fc698834e2fd",
            "b579b63f.7c0418",
            "6ccb53c5.cd182c"
        ],
        "x": 2355,
        "y": 300,
        "wires": []
    },
    {
        "id": "afdfd2c9.22eb",
        "type": "function",
        "z": "c62bf2524e0fc96c",
        "name": "msg.GPIO=4",
        "func": "msg.GPIO = 4\n\n//GUARDAR OBJGPIO\nlet ObjGpio = flow.get('ObjGpio') || {}\n\nObjGpio[`${msg.topic.match(/[0-9]+/g)}`] = msg.payload\n\nflow.set('ObjGpio',ObjGpio);\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 120,
        "wires": [
            [
                "56c78550.eb32fc"
            ]
        ]
    },
    {
        "id": "56c78550.eb32fc",
        "type": "subflow:16e2ce83.628ca1",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 1050,
        "y": 120,
        "wires": [
            [
                "fa6a622c.00002"
            ]
        ]
    },
    {
        "id": "8b4f07f.33a4ef8",
        "type": "inject",
        "z": "c62bf2524e0fc96c",
        "name": "1+reset",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "resetCounter",
                "v": "true",
                "vt": "bool"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "0.1",
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 170,
        "y": 140,
        "wires": [
            [
                "b6f43f3.5366ac"
            ]
        ]
    },
    {
        "id": "6b5edfa1.10b1b",
        "type": "inject",
        "z": "c62bf2524e0fc96c",
        "name": "0+reset",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "resetCounter",
                "v": "true",
                "vt": "bool"
            }
        ],
        "repeat": "10800",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 180,
        "y": 220,
        "wires": [
            [
                "b6f43f3.5366ac"
            ]
        ]
    },
    {
        "id": "e13d976.22be468",
        "type": "change",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "resetCounter",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 680,
        "y": 80,
        "wires": [
            [
                "afdfd2c9.22eb"
            ]
        ]
    },
    {
        "id": "1c047a16.957566",
        "type": "link in",
        "z": "c62bf2524e0fc96c",
        "name": "ResetCounterAsset_1",
        "links": [
            "e234b5c141d88ded",
            "07407ec46245f60d"
        ],
        "x": 535,
        "y": 80,
        "wires": [
            [
                "e13d976.22be468"
            ]
        ]
    },
    {
        "id": "ccb8c1.033d174",
        "type": "subflow:1144a4b6.dd0f6b",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 1440,
        "y": 20,
        "wires": [
            [
                "e8e54e4d.c28a8"
            ]
        ]
    },
    {
        "id": "fa6a622c.00002",
        "type": "switch",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "property": "nomMaquina",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "HEADER",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "THREADER",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "COLLATOR",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "CLEANER",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "EMPTY",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "ROBOT",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "VISION_STRIP",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "VISION_REJECTED",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "BOXCOUNTER",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 9,
        "x": 1210,
        "y": 120,
        "wires": [
            [
                "ccb8c1.033d174"
            ],
            [
                "e5180ea2.f70ae"
            ],
            [
                "2e215af3.7678c6"
            ],
            [
                "8ef79868.58e588"
            ],
            [],
            [],
            [
                "a01d139d.79c8"
            ],
            [
                "c0968e3b.7e307"
            ],
            [
                "5b08fb1a.e98284"
            ]
        ]
    },
    {
        "id": "973ba69d.759bc8",
        "type": "rpi-gpio in",
        "z": "c62bf2524e0fc96c",
        "name": "GPIO05-Pin29",
        "pin": "3",
        "intype": "tri",
        "debounce": "0",
        "read": true,
        "bcm": true,
        "x": 640,
        "y": 420,
        "wires": [
            [
                "760964a5.206ebc"
            ]
        ]
    },
    {
        "id": "760964a5.206ebc",
        "type": "function",
        "z": "c62bf2524e0fc96c",
        "name": "msg.GPIO=5",
        "func": "\nmsg.GPIO = 5\n//GUARDAR OBJGPIO\nlet ObjGpio = flow.get('ObjGpio') || {}\n\nObjGpio[`${msg.topic.match(/[0-9]+/g)}`] = msg.payload\n\nflow.set('ObjGpio',ObjGpio);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 420,
        "wires": [
            [
                "80961c1b.3897c"
            ]
        ]
    },
    {
        "id": "1c6fee1b.b0d322",
        "type": "change",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "resetCounter",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 680,
        "y": 380,
        "wires": [
            [
                "760964a5.206ebc"
            ]
        ]
    },
    {
        "id": "b69a9319.3dc5f",
        "type": "link in",
        "z": "c62bf2524e0fc96c",
        "name": "ResetCounterAsset_2",
        "links": [
            "07407ec46245f60d"
        ],
        "x": 535,
        "y": 380,
        "wires": [
            [
                "1c6fee1b.b0d322"
            ]
        ]
    },
    {
        "id": "1fd87ec5.612511",
        "type": "rpi-gpio in",
        "z": "c62bf2524e0fc96c",
        "name": "GPIO06-Pin31",
        "pin": "2",
        "intype": "tri",
        "debounce": "0",
        "read": true,
        "bcm": true,
        "x": 580,
        "y": 720,
        "wires": [
            [
                "3f88fe01.286222"
            ]
        ]
    },
    {
        "id": "3f88fe01.286222",
        "type": "function",
        "z": "c62bf2524e0fc96c",
        "name": "msg.GPIO=6",
        "func": "msg.EsCajaManual = 0;\nmsg.GPIO = 6\n\n//GUARDAR OBJGPIO\nlet ObjGpio = flow.get('ObjGpio') || {}\n\nObjGpio[`${msg.topic.match(/[0-9]+/g)}`] = msg.payload\n\nflow.set('ObjGpio',ObjGpio);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 720,
        "wires": [
            [
                "9a98b629.f654a8"
            ]
        ]
    },
    {
        "id": "116e4f5c.b86911",
        "type": "change",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "resetCounter",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 680,
        "y": 680,
        "wires": [
            [
                "3f88fe01.286222"
            ]
        ]
    },
    {
        "id": "e662fc25.d4454",
        "type": "link in",
        "z": "c62bf2524e0fc96c",
        "name": "ResetCounterAsset_3",
        "links": [
            "07407ec46245f60d"
        ],
        "x": 535,
        "y": 680,
        "wires": [
            [
                "116e4f5c.b86911"
            ]
        ]
    },
    {
        "id": "7a69c05b.c5072",
        "type": "rpi-gpio in",
        "z": "c62bf2524e0fc96c",
        "name": "GPIO07-Pin26",
        "pin": "7",
        "intype": "tri",
        "debounce": "0",
        "read": true,
        "bcm": true,
        "x": 680,
        "y": 1020,
        "wires": [
            [
                "be7262bc.aa48a"
            ]
        ]
    },
    {
        "id": "be7262bc.aa48a",
        "type": "function",
        "z": "c62bf2524e0fc96c",
        "name": "msg.GPIO=7",
        "func": "\nmsg.GPIO = 7\n\n//GUARDAR OBJGPIO\nlet ObjGpio = flow.get('ObjGpio') || {}\n\nObjGpio[`${msg.topic.match(/[0-9]+/g)}`] = msg.payload\n\nflow.set('ObjGpio',ObjGpio);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 1020,
        "wires": [
            [
                "e7e7e7a3.3a96c8"
            ]
        ]
    },
    {
        "id": "732c1ad6.602f04",
        "type": "change",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "resetCounter",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 680,
        "y": 980,
        "wires": [
            [
                "be7262bc.aa48a"
            ]
        ]
    },
    {
        "id": "b4be447b.c1aba8",
        "type": "link in",
        "z": "c62bf2524e0fc96c",
        "name": "ResetCounterAsset_4",
        "links": [
            "07407ec46245f60d"
        ],
        "x": 535,
        "y": 980,
        "wires": [
            [
                "732c1ad6.602f04"
            ]
        ]
    },
    {
        "id": "90b20c8.ed6cdf",
        "type": "rpi-gpio in",
        "z": "c62bf2524e0fc96c",
        "name": "GPIO08-Pin24",
        "pin": "8",
        "intype": "tri",
        "debounce": "0",
        "read": true,
        "bcm": true,
        "x": 680,
        "y": 1320,
        "wires": [
            [
                "31400678.40676a"
            ]
        ]
    },
    {
        "id": "31400678.40676a",
        "type": "function",
        "z": "c62bf2524e0fc96c",
        "name": "msg.GPIO=8",
        "func": "\nmsg.GPIO = 8\n\n//GUARDAR OBJGPIO\nlet ObjGpio = flow.get('ObjGpio') || {}\n\nObjGpio[`${msg.topic.match(/[0-9]+/g)}`] = msg.payload\n\nflow.set('ObjGpio',ObjGpio);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 1320,
        "wires": [
            [
                "55422a3d.282d74"
            ]
        ]
    },
    {
        "id": "e4bff3ba.04d25",
        "type": "change",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "resetCounter",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 680,
        "y": 1280,
        "wires": [
            [
                "31400678.40676a"
            ]
        ]
    },
    {
        "id": "2a357a00.6b9866",
        "type": "link in",
        "z": "c62bf2524e0fc96c",
        "name": "ResetCounterAsset_5",
        "links": [
            "07407ec46245f60d"
        ],
        "x": 535,
        "y": 1280,
        "wires": [
            [
                "e4bff3ba.04d25"
            ]
        ]
    },
    {
        "id": "3f6bc409.5a5c8c",
        "type": "rpi-gpio in",
        "z": "c62bf2524e0fc96c",
        "name": "GPIO09-Pin21",
        "pin": "9",
        "intype": "tri",
        "debounce": "0",
        "read": true,
        "bcm": true,
        "x": 680,
        "y": 1620,
        "wires": [
            [
                "6943d6c.bd19528"
            ]
        ]
    },
    {
        "id": "6943d6c.bd19528",
        "type": "function",
        "z": "c62bf2524e0fc96c",
        "name": "msg.GPIO=9",
        "func": "\nmsg.GPIO = 9\n\n//GUARDAR OBJGPIO\nlet ObjGpio = flow.get('ObjGpio') || {}\n\nObjGpio[`${msg.topic.match(/[0-9]+/g)}`] = msg.payload\n\nflow.set('ObjGpio',ObjGpio);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 1620,
        "wires": [
            [
                "c1c8ceab.529ed"
            ]
        ]
    },
    {
        "id": "f1823791.0a21d8",
        "type": "change",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "resetCounter",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 680,
        "y": 1580,
        "wires": [
            [
                "6943d6c.bd19528"
            ]
        ]
    },
    {
        "id": "c7992061.57093",
        "type": "link in",
        "z": "c62bf2524e0fc96c",
        "name": "ResetCounterAsset_6",
        "links": [
            "07407ec46245f60d"
        ],
        "x": 535,
        "y": 1580,
        "wires": [
            [
                "f1823791.0a21d8"
            ]
        ]
    },
    {
        "id": "a6ccf7b5.404338",
        "type": "rpi-gpio in",
        "z": "c62bf2524e0fc96c",
        "name": "GPIO10-Pin19",
        "pin": "10",
        "intype": "tri",
        "debounce": "0",
        "read": true,
        "bcm": true,
        "x": 680,
        "y": 1920,
        "wires": [
            [
                "812687ad.6c6348"
            ]
        ]
    },
    {
        "id": "812687ad.6c6348",
        "type": "function",
        "z": "c62bf2524e0fc96c",
        "name": "msg.GPIO=10",
        "func": "\nmsg.GPIO = 10\n\n//GUARDAR OBJGPIO\nlet ObjGpio = flow.get('ObjGpio') || {}\n\nObjGpio[`${msg.topic.match(/[0-9]+/g)}`] = msg.payload\n\nflow.set('ObjGpio',ObjGpio);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 1920,
        "wires": [
            [
                "96b3089.7330ef8"
            ]
        ]
    },
    {
        "id": "6de1cc94.a97ce4",
        "type": "change",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "resetCounter",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 680,
        "y": 1880,
        "wires": [
            [
                "812687ad.6c6348"
            ]
        ]
    },
    {
        "id": "592facc5.43bc24",
        "type": "link in",
        "z": "c62bf2524e0fc96c",
        "name": "ResetCounterAsset_7",
        "links": [
            "07407ec46245f60d"
        ],
        "x": 535,
        "y": 1880,
        "wires": [
            [
                "6de1cc94.a97ce4"
            ]
        ]
    },
    {
        "id": "4891e6fd.e0db58",
        "type": "rpi-gpio in",
        "z": "c62bf2524e0fc96c",
        "name": "GPIO11-Pin23",
        "pin": "11",
        "intype": "tri",
        "debounce": "0",
        "read": true,
        "bcm": true,
        "x": 650,
        "y": 2220,
        "wires": [
            [
                "82a32e25.85329"
            ]
        ]
    },
    {
        "id": "82a32e25.85329",
        "type": "function",
        "z": "c62bf2524e0fc96c",
        "name": "msg.GPIO=11",
        "func": "\nmsg.GPIO = 11\n\n//GUARDAR OBJGPIO\nlet ObjGpio = flow.get('ObjGpio') || {}\n\nObjGpio[`${msg.topic.match(/[0-9]+/g)}`] = msg.payload\n\nflow.set('ObjGpio',ObjGpio);\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 2220,
        "wires": [
            [
                "4549e388.1c218c"
            ]
        ]
    },
    {
        "id": "c0992c15.966ab",
        "type": "change",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "resetCounter",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 660,
        "y": 2180,
        "wires": [
            [
                "82a32e25.85329"
            ]
        ]
    },
    {
        "id": "2b62ead3.8630a6",
        "type": "link in",
        "z": "c62bf2524e0fc96c",
        "name": "ResetCounterAsset_8",
        "links": [
            "07407ec46245f60d"
        ],
        "x": 515,
        "y": 2180,
        "wires": [
            [
                "c0992c15.966ab"
            ]
        ]
    },
    {
        "id": "70a75db7.ce3e74",
        "type": "rpi-gpio in",
        "z": "c62bf2524e0fc96c",
        "name": "GPIO12-Pin32",
        "pin": "14",
        "intype": "tri",
        "debounce": "0",
        "read": true,
        "bcm": true,
        "x": 680,
        "y": 2520,
        "wires": [
            [
                "c0ac1dbb.9b5ea"
            ]
        ]
    },
    {
        "id": "c0ac1dbb.9b5ea",
        "type": "function",
        "z": "c62bf2524e0fc96c",
        "name": "msg.GPIO=12",
        "func": "\nmsg.GPIO = 12\n\n//GUARDAR OBJGPIO\nlet ObjGpio = flow.get('ObjGpio') || {}\n\nObjGpio[`${msg.topic.match(/[0-9]+/g)}`] = msg.payload\n\nflow.set('ObjGpio',ObjGpio);\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 2520,
        "wires": [
            [
                "52caf711.3c8ee8"
            ]
        ]
    },
    {
        "id": "8819a270.9d5af",
        "type": "change",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "resetCounter",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 680,
        "y": 2480,
        "wires": [
            [
                "c0ac1dbb.9b5ea"
            ]
        ]
    },
    {
        "id": "54107c39.f7be94",
        "type": "link in",
        "z": "c62bf2524e0fc96c",
        "name": "ResetCounterAsset_9",
        "links": [
            "07407ec46245f60d"
        ],
        "x": 535,
        "y": 2480,
        "wires": [
            [
                "8819a270.9d5af"
            ]
        ]
    },
    {
        "id": "5dc4f593.f9e96c",
        "type": "rpi-gpio in",
        "z": "c62bf2524e0fc96c",
        "name": "GPIO13-Pin33",
        "pin": "13",
        "intype": "tri",
        "debounce": "0",
        "read": true,
        "bcm": true,
        "x": 680,
        "y": 2820,
        "wires": [
            [
                "d0fa97aa.312538"
            ]
        ]
    },
    {
        "id": "d0fa97aa.312538",
        "type": "function",
        "z": "c62bf2524e0fc96c",
        "name": "msg.GPIO=13",
        "func": "\nmsg.GPIO = 13\n\n//GUARDAR OBJGPIO\nlet ObjGpio = flow.get('ObjGpio') || {}\n\nObjGpio[`${msg.topic.match(/[0-9]+/g)}`] = msg.payload\n\nflow.set('ObjGpio',ObjGpio);\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 2820,
        "wires": [
            [
                "88e37d7a.5c823"
            ]
        ]
    },
    {
        "id": "d8db80f4.a6408",
        "type": "change",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "resetCounter",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 680,
        "y": 2780,
        "wires": [
            [
                "d0fa97aa.312538"
            ]
        ]
    },
    {
        "id": "57de7cc0.a70104",
        "type": "link in",
        "z": "c62bf2524e0fc96c",
        "name": "ResetCounterAsset_10",
        "links": [
            "07407ec46245f60d"
        ],
        "x": 535,
        "y": 2780,
        "wires": [
            [
                "d8db80f4.a6408"
            ]
        ]
    },
    {
        "id": "f7c9376e.1b17e8",
        "type": "rpi-gpio in",
        "z": "c62bf2524e0fc96c",
        "name": "GPIO16-Pin36",
        "pin": "16",
        "intype": "tri",
        "debounce": "0",
        "read": true,
        "bcm": true,
        "x": 680,
        "y": 3120,
        "wires": [
            [
                "e9388ef9.22e76"
            ]
        ]
    },
    {
        "id": "e9388ef9.22e76",
        "type": "function",
        "z": "c62bf2524e0fc96c",
        "name": "msg.GPIO=16",
        "func": "\nmsg.GPIO = 16\n\n//GUARDAR OBJGPIO\nlet ObjGpio = flow.get('ObjGpio') || {}\n\nObjGpio[`${msg.topic.match(/[0-9]+/g)}`] = msg.payload\n\nflow.set('ObjGpio',ObjGpio);\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 3120,
        "wires": [
            [
                "5b896833.cf2698"
            ]
        ]
    },
    {
        "id": "9c516d05.a5663",
        "type": "change",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "resetCounter",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 680,
        "y": 3080,
        "wires": [
            [
                "e9388ef9.22e76"
            ]
        ]
    },
    {
        "id": "f31d3b0c.f6a788",
        "type": "link in",
        "z": "c62bf2524e0fc96c",
        "name": "ResetCounterAsset_11",
        "links": [
            "07407ec46245f60d"
        ],
        "x": 535,
        "y": 3080,
        "wires": [
            [
                "9c516d05.a5663"
            ]
        ]
    },
    {
        "id": "e5180ea2.f70ae",
        "type": "subflow:b568b641.da5428",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 1420,
        "y": 60,
        "wires": [
            [
                "e8e54e4d.c28a8"
            ]
        ]
    },
    {
        "id": "a01d139d.79c8",
        "type": "subflow:e10e5505.0b2a38",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 1430,
        "y": 180,
        "wires": [
            [
                "e8e54e4d.c28a8"
            ]
        ]
    },
    {
        "id": "c0968e3b.7e307",
        "type": "subflow:4a12be2e.080d7",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 1460,
        "y": 220,
        "wires": [
            [
                "e8e54e4d.c28a8"
            ]
        ]
    },
    {
        "id": "8a09e3d4.2f4c3",
        "type": "link in",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "links": [],
        "x": 195,
        "y": 540,
        "wires": [
            [
                "afdfd2c9.22eb",
                "760964a5.206ebc",
                "be7262bc.aa48a",
                "812687ad.6c6348",
                "6943d6c.bd19528",
                "82a32e25.85329",
                "c0ac1dbb.9b5ea",
                "d0fa97aa.312538",
                "e9388ef9.22e76",
                "31400678.40676a",
                "be187bc550a1ca0a",
                "b459a011a4cd3913",
                "1a23462bb8fefe0a"
            ]
        ]
    },
    {
        "id": "b6f43f3.5366ac",
        "type": "link out",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "links": [
            "57b52659.122888"
        ],
        "x": 315,
        "y": 140,
        "wires": []
    },
    {
        "id": "74dad0d.4f4d83",
        "type": "comment",
        "z": "c62bf2524e0fc96c",
        "name": "Sim Desarrollo",
        "info": "para enviar señales en desarrollo solo conectar y desconectar el link out con el link in",
        "x": 180,
        "y": 20,
        "wires": []
    },
    {
        "id": "2e215af3.7678c6",
        "type": "subflow:b568b641.da5428",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 1420,
        "y": 100,
        "wires": [
            [
                "e8e54e4d.c28a8"
            ]
        ]
    },
    {
        "id": "8ef79868.58e588",
        "type": "subflow:b568b641.da5428",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 1420,
        "y": 140,
        "wires": [
            [
                "e8e54e4d.c28a8"
            ]
        ]
    },
    {
        "id": "e8e54e4d.c28a8",
        "type": "split",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "topic",
        "x": 1690,
        "y": 120,
        "wires": [
            [
                "652f825d.f5254c"
            ]
        ]
    },
    {
        "id": "652f825d.f5254c",
        "type": "rbe",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "x": 1810,
        "y": 120,
        "wires": [
            [
                "494107dbbcc4dd7a"
            ]
        ]
    },
    {
        "id": "80961c1b.3897c",
        "type": "subflow:16e2ce83.628ca1",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 1050,
        "y": 420,
        "wires": [
            [
                "736eb077.43817"
            ]
        ]
    },
    {
        "id": "51337d69.c3f024",
        "type": "subflow:1144a4b6.dd0f6b",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 1440,
        "y": 320,
        "wires": [
            [
                "c516ecee.243d5"
            ]
        ]
    },
    {
        "id": "736eb077.43817",
        "type": "switch",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "property": "nomMaquina",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "HEADER",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "THREADER",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "COLLATOR",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "CLEANER",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "EMPTY",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "ROBOT",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "VISION_STRIP",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "VISION_REJECTED",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "BOXCOUNTER",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 9,
        "x": 1210,
        "y": 420,
        "wires": [
            [
                "51337d69.c3f024"
            ],
            [
                "94800ba5.b9b218"
            ],
            [
                "ebe96b7e.a5f338"
            ],
            [
                "580b7456.d626bc"
            ],
            [],
            [],
            [
                "cc5490db.6e403"
            ],
            [
                "98f53f80.aa1c"
            ],
            [
                "a5d6fdc8.4cf8d"
            ]
        ]
    },
    {
        "id": "94800ba5.b9b218",
        "type": "subflow:b568b641.da5428",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 1420,
        "y": 360,
        "wires": [
            [
                "c516ecee.243d5"
            ]
        ]
    },
    {
        "id": "cc5490db.6e403",
        "type": "subflow:e10e5505.0b2a38",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 1430,
        "y": 480,
        "wires": [
            [
                "c516ecee.243d5"
            ]
        ]
    },
    {
        "id": "98f53f80.aa1c",
        "type": "subflow:4a12be2e.080d7",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 1460,
        "y": 520,
        "wires": [
            [
                "c516ecee.243d5"
            ]
        ]
    },
    {
        "id": "ebe96b7e.a5f338",
        "type": "subflow:b568b641.da5428",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 1420,
        "y": 400,
        "wires": [
            [
                "c516ecee.243d5"
            ]
        ]
    },
    {
        "id": "580b7456.d626bc",
        "type": "subflow:b568b641.da5428",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 1420,
        "y": 440,
        "wires": [
            [
                "c516ecee.243d5"
            ]
        ]
    },
    {
        "id": "c516ecee.243d5",
        "type": "split",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "topic",
        "x": 1690,
        "y": 420,
        "wires": [
            [
                "43eff9be.a06f78"
            ]
        ]
    },
    {
        "id": "43eff9be.a06f78",
        "type": "rbe",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "x": 1810,
        "y": 420,
        "wires": [
            [
                "494107dbbcc4dd7a"
            ]
        ]
    },
    {
        "id": "4549e388.1c218c",
        "type": "subflow:16e2ce83.628ca1",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 1040,
        "y": 2220,
        "wires": [
            [
                "e984b3e7.3419d"
            ]
        ]
    },
    {
        "id": "989b613c.e2552",
        "type": "subflow:1144a4b6.dd0f6b",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 1440,
        "y": 2120,
        "wires": [
            [
                "5a299edb.e2a7d"
            ]
        ]
    },
    {
        "id": "e984b3e7.3419d",
        "type": "switch",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "property": "nomMaquina",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "HEADER",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "THREADER",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "COLLATOR",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "CLEANER",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "EMPTY",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "ROBOT",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "VISION_STRIP",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "VISION_REJECTED",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "BOXCOUNTER",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 9,
        "x": 1210,
        "y": 2220,
        "wires": [
            [
                "989b613c.e2552"
            ],
            [
                "feb6575.7cacfa8"
            ],
            [
                "14ab8cad.f933d3"
            ],
            [
                "231c611c.d8084e"
            ],
            [],
            [],
            [
                "f8676ab9.3df9e8"
            ],
            [
                "ba4a289b.d26f28"
            ],
            [
                "bd6f2756.188eb8"
            ]
        ]
    },
    {
        "id": "feb6575.7cacfa8",
        "type": "subflow:b568b641.da5428",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 1420,
        "y": 2160,
        "wires": [
            [
                "5a299edb.e2a7d"
            ]
        ]
    },
    {
        "id": "f8676ab9.3df9e8",
        "type": "subflow:e10e5505.0b2a38",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 1430,
        "y": 2280,
        "wires": [
            [
                "5a299edb.e2a7d"
            ]
        ]
    },
    {
        "id": "ba4a289b.d26f28",
        "type": "subflow:4a12be2e.080d7",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 1460,
        "y": 2320,
        "wires": [
            [
                "5a299edb.e2a7d"
            ]
        ]
    },
    {
        "id": "14ab8cad.f933d3",
        "type": "subflow:b568b641.da5428",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 1420,
        "y": 2200,
        "wires": [
            [
                "5a299edb.e2a7d"
            ]
        ]
    },
    {
        "id": "231c611c.d8084e",
        "type": "subflow:b568b641.da5428",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 1420,
        "y": 2240,
        "wires": [
            [
                "5a299edb.e2a7d"
            ]
        ]
    },
    {
        "id": "5a299edb.e2a7d",
        "type": "split",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "topic",
        "x": 1690,
        "y": 2220,
        "wires": [
            [
                "d479195a.c53b08"
            ]
        ]
    },
    {
        "id": "d479195a.c53b08",
        "type": "rbe",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "x": 1810,
        "y": 2220,
        "wires": [
            [
                "494107dbbcc4dd7a"
            ]
        ]
    },
    {
        "id": "9a98b629.f654a8",
        "type": "subflow:16e2ce83.628ca1",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 1050,
        "y": 720,
        "wires": [
            [
                "69f89cba.53b404"
            ]
        ]
    },
    {
        "id": "c21efb1a.3cc778",
        "type": "subflow:1144a4b6.dd0f6b",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 1440,
        "y": 620,
        "wires": [
            [
                "daec5d35.69063"
            ]
        ]
    },
    {
        "id": "69f89cba.53b404",
        "type": "switch",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "property": "nomMaquina",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "HEADER",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "THREADER",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "COLLATOR",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "CLEANER",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "EMPTY",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "ROBOT",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "VISION_STRIP",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "VISION_REJECTED",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "BOXCOUNTER",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 9,
        "x": 1210,
        "y": 720,
        "wires": [
            [
                "c21efb1a.3cc778"
            ],
            [
                "ade81066.a2e9e"
            ],
            [
                "122f2945.c840e7"
            ],
            [
                "5262ad0b.bfb454"
            ],
            [],
            [],
            [
                "7586ad63.b70084"
            ],
            [
                "c5c4e43b.8ea538"
            ],
            [
                "46722eeb.1d12"
            ]
        ]
    },
    {
        "id": "ade81066.a2e9e",
        "type": "subflow:b568b641.da5428",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 1420,
        "y": 660,
        "wires": [
            [
                "daec5d35.69063"
            ]
        ]
    },
    {
        "id": "7586ad63.b70084",
        "type": "subflow:e10e5505.0b2a38",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 1430,
        "y": 780,
        "wires": [
            [
                "daec5d35.69063"
            ]
        ]
    },
    {
        "id": "c5c4e43b.8ea538",
        "type": "subflow:4a12be2e.080d7",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 1460,
        "y": 820,
        "wires": [
            [
                "daec5d35.69063"
            ]
        ]
    },
    {
        "id": "122f2945.c840e7",
        "type": "subflow:b568b641.da5428",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 1420,
        "y": 700,
        "wires": [
            [
                "daec5d35.69063"
            ]
        ]
    },
    {
        "id": "5262ad0b.bfb454",
        "type": "subflow:b568b641.da5428",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 1420,
        "y": 740,
        "wires": [
            [
                "daec5d35.69063"
            ]
        ]
    },
    {
        "id": "daec5d35.69063",
        "type": "split",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "topic",
        "x": 1690,
        "y": 720,
        "wires": [
            [
                "ec9a9ec8.3bba6"
            ]
        ]
    },
    {
        "id": "ec9a9ec8.3bba6",
        "type": "rbe",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "x": 1810,
        "y": 720,
        "wires": [
            [
                "494107dbbcc4dd7a"
            ]
        ]
    },
    {
        "id": "e7e7e7a3.3a96c8",
        "type": "subflow:16e2ce83.628ca1",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 1050,
        "y": 1020,
        "wires": [
            [
                "89dc041.c02cff8"
            ]
        ]
    },
    {
        "id": "6210eed3.79138",
        "type": "subflow:1144a4b6.dd0f6b",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 1440,
        "y": 920,
        "wires": [
            [
                "d3e1f62c.655428"
            ]
        ]
    },
    {
        "id": "89dc041.c02cff8",
        "type": "switch",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "property": "nomMaquina",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "HEADER",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "THREADER",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "COLLATOR",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "CLEANER",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "EMPTY",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "ROBOT",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "VISION_STRIP",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "VISION_REJECTED",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "BOXCOUNTER",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 9,
        "x": 1210,
        "y": 1020,
        "wires": [
            [
                "6210eed3.79138"
            ],
            [
                "53f38e23.ba6df"
            ],
            [
                "a35053ca.9c4e5"
            ],
            [
                "66ad5c11.95b404"
            ],
            [],
            [],
            [
                "8bccb7a1.b9dc08"
            ],
            [
                "cd83082b.ab3818"
            ],
            [
                "1c119539.390f0b"
            ]
        ]
    },
    {
        "id": "53f38e23.ba6df",
        "type": "subflow:b568b641.da5428",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 1420,
        "y": 960,
        "wires": [
            [
                "d3e1f62c.655428"
            ]
        ]
    },
    {
        "id": "8bccb7a1.b9dc08",
        "type": "subflow:e10e5505.0b2a38",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 1430,
        "y": 1080,
        "wires": [
            [
                "d3e1f62c.655428"
            ]
        ]
    },
    {
        "id": "cd83082b.ab3818",
        "type": "subflow:4a12be2e.080d7",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 1460,
        "y": 1120,
        "wires": [
            [
                "d3e1f62c.655428"
            ]
        ]
    },
    {
        "id": "a35053ca.9c4e5",
        "type": "subflow:b568b641.da5428",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 1420,
        "y": 1000,
        "wires": [
            [
                "d3e1f62c.655428"
            ]
        ]
    },
    {
        "id": "66ad5c11.95b404",
        "type": "subflow:b568b641.da5428",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 1420,
        "y": 1040,
        "wires": [
            [
                "d3e1f62c.655428"
            ]
        ]
    },
    {
        "id": "d3e1f62c.655428",
        "type": "split",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "topic",
        "x": 1690,
        "y": 1020,
        "wires": [
            [
                "989d4e5c.0ae09"
            ]
        ]
    },
    {
        "id": "989d4e5c.0ae09",
        "type": "rbe",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "x": 1810,
        "y": 1020,
        "wires": [
            [
                "494107dbbcc4dd7a"
            ]
        ]
    },
    {
        "id": "55422a3d.282d74",
        "type": "subflow:16e2ce83.628ca1",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 1050,
        "y": 1320,
        "wires": [
            [
                "4f83c475.7db6fc"
            ]
        ]
    },
    {
        "id": "1251a9c0.0b0496",
        "type": "subflow:1144a4b6.dd0f6b",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 1440,
        "y": 1220,
        "wires": [
            [
                "df02fe61.d9654"
            ]
        ]
    },
    {
        "id": "4f83c475.7db6fc",
        "type": "switch",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "property": "nomMaquina",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "HEADER",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "THREADER",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "COLLATOR",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "CLEANER",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "EMPTY",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "ROBOT",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "VISION_STRIP",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "VISION_REJECTED",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "BOXCOUNTER",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 9,
        "x": 1210,
        "y": 1320,
        "wires": [
            [
                "1251a9c0.0b0496"
            ],
            [
                "5b161ae6.e6eb94"
            ],
            [
                "ee42f521.34a458"
            ],
            [
                "19c488c.1b23577"
            ],
            [],
            [],
            [
                "d4837980.58d718"
            ],
            [
                "aa50c04b.e178e"
            ],
            [
                "c0f40f35.6e3f9"
            ]
        ]
    },
    {
        "id": "5b161ae6.e6eb94",
        "type": "subflow:b568b641.da5428",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 1420,
        "y": 1260,
        "wires": [
            [
                "df02fe61.d9654"
            ]
        ]
    },
    {
        "id": "d4837980.58d718",
        "type": "subflow:e10e5505.0b2a38",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 1430,
        "y": 1380,
        "wires": [
            [
                "df02fe61.d9654"
            ]
        ]
    },
    {
        "id": "aa50c04b.e178e",
        "type": "subflow:4a12be2e.080d7",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 1460,
        "y": 1420,
        "wires": [
            [
                "df02fe61.d9654"
            ]
        ]
    },
    {
        "id": "ee42f521.34a458",
        "type": "subflow:b568b641.da5428",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 1420,
        "y": 1300,
        "wires": [
            [
                "df02fe61.d9654"
            ]
        ]
    },
    {
        "id": "19c488c.1b23577",
        "type": "subflow:b568b641.da5428",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 1420,
        "y": 1340,
        "wires": [
            [
                "df02fe61.d9654"
            ]
        ]
    },
    {
        "id": "df02fe61.d9654",
        "type": "split",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "topic",
        "x": 1690,
        "y": 1320,
        "wires": [
            [
                "4b40492c.71e128"
            ]
        ]
    },
    {
        "id": "4b40492c.71e128",
        "type": "rbe",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "x": 1810,
        "y": 1320,
        "wires": [
            [
                "494107dbbcc4dd7a"
            ]
        ]
    },
    {
        "id": "c1c8ceab.529ed",
        "type": "subflow:16e2ce83.628ca1",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 1050,
        "y": 1620,
        "wires": [
            [
                "13fd897a.fe1da7"
            ]
        ]
    },
    {
        "id": "38a04565.186eda",
        "type": "subflow:1144a4b6.dd0f6b",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 1440,
        "y": 1520,
        "wires": [
            [
                "fc543df5.6734b"
            ]
        ]
    },
    {
        "id": "13fd897a.fe1da7",
        "type": "switch",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "property": "nomMaquina",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "HEADER",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "THREADER",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "COLLATOR",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "CLEANER",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "EMPTY",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "ROBOT",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "VISION_STRIP",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "VISION_REJECTED",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "BOXCOUNTER",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 9,
        "x": 1210,
        "y": 1620,
        "wires": [
            [
                "38a04565.186eda"
            ],
            [
                "35349d62.064b82"
            ],
            [
                "bcb28043.0d058"
            ],
            [
                "ba577a96.5dd288"
            ],
            [],
            [],
            [
                "d03f85ee.1cc5a8"
            ],
            [
                "4de99752.781138"
            ],
            [
                "3ea6afc5.48106"
            ]
        ]
    },
    {
        "id": "35349d62.064b82",
        "type": "subflow:b568b641.da5428",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 1420,
        "y": 1560,
        "wires": [
            [
                "fc543df5.6734b"
            ]
        ]
    },
    {
        "id": "d03f85ee.1cc5a8",
        "type": "subflow:e10e5505.0b2a38",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 1430,
        "y": 1680,
        "wires": [
            [
                "fc543df5.6734b"
            ]
        ]
    },
    {
        "id": "4de99752.781138",
        "type": "subflow:4a12be2e.080d7",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 1460,
        "y": 1720,
        "wires": [
            [
                "fc543df5.6734b"
            ]
        ]
    },
    {
        "id": "bcb28043.0d058",
        "type": "subflow:b568b641.da5428",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 1420,
        "y": 1600,
        "wires": [
            [
                "fc543df5.6734b"
            ]
        ]
    },
    {
        "id": "ba577a96.5dd288",
        "type": "subflow:b568b641.da5428",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 1420,
        "y": 1640,
        "wires": [
            [
                "fc543df5.6734b"
            ]
        ]
    },
    {
        "id": "fc543df5.6734b",
        "type": "split",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "topic",
        "x": 1690,
        "y": 1620,
        "wires": [
            [
                "b10165ee.5301f8"
            ]
        ]
    },
    {
        "id": "b10165ee.5301f8",
        "type": "rbe",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "x": 1810,
        "y": 1620,
        "wires": [
            [
                "494107dbbcc4dd7a"
            ]
        ]
    },
    {
        "id": "96b3089.7330ef8",
        "type": "subflow:16e2ce83.628ca1",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 1050,
        "y": 1920,
        "wires": [
            [
                "f84e907a.80056"
            ]
        ]
    },
    {
        "id": "efbfb4af.bbbc38",
        "type": "subflow:1144a4b6.dd0f6b",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 1440,
        "y": 1820,
        "wires": [
            [
                "81586f64.17d11"
            ]
        ]
    },
    {
        "id": "f84e907a.80056",
        "type": "switch",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "property": "nomMaquina",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "HEADER",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "THREADER",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "COLLATOR",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "CLEANER",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "EMPTY",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "ROBOT",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "VISION_STRIP",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "VISION_REJECTED",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "BOXCOUNTER",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 9,
        "x": 1210,
        "y": 1920,
        "wires": [
            [
                "efbfb4af.bbbc38"
            ],
            [
                "a1a352e6.9fe5a"
            ],
            [
                "229e766.071a88a"
            ],
            [
                "32bd0482.5dc0ec"
            ],
            [],
            [],
            [
                "c0f1f932.773ce8"
            ],
            [
                "705ce422.aca1ec"
            ],
            [
                "29237daf.ba2172"
            ]
        ]
    },
    {
        "id": "a1a352e6.9fe5a",
        "type": "subflow:b568b641.da5428",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 1420,
        "y": 1860,
        "wires": [
            [
                "81586f64.17d11"
            ]
        ]
    },
    {
        "id": "c0f1f932.773ce8",
        "type": "subflow:e10e5505.0b2a38",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 1430,
        "y": 1980,
        "wires": [
            [
                "81586f64.17d11"
            ]
        ]
    },
    {
        "id": "705ce422.aca1ec",
        "type": "subflow:4a12be2e.080d7",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 1460,
        "y": 2020,
        "wires": [
            [
                "81586f64.17d11"
            ]
        ]
    },
    {
        "id": "229e766.071a88a",
        "type": "subflow:b568b641.da5428",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 1420,
        "y": 1900,
        "wires": [
            [
                "81586f64.17d11"
            ]
        ]
    },
    {
        "id": "32bd0482.5dc0ec",
        "type": "subflow:b568b641.da5428",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 1420,
        "y": 1940,
        "wires": [
            [
                "81586f64.17d11"
            ]
        ]
    },
    {
        "id": "81586f64.17d11",
        "type": "split",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "topic",
        "x": 1690,
        "y": 1920,
        "wires": [
            [
                "5bd559d1.050268"
            ]
        ]
    },
    {
        "id": "5bd559d1.050268",
        "type": "rbe",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "x": 1810,
        "y": 1920,
        "wires": [
            [
                "494107dbbcc4dd7a"
            ]
        ]
    },
    {
        "id": "52caf711.3c8ee8",
        "type": "subflow:16e2ce83.628ca1",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 1060,
        "y": 2520,
        "wires": [
            [
                "6127618b.0a5c"
            ]
        ]
    },
    {
        "id": "ad14e548.698938",
        "type": "subflow:1144a4b6.dd0f6b",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 1440,
        "y": 2420,
        "wires": [
            [
                "225f809b.3172f"
            ]
        ]
    },
    {
        "id": "6127618b.0a5c",
        "type": "switch",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "property": "nomMaquina",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "HEADER",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "THREADER",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "COLLATOR",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "CLEANER",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "EMPTY",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "ROBOT",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "VISION_STRIP",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "VISION_REJECTED",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "BOXCOUNTER",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 9,
        "x": 1210,
        "y": 2520,
        "wires": [
            [
                "ad14e548.698938"
            ],
            [
                "21a60250.78b39e"
            ],
            [
                "c32eb43e.e70558"
            ],
            [
                "ac58ea0b.94b518"
            ],
            [],
            [],
            [
                "b6ad4dec.a16f7"
            ],
            [
                "6ad68dfc.503d54"
            ],
            [
                "93ce940f.713b58"
            ]
        ]
    },
    {
        "id": "21a60250.78b39e",
        "type": "subflow:b568b641.da5428",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 1420,
        "y": 2460,
        "wires": [
            [
                "225f809b.3172f"
            ]
        ]
    },
    {
        "id": "b6ad4dec.a16f7",
        "type": "subflow:e10e5505.0b2a38",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 1430,
        "y": 2580,
        "wires": [
            [
                "225f809b.3172f"
            ]
        ]
    },
    {
        "id": "6ad68dfc.503d54",
        "type": "subflow:4a12be2e.080d7",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 1460,
        "y": 2620,
        "wires": [
            [
                "225f809b.3172f"
            ]
        ]
    },
    {
        "id": "c32eb43e.e70558",
        "type": "subflow:b568b641.da5428",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 1420,
        "y": 2500,
        "wires": [
            [
                "225f809b.3172f"
            ]
        ]
    },
    {
        "id": "ac58ea0b.94b518",
        "type": "subflow:b568b641.da5428",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 1420,
        "y": 2540,
        "wires": [
            [
                "225f809b.3172f"
            ]
        ]
    },
    {
        "id": "225f809b.3172f",
        "type": "split",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "topic",
        "x": 1690,
        "y": 2520,
        "wires": [
            [
                "164e5531.7ca2fb"
            ]
        ]
    },
    {
        "id": "164e5531.7ca2fb",
        "type": "rbe",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "x": 1810,
        "y": 2520,
        "wires": [
            [
                "494107dbbcc4dd7a"
            ]
        ]
    },
    {
        "id": "88e37d7a.5c823",
        "type": "subflow:16e2ce83.628ca1",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 1060,
        "y": 2820,
        "wires": [
            [
                "eb25c20c.5fc22"
            ]
        ]
    },
    {
        "id": "523f4d99.d215f4",
        "type": "subflow:1144a4b6.dd0f6b",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 1440,
        "y": 2720,
        "wires": [
            [
                "7479f4b4.cb9d3c"
            ]
        ]
    },
    {
        "id": "eb25c20c.5fc22",
        "type": "switch",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "property": "nomMaquina",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "HEADER",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "THREADER",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "COLLATOR",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "CLEANER",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "EMPTY",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "ROBOT",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "VISION_STRIP",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "VISION_REJECTED",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "BOXCOUNTER",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 9,
        "x": 1210,
        "y": 2820,
        "wires": [
            [
                "523f4d99.d215f4"
            ],
            [
                "5200820c.e3c16c"
            ],
            [
                "adfca0e7.74c07"
            ],
            [
                "83a548c5.76caa8"
            ],
            [],
            [],
            [
                "92493e57.45fc6"
            ],
            [
                "4c24af19.8ec1d"
            ],
            [
                "a23b8719.920ad8"
            ]
        ]
    },
    {
        "id": "5200820c.e3c16c",
        "type": "subflow:b568b641.da5428",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 1420,
        "y": 2760,
        "wires": [
            [
                "7479f4b4.cb9d3c"
            ]
        ]
    },
    {
        "id": "92493e57.45fc6",
        "type": "subflow:e10e5505.0b2a38",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 1430,
        "y": 2880,
        "wires": [
            [
                "7479f4b4.cb9d3c"
            ]
        ]
    },
    {
        "id": "4c24af19.8ec1d",
        "type": "subflow:4a12be2e.080d7",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 1460,
        "y": 2920,
        "wires": [
            [
                "7479f4b4.cb9d3c"
            ]
        ]
    },
    {
        "id": "adfca0e7.74c07",
        "type": "subflow:b568b641.da5428",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 1420,
        "y": 2800,
        "wires": [
            [
                "7479f4b4.cb9d3c"
            ]
        ]
    },
    {
        "id": "83a548c5.76caa8",
        "type": "subflow:b568b641.da5428",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 1420,
        "y": 2840,
        "wires": [
            [
                "7479f4b4.cb9d3c"
            ]
        ]
    },
    {
        "id": "7479f4b4.cb9d3c",
        "type": "split",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "topic",
        "x": 1690,
        "y": 2820,
        "wires": [
            [
                "3665e584.3bde1a"
            ]
        ]
    },
    {
        "id": "3665e584.3bde1a",
        "type": "rbe",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "x": 1810,
        "y": 2820,
        "wires": [
            [
                "494107dbbcc4dd7a"
            ]
        ]
    },
    {
        "id": "5b896833.cf2698",
        "type": "subflow:16e2ce83.628ca1",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 1060,
        "y": 3120,
        "wires": [
            [
                "2cd836b7.26baaa"
            ]
        ]
    },
    {
        "id": "59db7869.15aaf8",
        "type": "subflow:1144a4b6.dd0f6b",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 1440,
        "y": 3020,
        "wires": [
            [
                "db15184d.f1b568"
            ]
        ]
    },
    {
        "id": "2cd836b7.26baaa",
        "type": "switch",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "property": "nomMaquina",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "HEADER",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "THREADER",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "COLLATOR",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "CLEANER",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "EMPTY",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "ROBOT",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "VISION_STRIP",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "VISION_REJECTED",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "BOXCOUNTER",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 9,
        "x": 1210,
        "y": 3120,
        "wires": [
            [
                "59db7869.15aaf8"
            ],
            [
                "19674e38.122402"
            ],
            [
                "8c5736dc.9313b8"
            ],
            [
                "71a43530.b5858c"
            ],
            [],
            [],
            [
                "87b81164.872e6"
            ],
            [
                "65e0e3f7.1a06ec"
            ],
            [
                "c0606de3.6a6bd"
            ]
        ]
    },
    {
        "id": "19674e38.122402",
        "type": "subflow:b568b641.da5428",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 1420,
        "y": 3060,
        "wires": [
            [
                "db15184d.f1b568"
            ]
        ]
    },
    {
        "id": "87b81164.872e6",
        "type": "subflow:e10e5505.0b2a38",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 1430,
        "y": 3180,
        "wires": [
            [
                "db15184d.f1b568"
            ]
        ]
    },
    {
        "id": "65e0e3f7.1a06ec",
        "type": "subflow:4a12be2e.080d7",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 1460,
        "y": 3220,
        "wires": [
            [
                "db15184d.f1b568"
            ]
        ]
    },
    {
        "id": "8c5736dc.9313b8",
        "type": "subflow:b568b641.da5428",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 1420,
        "y": 3100,
        "wires": [
            [
                "db15184d.f1b568"
            ]
        ]
    },
    {
        "id": "71a43530.b5858c",
        "type": "subflow:b568b641.da5428",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 1420,
        "y": 3140,
        "wires": [
            [
                "db15184d.f1b568"
            ]
        ]
    },
    {
        "id": "db15184d.f1b568",
        "type": "split",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "topic",
        "x": 1690,
        "y": 3120,
        "wires": [
            [
                "86a1ae58.9b0ae"
            ]
        ]
    },
    {
        "id": "86a1ae58.9b0ae",
        "type": "rbe",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "x": 1810,
        "y": 3120,
        "wires": [
            [
                "494107dbbcc4dd7a"
            ]
        ]
    },
    {
        "id": "5b08fb1a.e98284",
        "type": "subflow:ebe34ea7.4705a",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 1430,
        "y": 260,
        "wires": [
            [
                "e8e54e4d.c28a8"
            ]
        ]
    },
    {
        "id": "a5d6fdc8.4cf8d",
        "type": "subflow:ebe34ea7.4705a",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 1430,
        "y": 560,
        "wires": [
            [
                "c516ecee.243d5"
            ]
        ]
    },
    {
        "id": "46722eeb.1d12",
        "type": "subflow:ebe34ea7.4705a",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 1430,
        "y": 860,
        "wires": [
            [
                "daec5d35.69063"
            ]
        ]
    },
    {
        "id": "1c119539.390f0b",
        "type": "subflow:ebe34ea7.4705a",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 1430,
        "y": 1160,
        "wires": [
            [
                "d3e1f62c.655428"
            ]
        ]
    },
    {
        "id": "c0f40f35.6e3f9",
        "type": "subflow:ebe34ea7.4705a",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 1430,
        "y": 1460,
        "wires": [
            [
                "df02fe61.d9654"
            ]
        ]
    },
    {
        "id": "3ea6afc5.48106",
        "type": "subflow:ebe34ea7.4705a",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 1430,
        "y": 1760,
        "wires": [
            [
                "fc543df5.6734b"
            ]
        ]
    },
    {
        "id": "29237daf.ba2172",
        "type": "subflow:ebe34ea7.4705a",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 1430,
        "y": 2060,
        "wires": [
            [
                "81586f64.17d11"
            ]
        ]
    },
    {
        "id": "bd6f2756.188eb8",
        "type": "subflow:ebe34ea7.4705a",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 1430,
        "y": 2360,
        "wires": [
            [
                "5a299edb.e2a7d"
            ]
        ]
    },
    {
        "id": "93ce940f.713b58",
        "type": "subflow:ebe34ea7.4705a",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 1430,
        "y": 2660,
        "wires": [
            [
                "225f809b.3172f"
            ]
        ]
    },
    {
        "id": "a23b8719.920ad8",
        "type": "subflow:ebe34ea7.4705a",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 1430,
        "y": 2960,
        "wires": [
            [
                "7479f4b4.cb9d3c"
            ]
        ]
    },
    {
        "id": "c0606de3.6a6bd",
        "type": "subflow:ebe34ea7.4705a",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 1430,
        "y": 3260,
        "wires": [
            [
                "db15184d.f1b568"
            ]
        ]
    },
    {
        "id": "cac66a36e77bcec0",
        "type": "inject",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "30",
        "crontab": "",
        "once": false,
        "onceDelay": "0.1",
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 150,
        "y": 300,
        "wires": [
            [
                "e80b60aa351821c1",
                "df5e24a009fdb33e"
            ]
        ]
    },
    {
        "id": "e80b60aa351821c1",
        "type": "delay",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 140,
        "y": 340,
        "wires": [
            [
                "b6839021eba28b39"
            ]
        ]
    },
    {
        "id": "b6839021eba28b39",
        "type": "change",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 140,
        "y": 380,
        "wires": [
            [
                "df5e24a009fdb33e"
            ]
        ]
    },
    {
        "id": "df5e24a009fdb33e",
        "type": "link out",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "links": [
            "57b52659.122888"
        ],
        "x": 315,
        "y": 340,
        "wires": []
    },
    {
        "id": "8b017151dc3bad90",
        "type": "comment",
        "z": "c62bf2524e0fc96c",
        "name": "Sim Desarrollo BOXCOUNTER",
        "info": "para enviar señales en desarrollo solo conectar y desconectar el link out con el link in\n\nIdentificar que nosdo es para el boxcounter y desconectar el simulador principal para cambiarlo por este\n",
        "x": 190,
        "y": 260,
        "wires": []
    },
    {
        "id": "789da413c3ce01b2",
        "type": "link in",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "links": [],
        "x": 175,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "5e1390d88c6ebb8f",
        "type": "comment",
        "z": "c62bf2524e0fc96c",
        "name": "Sim Desarrollo",
        "info": "para enviar señales en desarrollo solo conectar y desconectar el link out con el link in",
        "x": 140,
        "y": 500,
        "wires": []
    },
    {
        "id": "3d0d843f4ca98f22",
        "type": "comment",
        "z": "c62bf2524e0fc96c",
        "name": "Sim Desarrollo BOXCOUNTER",
        "info": "para enviar señales en desarrollo solo conectar y desconectar el link out con el link in\n\nIdentificar que nosdo es para el boxcounter y desconectar el simulador principal para cambiarlo por este\n",
        "x": 130,
        "y": 720,
        "wires": []
    },
    {
        "id": "b42fec58ba8534aa",
        "type": "rpi-gpio in",
        "z": "c62bf2524e0fc96c",
        "name": "GPIO17-Pin11",
        "pin": "17",
        "intype": "tri",
        "debounce": "1500",
        "read": true,
        "bcm": true,
        "x": 2750,
        "y": 200,
        "wires": [
            [
                "be187bc550a1ca0a"
            ]
        ]
    },
    {
        "id": "be187bc550a1ca0a",
        "type": "function",
        "z": "c62bf2524e0fc96c",
        "name": "msg.GPIO=17",
        "func": "\nmsg.GPIO = 17\n\n//GUARDAR OBJGPIO\nlet ObjGpio = flow.get('ObjGpio') || {}\n\n\nObjGpio[`${msg.topic.match(/[0-9]+/g)}`] = msg.payload\n\nflow.set('ObjGpio',ObjGpio);\nglobal.set('statusGPIO[17]',msg.payload)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2960,
        "y": 120,
        "wires": [
            [
                "8d3284446beb8ae3"
            ]
        ]
    },
    {
        "id": "c4ce6a2fa6f5ddf2",
        "type": "change",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "resetCounter",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2760,
        "y": 80,
        "wires": [
            [
                "be187bc550a1ca0a"
            ]
        ]
    },
    {
        "id": "045c2726aed17b71",
        "type": "link in",
        "z": "c62bf2524e0fc96c",
        "name": "ResetCounterAsset_11",
        "links": [
            "07407ec46245f60d"
        ],
        "x": 2615,
        "y": 80,
        "wires": [
            [
                "c4ce6a2fa6f5ddf2"
            ]
        ]
    },
    {
        "id": "8d3284446beb8ae3",
        "type": "subflow:16e2ce83.628ca1",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 3140,
        "y": 120,
        "wires": [
            [
                "101cbb03b1492320"
            ]
        ]
    },
    {
        "id": "df49f194336b408d",
        "type": "subflow:1144a4b6.dd0f6b",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 3520,
        "y": 20,
        "wires": [
            [
                "0499c09c9651dd96"
            ]
        ]
    },
    {
        "id": "101cbb03b1492320",
        "type": "switch",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "property": "nomMaquina",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "HEADER",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "THREADER",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "COLLATOR",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "CLEANER",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "EMPTY",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "ROBOT",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "VISION_STRIP",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "VISION_REJECTED",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "BOXCOUNTER",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 9,
        "x": 3290,
        "y": 120,
        "wires": [
            [
                "df49f194336b408d"
            ],
            [
                "1f003a2b8a90a993"
            ],
            [
                "5215ec10aeeb71b4"
            ],
            [
                "4ae7f83460ba287a"
            ],
            [],
            [],
            [
                "c0e25807dc9a92f3"
            ],
            [
                "6e2eeab97b01e50d"
            ],
            [
                "5cfeb2a56fbf62b0"
            ]
        ]
    },
    {
        "id": "1f003a2b8a90a993",
        "type": "subflow:b568b641.da5428",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 3500,
        "y": 60,
        "wires": [
            [
                "0499c09c9651dd96"
            ]
        ]
    },
    {
        "id": "c0e25807dc9a92f3",
        "type": "subflow:e10e5505.0b2a38",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 3510,
        "y": 180,
        "wires": [
            [
                "0499c09c9651dd96"
            ]
        ]
    },
    {
        "id": "6e2eeab97b01e50d",
        "type": "subflow:4a12be2e.080d7",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 3540,
        "y": 220,
        "wires": [
            [
                "0499c09c9651dd96"
            ]
        ]
    },
    {
        "id": "5215ec10aeeb71b4",
        "type": "subflow:b568b641.da5428",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 3500,
        "y": 100,
        "wires": [
            [
                "0499c09c9651dd96"
            ]
        ]
    },
    {
        "id": "4ae7f83460ba287a",
        "type": "subflow:b568b641.da5428",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 3500,
        "y": 140,
        "wires": [
            [
                "0499c09c9651dd96"
            ]
        ]
    },
    {
        "id": "0499c09c9651dd96",
        "type": "split",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "topic",
        "x": 3770,
        "y": 120,
        "wires": [
            [
                "bad5a30ea179ca80"
            ]
        ]
    },
    {
        "id": "bad5a30ea179ca80",
        "type": "rbe",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "x": 3890,
        "y": 120,
        "wires": [
            [
                "e3d6dbf13c047a44"
            ]
        ]
    },
    {
        "id": "5cfeb2a56fbf62b0",
        "type": "subflow:ebe34ea7.4705a",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 3510,
        "y": 260,
        "wires": [
            [
                "0499c09c9651dd96"
            ]
        ]
    },
    {
        "id": "cbe97af1864b5820",
        "type": "rpi-gpio in",
        "z": "c62bf2524e0fc96c",
        "name": "GPIO27-Pin13",
        "pin": "27",
        "intype": "tri",
        "debounce": "1500",
        "read": true,
        "bcm": true,
        "x": 2760,
        "y": 460,
        "wires": [
            [
                "b459a011a4cd3913"
            ]
        ]
    },
    {
        "id": "b459a011a4cd3913",
        "type": "function",
        "z": "c62bf2524e0fc96c",
        "name": "msg.GPIO=27",
        "func": "\nmsg.GPIO = 27\n\n//GUARDAR OBJGPIO\nlet ObjGpio = flow.get('ObjGpio') || {}\n\nObjGpio[`${msg.topic.match(/[0-9]+/g)}`] = msg.payload\n\nflow.set('ObjGpio',ObjGpio);\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2960,
        "y": 420,
        "wires": [
            [
                "c04a7a7ac60c4bc2"
            ]
        ]
    },
    {
        "id": "4e748e65deddc2a5",
        "type": "change",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "resetCounter",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2760,
        "y": 380,
        "wires": [
            [
                "b459a011a4cd3913"
            ]
        ]
    },
    {
        "id": "0c92451a13c1d712",
        "type": "link in",
        "z": "c62bf2524e0fc96c",
        "name": "ResetCounterAsset_11",
        "links": [
            "07407ec46245f60d"
        ],
        "x": 2615,
        "y": 380,
        "wires": [
            [
                "4e748e65deddc2a5"
            ]
        ]
    },
    {
        "id": "c04a7a7ac60c4bc2",
        "type": "subflow:16e2ce83.628ca1",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 3140,
        "y": 420,
        "wires": [
            [
                "6b73e34d464f4aac"
            ]
        ]
    },
    {
        "id": "8232317931c52bec",
        "type": "subflow:1144a4b6.dd0f6b",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 3520,
        "y": 320,
        "wires": [
            [
                "87adf53aa256709f"
            ]
        ]
    },
    {
        "id": "6b73e34d464f4aac",
        "type": "switch",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "property": "nomMaquina",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "HEADER",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "THREADER",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "COLLATOR",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "CLEANER",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "EMPTY",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "ROBOT",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "VISION_STRIP",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "VISION_REJECTED",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "BOXCOUNTER",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 9,
        "x": 3290,
        "y": 420,
        "wires": [
            [
                "8232317931c52bec"
            ],
            [
                "e1d311592584b061"
            ],
            [
                "12ab132a9df685ec"
            ],
            [
                "8ef29702ce50d7f7"
            ],
            [],
            [],
            [
                "c480d03e1ac1244a"
            ],
            [
                "649299d7120ac88d"
            ],
            [
                "8c530a0c5ec8d983"
            ]
        ]
    },
    {
        "id": "e1d311592584b061",
        "type": "subflow:b568b641.da5428",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 3500,
        "y": 360,
        "wires": [
            [
                "87adf53aa256709f"
            ]
        ]
    },
    {
        "id": "c480d03e1ac1244a",
        "type": "subflow:e10e5505.0b2a38",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 3510,
        "y": 480,
        "wires": [
            [
                "87adf53aa256709f"
            ]
        ]
    },
    {
        "id": "649299d7120ac88d",
        "type": "subflow:4a12be2e.080d7",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 3540,
        "y": 520,
        "wires": [
            [
                "87adf53aa256709f"
            ]
        ]
    },
    {
        "id": "12ab132a9df685ec",
        "type": "subflow:b568b641.da5428",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 3500,
        "y": 400,
        "wires": [
            [
                "87adf53aa256709f"
            ]
        ]
    },
    {
        "id": "8ef29702ce50d7f7",
        "type": "subflow:b568b641.da5428",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 3500,
        "y": 440,
        "wires": [
            [
                "87adf53aa256709f"
            ]
        ]
    },
    {
        "id": "87adf53aa256709f",
        "type": "split",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "topic",
        "x": 3770,
        "y": 420,
        "wires": [
            [
                "b8097e11d9c96617"
            ]
        ]
    },
    {
        "id": "b8097e11d9c96617",
        "type": "rbe",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "x": 3890,
        "y": 420,
        "wires": [
            [
                "e3d6dbf13c047a44"
            ]
        ]
    },
    {
        "id": "8c530a0c5ec8d983",
        "type": "subflow:ebe34ea7.4705a",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 3510,
        "y": 560,
        "wires": [
            [
                "87adf53aa256709f"
            ]
        ]
    },
    {
        "id": "795112ad5ea571ed",
        "type": "rpi-gpio in",
        "z": "c62bf2524e0fc96c",
        "name": "GPIO22-Pin15",
        "pin": "22",
        "intype": "tri",
        "debounce": "0",
        "read": true,
        "bcm": true,
        "x": 2760,
        "y": 720,
        "wires": [
            [
                "1a23462bb8fefe0a"
            ]
        ]
    },
    {
        "id": "1a23462bb8fefe0a",
        "type": "function",
        "z": "c62bf2524e0fc96c",
        "name": "msg.GPIO=22",
        "func": "\nmsg.GPIO = 22\n\n//GUARDAR OBJGPIO\nlet ObjGpio = flow.get('ObjGpio') || {}\n\nObjGpio[`${msg.topic.match(/[0-9]+/g)}`] = msg.payload\n\nflow.set('ObjGpio',ObjGpio);\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2960,
        "y": 720,
        "wires": [
            [
                "d322c9f7f777fbd9"
            ]
        ]
    },
    {
        "id": "b23b090f76b834e6",
        "type": "change",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "resetCounter",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2760,
        "y": 680,
        "wires": [
            [
                "1a23462bb8fefe0a"
            ]
        ]
    },
    {
        "id": "0e48ca4f73afa612",
        "type": "link in",
        "z": "c62bf2524e0fc96c",
        "name": "ResetCounterAsset_11",
        "links": [
            "07407ec46245f60d"
        ],
        "x": 2615,
        "y": 680,
        "wires": [
            [
                "b23b090f76b834e6"
            ]
        ]
    },
    {
        "id": "d322c9f7f777fbd9",
        "type": "subflow:16e2ce83.628ca1",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 3140,
        "y": 720,
        "wires": [
            [
                "21ee41ace968b386"
            ]
        ]
    },
    {
        "id": "18f661a4eaa9811f",
        "type": "subflow:1144a4b6.dd0f6b",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 3520,
        "y": 620,
        "wires": [
            [
                "4ab106cb5967107a"
            ]
        ]
    },
    {
        "id": "21ee41ace968b386",
        "type": "switch",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "property": "nomMaquina",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "HEADER",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "THREADER",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "COLLATOR",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "CLEANER",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "EMPTY",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "ROBOT",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "VISION_STRIP",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "VISION_REJECTED",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "BOXCOUNTER",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 9,
        "x": 3290,
        "y": 720,
        "wires": [
            [
                "18f661a4eaa9811f"
            ],
            [
                "c0f257dc62dca1d5"
            ],
            [
                "04b9b0a818404003"
            ],
            [
                "77ec47fac7d133dc"
            ],
            [],
            [],
            [
                "ff55b0b3d8c3e646"
            ],
            [
                "f772d1bf3d778a72"
            ],
            [
                "20e2ba263c9f063c"
            ]
        ]
    },
    {
        "id": "c0f257dc62dca1d5",
        "type": "subflow:b568b641.da5428",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 3500,
        "y": 660,
        "wires": [
            [
                "4ab106cb5967107a"
            ]
        ]
    },
    {
        "id": "ff55b0b3d8c3e646",
        "type": "subflow:e10e5505.0b2a38",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 3510,
        "y": 780,
        "wires": [
            [
                "4ab106cb5967107a"
            ]
        ]
    },
    {
        "id": "f772d1bf3d778a72",
        "type": "subflow:4a12be2e.080d7",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 3540,
        "y": 820,
        "wires": [
            [
                "4ab106cb5967107a"
            ]
        ]
    },
    {
        "id": "04b9b0a818404003",
        "type": "subflow:b568b641.da5428",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 3500,
        "y": 700,
        "wires": [
            [
                "4ab106cb5967107a"
            ]
        ]
    },
    {
        "id": "77ec47fac7d133dc",
        "type": "subflow:b568b641.da5428",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 3500,
        "y": 740,
        "wires": [
            [
                "4ab106cb5967107a"
            ]
        ]
    },
    {
        "id": "4ab106cb5967107a",
        "type": "split",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "topic",
        "x": 3770,
        "y": 720,
        "wires": [
            [
                "db232f01242235d2"
            ]
        ]
    },
    {
        "id": "db232f01242235d2",
        "type": "rbe",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "x": 3890,
        "y": 720,
        "wires": [
            [
                "e3d6dbf13c047a44"
            ]
        ]
    },
    {
        "id": "20e2ba263c9f063c",
        "type": "subflow:ebe34ea7.4705a",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 3510,
        "y": 860,
        "wires": [
            [
                "4ab106cb5967107a"
            ]
        ]
    },
    {
        "id": "c477897e12b79c87",
        "type": "rpi-gpio in",
        "z": "c62bf2524e0fc96c",
        "name": "GPIO19-Pin35",
        "pin": "25",
        "intype": "tri",
        "debounce": "0",
        "read": true,
        "bcm": true,
        "x": 2760,
        "y": 1020,
        "wires": [
            [
                "3405eaf71715377f"
            ]
        ]
    },
    {
        "id": "3405eaf71715377f",
        "type": "function",
        "z": "c62bf2524e0fc96c",
        "name": "msg.GPIO=19",
        "func": "\nmsg.GPIO = 19\n\n\n//GUARDAR OBJGPIO\nlet ObjGpio = flow.get('ObjGpio') || {}\n\nObjGpio[`${msg.topic.match(/[0-9]+/g)}`] = msg.payload\n\nflow.set('ObjGpio',ObjGpio);\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2960,
        "y": 1020,
        "wires": [
            [
                "0e30bc9b60d005f8"
            ]
        ]
    },
    {
        "id": "b5206dd546ccf577",
        "type": "change",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "resetCounter",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2760,
        "y": 980,
        "wires": [
            [
                "3405eaf71715377f"
            ]
        ]
    },
    {
        "id": "afacdfd837d11996",
        "type": "link in",
        "z": "c62bf2524e0fc96c",
        "name": "ResetCounterAsset_11",
        "links": [
            "07407ec46245f60d"
        ],
        "x": 2615,
        "y": 980,
        "wires": [
            [
                "b5206dd546ccf577"
            ]
        ]
    },
    {
        "id": "0e30bc9b60d005f8",
        "type": "subflow:16e2ce83.628ca1",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 3140,
        "y": 1020,
        "wires": [
            [
                "97ad24bf3ffcd7a0"
            ]
        ]
    },
    {
        "id": "5e8ce644741a9c3a",
        "type": "subflow:1144a4b6.dd0f6b",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 3520,
        "y": 920,
        "wires": [
            [
                "ed4310df7c0b4c73"
            ]
        ]
    },
    {
        "id": "97ad24bf3ffcd7a0",
        "type": "switch",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "property": "nomMaquina",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "HEADER",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "THREADER",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "COLLATOR",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "CLEANER",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "EMPTY",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "ROBOT",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "VISION_STRIP",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "VISION_REJECTED",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "BOXCOUNTER",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 9,
        "x": 3290,
        "y": 1020,
        "wires": [
            [
                "5e8ce644741a9c3a"
            ],
            [
                "3b500e267f571806"
            ],
            [
                "e7aaec78c5108dfe"
            ],
            [
                "59577b273e955f84"
            ],
            [],
            [],
            [
                "c6ec4b1dbb1ff1db"
            ],
            [
                "4cb7f71d946cb695"
            ],
            [
                "7c056c0931449d0e"
            ]
        ]
    },
    {
        "id": "3b500e267f571806",
        "type": "subflow:b568b641.da5428",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 3500,
        "y": 960,
        "wires": [
            [
                "ed4310df7c0b4c73"
            ]
        ]
    },
    {
        "id": "c6ec4b1dbb1ff1db",
        "type": "subflow:e10e5505.0b2a38",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 3510,
        "y": 1080,
        "wires": [
            [
                "ed4310df7c0b4c73"
            ]
        ]
    },
    {
        "id": "4cb7f71d946cb695",
        "type": "subflow:4a12be2e.080d7",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 3540,
        "y": 1120,
        "wires": [
            [
                "ed4310df7c0b4c73"
            ]
        ]
    },
    {
        "id": "e7aaec78c5108dfe",
        "type": "subflow:b568b641.da5428",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 3500,
        "y": 1000,
        "wires": [
            [
                "ed4310df7c0b4c73"
            ]
        ]
    },
    {
        "id": "59577b273e955f84",
        "type": "subflow:b568b641.da5428",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 3500,
        "y": 1040,
        "wires": [
            [
                "ed4310df7c0b4c73"
            ]
        ]
    },
    {
        "id": "ed4310df7c0b4c73",
        "type": "split",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "topic",
        "x": 3770,
        "y": 1020,
        "wires": [
            [
                "abf2655cd6f38284"
            ]
        ]
    },
    {
        "id": "abf2655cd6f38284",
        "type": "rbe",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "x": 3890,
        "y": 1020,
        "wires": [
            [
                "e3d6dbf13c047a44"
            ]
        ]
    },
    {
        "id": "7c056c0931449d0e",
        "type": "subflow:ebe34ea7.4705a",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 3510,
        "y": 1160,
        "wires": [
            [
                "ed4310df7c0b4c73"
            ]
        ]
    },
    {
        "id": "49b961fdb9604a1d",
        "type": "rpi-gpio in",
        "z": "c62bf2524e0fc96c",
        "name": "GPIO26-Pin37",
        "pin": "7",
        "intype": "tri",
        "debounce": "0",
        "read": true,
        "bcm": true,
        "x": 2760,
        "y": 1320,
        "wires": [
            [
                "8378d404eaddce6b"
            ]
        ]
    },
    {
        "id": "8378d404eaddce6b",
        "type": "function",
        "z": "c62bf2524e0fc96c",
        "name": "msg.GPIO=26",
        "func": "\nmsg.GPIO = 26\n\n//GUARDAR OBJGPIO\nlet ObjGpio = flow.get('ObjGpio') || {}\n\nObjGpio[`${msg.topic.match(/[0-9]+/g)}`] = msg.payload\n\nflow.set('ObjGpio',ObjGpio);\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2960,
        "y": 1320,
        "wires": [
            [
                "7e9e3df31cbdfe02"
            ]
        ]
    },
    {
        "id": "91b1d0386623458b",
        "type": "change",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "resetCounter",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2760,
        "y": 1280,
        "wires": [
            [
                "8378d404eaddce6b"
            ]
        ]
    },
    {
        "id": "d5549e37fce484bb",
        "type": "link in",
        "z": "c62bf2524e0fc96c",
        "name": "ResetCounterAsset_11",
        "links": [
            "07407ec46245f60d"
        ],
        "x": 2615,
        "y": 1280,
        "wires": [
            [
                "91b1d0386623458b"
            ]
        ]
    },
    {
        "id": "7e9e3df31cbdfe02",
        "type": "subflow:16e2ce83.628ca1",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 3140,
        "y": 1320,
        "wires": [
            [
                "8509b68986261476"
            ]
        ]
    },
    {
        "id": "08ab2f2f12d2e096",
        "type": "subflow:1144a4b6.dd0f6b",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 3520,
        "y": 1220,
        "wires": [
            [
                "db5fc4e59e197786"
            ]
        ]
    },
    {
        "id": "8509b68986261476",
        "type": "switch",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "property": "nomMaquina",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "HEADER",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "THREADER",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "COLLATOR",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "CLEANER",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "EMPTY",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "ROBOT",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "VISION_STRIP",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "VISION_REJECTED",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "BOXCOUNTER",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 9,
        "x": 3290,
        "y": 1320,
        "wires": [
            [
                "08ab2f2f12d2e096"
            ],
            [
                "922c0645adc575fa"
            ],
            [
                "2c59025fd9cfafef"
            ],
            [
                "d2076f163436b6e5"
            ],
            [],
            [],
            [
                "20a5311d549a9bfc"
            ],
            [
                "b8bbddc72c09f51b"
            ],
            [
                "863b93974a55d826"
            ]
        ]
    },
    {
        "id": "922c0645adc575fa",
        "type": "subflow:b568b641.da5428",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 3500,
        "y": 1260,
        "wires": [
            [
                "db5fc4e59e197786"
            ]
        ]
    },
    {
        "id": "20a5311d549a9bfc",
        "type": "subflow:e10e5505.0b2a38",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 3510,
        "y": 1380,
        "wires": [
            [
                "db5fc4e59e197786"
            ]
        ]
    },
    {
        "id": "b8bbddc72c09f51b",
        "type": "subflow:4a12be2e.080d7",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 3540,
        "y": 1420,
        "wires": [
            [
                "db5fc4e59e197786"
            ]
        ]
    },
    {
        "id": "2c59025fd9cfafef",
        "type": "subflow:b568b641.da5428",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 3500,
        "y": 1300,
        "wires": [
            [
                "db5fc4e59e197786"
            ]
        ]
    },
    {
        "id": "d2076f163436b6e5",
        "type": "subflow:b568b641.da5428",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 3500,
        "y": 1340,
        "wires": [
            [
                "db5fc4e59e197786"
            ]
        ]
    },
    {
        "id": "db5fc4e59e197786",
        "type": "split",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "topic",
        "x": 3770,
        "y": 1320,
        "wires": [
            [
                "63eca420fbb340a0"
            ]
        ]
    },
    {
        "id": "63eca420fbb340a0",
        "type": "rbe",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "x": 3890,
        "y": 1320,
        "wires": [
            [
                "e3d6dbf13c047a44"
            ]
        ]
    },
    {
        "id": "863b93974a55d826",
        "type": "subflow:ebe34ea7.4705a",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 3510,
        "y": 1460,
        "wires": [
            [
                "db5fc4e59e197786"
            ]
        ]
    },
    {
        "id": "ef87e05baceb60dc",
        "type": "rpi-gpio in",
        "z": "c62bf2524e0fc96c",
        "name": "GPIO18-Pin12",
        "pin": "18",
        "intype": "tri",
        "debounce": "0",
        "read": true,
        "bcm": true,
        "x": 2760,
        "y": 1620,
        "wires": [
            [
                "71b3308b311aa939"
            ]
        ]
    },
    {
        "id": "71b3308b311aa939",
        "type": "function",
        "z": "c62bf2524e0fc96c",
        "name": "msg.GPIO=18",
        "func": "\nmsg.GPIO = 18\n\n//GUARDAR OBJGPIO\nlet ObjGpio = flow.get('ObjGpio') || {}\n\nObjGpio[`${msg.topic.match(/[0-9]+/g)}`] = msg.payload\n\nflow.set('ObjGpio',ObjGpio);\n\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2960,
        "y": 1620,
        "wires": [
            [
                "a71b4ba0c258dc61"
            ]
        ]
    },
    {
        "id": "e7ad11369c2b504e",
        "type": "change",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "resetCounter",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2760,
        "y": 1580,
        "wires": [
            [
                "71b3308b311aa939"
            ]
        ]
    },
    {
        "id": "a30ccf282a55eb9c",
        "type": "link in",
        "z": "c62bf2524e0fc96c",
        "name": "ResetCounterAsset_11",
        "links": [
            "07407ec46245f60d"
        ],
        "x": 2615,
        "y": 1580,
        "wires": [
            [
                "e7ad11369c2b504e"
            ]
        ]
    },
    {
        "id": "a71b4ba0c258dc61",
        "type": "subflow:16e2ce83.628ca1",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 3140,
        "y": 1620,
        "wires": [
            [
                "5ef6aa1ef30afeac"
            ]
        ]
    },
    {
        "id": "81d2f5d0e7e54fa1",
        "type": "subflow:1144a4b6.dd0f6b",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 3520,
        "y": 1520,
        "wires": [
            [
                "e1a83d15d6310c77"
            ]
        ]
    },
    {
        "id": "5ef6aa1ef30afeac",
        "type": "switch",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "property": "nomMaquina",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "HEADER",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "THREADER",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "COLLATOR",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "CLEANER",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "EMPTY",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "ROBOT",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "VISION_STRIP",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "VISION_REJECTED",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "BOXCOUNTER",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 9,
        "x": 3290,
        "y": 1620,
        "wires": [
            [
                "81d2f5d0e7e54fa1"
            ],
            [
                "6f23d3a4c6500759"
            ],
            [
                "348c0ca38687b674"
            ],
            [
                "321a0169d2be47f6"
            ],
            [],
            [],
            [
                "0451da396e429d1a"
            ],
            [
                "911496c3e7697b7c"
            ],
            [
                "6bb4c8c2830024c8"
            ]
        ]
    },
    {
        "id": "6f23d3a4c6500759",
        "type": "subflow:b568b641.da5428",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 3500,
        "y": 1560,
        "wires": [
            [
                "e1a83d15d6310c77"
            ]
        ]
    },
    {
        "id": "0451da396e429d1a",
        "type": "subflow:e10e5505.0b2a38",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 3510,
        "y": 1680,
        "wires": [
            [
                "e1a83d15d6310c77"
            ]
        ]
    },
    {
        "id": "911496c3e7697b7c",
        "type": "subflow:4a12be2e.080d7",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 3540,
        "y": 1720,
        "wires": [
            [
                "e1a83d15d6310c77"
            ]
        ]
    },
    {
        "id": "348c0ca38687b674",
        "type": "subflow:b568b641.da5428",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 3500,
        "y": 1600,
        "wires": [
            [
                "e1a83d15d6310c77"
            ]
        ]
    },
    {
        "id": "321a0169d2be47f6",
        "type": "subflow:b568b641.da5428",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 3500,
        "y": 1640,
        "wires": [
            [
                "e1a83d15d6310c77"
            ]
        ]
    },
    {
        "id": "e1a83d15d6310c77",
        "type": "split",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "topic",
        "x": 3770,
        "y": 1620,
        "wires": [
            [
                "57d020df028c636a"
            ]
        ]
    },
    {
        "id": "57d020df028c636a",
        "type": "rbe",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "x": 3890,
        "y": 1620,
        "wires": [
            [
                "e3d6dbf13c047a44"
            ]
        ]
    },
    {
        "id": "6bb4c8c2830024c8",
        "type": "subflow:ebe34ea7.4705a",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 3510,
        "y": 1760,
        "wires": [
            [
                "e1a83d15d6310c77"
            ]
        ]
    },
    {
        "id": "200d2b6cae783d88",
        "type": "rpi-gpio in",
        "z": "c62bf2524e0fc96c",
        "name": "GPIO23-Pin16",
        "pin": "11",
        "intype": "tri",
        "debounce": "0",
        "read": true,
        "bcm": true,
        "x": 2760,
        "y": 1920,
        "wires": [
            [
                "3ded35f38bdf2514"
            ]
        ]
    },
    {
        "id": "3ded35f38bdf2514",
        "type": "function",
        "z": "c62bf2524e0fc96c",
        "name": "msg.GPIO=23",
        "func": "\nmsg.GPIO = 23\n\n//GUARDAR OBJGPIO\nlet ObjGpio = flow.get('ObjGpio') || {}\n\nObjGpio[`${msg.topic.match(/[0-9]+/g)}`] = msg.payload\n\nflow.set('ObjGpio',ObjGpio);\n\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2960,
        "y": 1920,
        "wires": [
            [
                "fcc5ed3d109b5253"
            ]
        ]
    },
    {
        "id": "f59bda4602d4e687",
        "type": "change",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "resetCounter",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2760,
        "y": 1880,
        "wires": [
            [
                "3ded35f38bdf2514"
            ]
        ]
    },
    {
        "id": "1bb2db6dab09371a",
        "type": "link in",
        "z": "c62bf2524e0fc96c",
        "name": "ResetCounterAsset_11",
        "links": [
            "07407ec46245f60d"
        ],
        "x": 2615,
        "y": 1880,
        "wires": [
            [
                "f59bda4602d4e687"
            ]
        ]
    },
    {
        "id": "fcc5ed3d109b5253",
        "type": "subflow:16e2ce83.628ca1",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 3140,
        "y": 1920,
        "wires": [
            [
                "cb6ab8fca5a7dd0a"
            ]
        ]
    },
    {
        "id": "04c314fa55bfd4b1",
        "type": "subflow:1144a4b6.dd0f6b",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 3520,
        "y": 1820,
        "wires": [
            [
                "b5f5f79a024656d1"
            ]
        ]
    },
    {
        "id": "cb6ab8fca5a7dd0a",
        "type": "switch",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "property": "nomMaquina",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "HEADER",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "THREADER",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "COLLATOR",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "CLEANER",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "EMPTY",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "ROBOT",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "VISION_STRIP",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "VISION_REJECTED",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "BOXCOUNTER",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 9,
        "x": 3290,
        "y": 1920,
        "wires": [
            [
                "04c314fa55bfd4b1"
            ],
            [
                "3e8295aa272e43f1"
            ],
            [
                "2a9aab0835ee0347"
            ],
            [
                "a3488dfe82504f7a"
            ],
            [],
            [],
            [
                "d0b0f0cf33a2a033"
            ],
            [
                "3862923bfa3d6e7e"
            ],
            [
                "3cbba9a34289c722"
            ]
        ]
    },
    {
        "id": "3e8295aa272e43f1",
        "type": "subflow:b568b641.da5428",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 3500,
        "y": 1860,
        "wires": [
            [
                "b5f5f79a024656d1"
            ]
        ]
    },
    {
        "id": "d0b0f0cf33a2a033",
        "type": "subflow:e10e5505.0b2a38",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 3510,
        "y": 1980,
        "wires": [
            [
                "b5f5f79a024656d1"
            ]
        ]
    },
    {
        "id": "3862923bfa3d6e7e",
        "type": "subflow:4a12be2e.080d7",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 3540,
        "y": 2020,
        "wires": [
            [
                "b5f5f79a024656d1"
            ]
        ]
    },
    {
        "id": "2a9aab0835ee0347",
        "type": "subflow:b568b641.da5428",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 3500,
        "y": 1900,
        "wires": [
            [
                "b5f5f79a024656d1"
            ]
        ]
    },
    {
        "id": "a3488dfe82504f7a",
        "type": "subflow:b568b641.da5428",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 3500,
        "y": 1940,
        "wires": [
            [
                "b5f5f79a024656d1"
            ]
        ]
    },
    {
        "id": "b5f5f79a024656d1",
        "type": "split",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "topic",
        "x": 3770,
        "y": 1920,
        "wires": [
            [
                "b4c030d0d2584c05"
            ]
        ]
    },
    {
        "id": "b4c030d0d2584c05",
        "type": "rbe",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "x": 3890,
        "y": 1920,
        "wires": [
            [
                "e3d6dbf13c047a44"
            ]
        ]
    },
    {
        "id": "3cbba9a34289c722",
        "type": "subflow:ebe34ea7.4705a",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 3510,
        "y": 2060,
        "wires": [
            [
                "b5f5f79a024656d1"
            ]
        ]
    },
    {
        "id": "791ac9fef39f5b2b",
        "type": "rpi-gpio in",
        "z": "c62bf2524e0fc96c",
        "name": "GPIO24-Pin18",
        "pin": "8",
        "intype": "tri",
        "debounce": "0",
        "read": true,
        "bcm": true,
        "x": 2760,
        "y": 2220,
        "wires": [
            [
                "0c90b8e35aae20b5"
            ]
        ]
    },
    {
        "id": "0c90b8e35aae20b5",
        "type": "function",
        "z": "c62bf2524e0fc96c",
        "name": "msg.GPIO=24",
        "func": "\nmsg.GPIO = 24\n\n//GUARDAR OBJGPIO\nlet ObjGpio = flow.get('ObjGpio') || {}\n\nObjGpio[`${msg.topic.match(/[0-9]+/g)}`] = msg.payload\n\nflow.set('ObjGpio',ObjGpio);\n\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2960,
        "y": 2220,
        "wires": [
            [
                "920cc4ad19bdac9c"
            ]
        ]
    },
    {
        "id": "993207f8d7ca34f1",
        "type": "change",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "resetCounter",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2760,
        "y": 2180,
        "wires": [
            [
                "0c90b8e35aae20b5"
            ]
        ]
    },
    {
        "id": "5e8f76c2e38e8aca",
        "type": "link in",
        "z": "c62bf2524e0fc96c",
        "name": "ResetCounterAsset_11",
        "links": [
            "07407ec46245f60d"
        ],
        "x": 2615,
        "y": 2180,
        "wires": [
            [
                "993207f8d7ca34f1"
            ]
        ]
    },
    {
        "id": "920cc4ad19bdac9c",
        "type": "subflow:16e2ce83.628ca1",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 3140,
        "y": 2220,
        "wires": [
            [
                "4c0e1e1755c09372"
            ]
        ]
    },
    {
        "id": "14e14e52879d2519",
        "type": "subflow:1144a4b6.dd0f6b",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 3520,
        "y": 2120,
        "wires": [
            [
                "cbb11ae803bbf184"
            ]
        ]
    },
    {
        "id": "4c0e1e1755c09372",
        "type": "switch",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "property": "nomMaquina",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "HEADER",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "THREADER",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "COLLATOR",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "CLEANER",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "EMPTY",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "ROBOT",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "VISION_STRIP",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "VISION_REJECTED",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "BOXCOUNTER",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 9,
        "x": 3290,
        "y": 2220,
        "wires": [
            [
                "14e14e52879d2519"
            ],
            [
                "2075579a431763fe"
            ],
            [
                "11317afbac7d9812"
            ],
            [
                "7c3d62feb9ad1159"
            ],
            [],
            [],
            [
                "71c0ebc958649c14"
            ],
            [
                "4cb2a11241170578"
            ],
            [
                "6d342403c3d10e88"
            ]
        ]
    },
    {
        "id": "2075579a431763fe",
        "type": "subflow:b568b641.da5428",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 3500,
        "y": 2160,
        "wires": [
            [
                "cbb11ae803bbf184"
            ]
        ]
    },
    {
        "id": "71c0ebc958649c14",
        "type": "subflow:e10e5505.0b2a38",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 3510,
        "y": 2280,
        "wires": [
            [
                "cbb11ae803bbf184"
            ]
        ]
    },
    {
        "id": "4cb2a11241170578",
        "type": "subflow:4a12be2e.080d7",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 3540,
        "y": 2320,
        "wires": [
            [
                "cbb11ae803bbf184"
            ]
        ]
    },
    {
        "id": "11317afbac7d9812",
        "type": "subflow:b568b641.da5428",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 3500,
        "y": 2200,
        "wires": [
            [
                "cbb11ae803bbf184"
            ]
        ]
    },
    {
        "id": "7c3d62feb9ad1159",
        "type": "subflow:b568b641.da5428",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 3500,
        "y": 2240,
        "wires": [
            [
                "cbb11ae803bbf184"
            ]
        ]
    },
    {
        "id": "cbb11ae803bbf184",
        "type": "split",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "topic",
        "x": 3770,
        "y": 2220,
        "wires": [
            [
                "e8bb72cc887e3053"
            ]
        ]
    },
    {
        "id": "e8bb72cc887e3053",
        "type": "rbe",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "x": 3890,
        "y": 2220,
        "wires": [
            [
                "e3d6dbf13c047a44"
            ]
        ]
    },
    {
        "id": "6d342403c3d10e88",
        "type": "subflow:ebe34ea7.4705a",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 3510,
        "y": 2360,
        "wires": [
            [
                "cbb11ae803bbf184"
            ]
        ]
    },
    {
        "id": "9778ad3b332e3c5c",
        "type": "rpi-gpio in",
        "z": "c62bf2524e0fc96c",
        "name": "GPIO25-Pin22",
        "pin": "25",
        "intype": "tri",
        "debounce": "0",
        "read": true,
        "bcm": true,
        "x": 2760,
        "y": 2520,
        "wires": [
            [
                "03bdc06595b18710"
            ]
        ]
    },
    {
        "id": "03bdc06595b18710",
        "type": "function",
        "z": "c62bf2524e0fc96c",
        "name": "msg.GPIO=25",
        "func": "\nmsg.GPIO = 25\n\n\n//GUARDAR OBJGPIO\nlet ObjGpio = flow.get('ObjGpio') || {}\n\nObjGpio[`${msg.topic.match(/[0-9]+/g)}`] = msg.payload\n\nflow.set('ObjGpio',ObjGpio);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2960,
        "y": 2520,
        "wires": [
            [
                "8a67cde9b8017acc"
            ]
        ]
    },
    {
        "id": "df14b70d688ec9fd",
        "type": "change",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "resetCounter",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2760,
        "y": 2480,
        "wires": [
            [
                "03bdc06595b18710"
            ]
        ]
    },
    {
        "id": "272d91e34659dc16",
        "type": "link in",
        "z": "c62bf2524e0fc96c",
        "name": "ResetCounterAsset_11",
        "links": [
            "07407ec46245f60d"
        ],
        "x": 2615,
        "y": 2480,
        "wires": [
            [
                "df14b70d688ec9fd"
            ]
        ]
    },
    {
        "id": "8a67cde9b8017acc",
        "type": "subflow:16e2ce83.628ca1",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 3140,
        "y": 2520,
        "wires": [
            [
                "4a120b978cb272db"
            ]
        ]
    },
    {
        "id": "fbdbfa76fdc6b91c",
        "type": "subflow:1144a4b6.dd0f6b",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 3520,
        "y": 2420,
        "wires": [
            [
                "469ef54d6927aedd"
            ]
        ]
    },
    {
        "id": "4a120b978cb272db",
        "type": "switch",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "property": "nomMaquina",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "HEADER",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "THREADER",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "COLLATOR",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "CLEANER",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "EMPTY",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "ROBOT",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "VISION_STRIP",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "VISION_REJECTED",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "BOXCOUNTER",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 9,
        "x": 3290,
        "y": 2520,
        "wires": [
            [
                "fbdbfa76fdc6b91c"
            ],
            [
                "22e7ad21f7c2473f"
            ],
            [
                "7ca9856cf4c2e329"
            ],
            [
                "514a7581b6e578b5"
            ],
            [],
            [],
            [
                "0dd1af9761caba98"
            ],
            [
                "24725ce44b09839f"
            ],
            [
                "a290afe41466addf"
            ]
        ]
    },
    {
        "id": "22e7ad21f7c2473f",
        "type": "subflow:b568b641.da5428",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 3500,
        "y": 2460,
        "wires": [
            [
                "469ef54d6927aedd"
            ]
        ]
    },
    {
        "id": "0dd1af9761caba98",
        "type": "subflow:e10e5505.0b2a38",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 3510,
        "y": 2580,
        "wires": [
            [
                "469ef54d6927aedd"
            ]
        ]
    },
    {
        "id": "24725ce44b09839f",
        "type": "subflow:4a12be2e.080d7",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 3540,
        "y": 2620,
        "wires": [
            [
                "469ef54d6927aedd"
            ]
        ]
    },
    {
        "id": "7ca9856cf4c2e329",
        "type": "subflow:b568b641.da5428",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 3500,
        "y": 2500,
        "wires": [
            [
                "469ef54d6927aedd"
            ]
        ]
    },
    {
        "id": "514a7581b6e578b5",
        "type": "subflow:b568b641.da5428",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 3500,
        "y": 2540,
        "wires": [
            [
                "469ef54d6927aedd"
            ]
        ]
    },
    {
        "id": "469ef54d6927aedd",
        "type": "split",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "topic",
        "x": 3770,
        "y": 2520,
        "wires": [
            [
                "0490805ae169e9cf"
            ]
        ]
    },
    {
        "id": "0490805ae169e9cf",
        "type": "rbe",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "x": 3890,
        "y": 2520,
        "wires": [
            [
                "e3d6dbf13c047a44"
            ]
        ]
    },
    {
        "id": "a290afe41466addf",
        "type": "subflow:ebe34ea7.4705a",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 3510,
        "y": 2660,
        "wires": [
            [
                "469ef54d6927aedd"
            ]
        ]
    },
    {
        "id": "1a8d4154e519962d",
        "type": "rpi-gpio in",
        "z": "c62bf2524e0fc96c",
        "name": "GPIO20-Pin38",
        "pin": "20",
        "intype": "tri",
        "debounce": "0",
        "read": true,
        "bcm": true,
        "x": 2760,
        "y": 2820,
        "wires": [
            [
                "04153b4e59b76c07"
            ]
        ]
    },
    {
        "id": "04153b4e59b76c07",
        "type": "function",
        "z": "c62bf2524e0fc96c",
        "name": "msg.GPIO=20",
        "func": "\nmsg.GPIO = 20\n\n//GUARDAR OBJGPIO\nlet ObjGpio = flow.get('ObjGpio') || {}\n\nObjGpio[`${msg.topic.match(/[0-9]+/g)}`] = msg.payload\n\nflow.set('ObjGpio',ObjGpio);\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2960,
        "y": 2820,
        "wires": [
            [
                "410f5ceafd22d828"
            ]
        ]
    },
    {
        "id": "29bfa15af8cf6e70",
        "type": "change",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "resetCounter",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2760,
        "y": 2780,
        "wires": [
            [
                "04153b4e59b76c07"
            ]
        ]
    },
    {
        "id": "45e3500a81f5861d",
        "type": "link in",
        "z": "c62bf2524e0fc96c",
        "name": "ResetCounterAsset_11",
        "links": [
            "07407ec46245f60d"
        ],
        "x": 2615,
        "y": 2780,
        "wires": [
            [
                "29bfa15af8cf6e70"
            ]
        ]
    },
    {
        "id": "410f5ceafd22d828",
        "type": "subflow:16e2ce83.628ca1",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 3140,
        "y": 2820,
        "wires": [
            [
                "4f494157407eeed7"
            ]
        ]
    },
    {
        "id": "a6b4d0d8882f6b11",
        "type": "subflow:1144a4b6.dd0f6b",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 3520,
        "y": 2720,
        "wires": [
            [
                "f8ae7899dfcdfda7"
            ]
        ]
    },
    {
        "id": "4f494157407eeed7",
        "type": "switch",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "property": "nomMaquina",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "HEADER",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "THREADER",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "COLLATOR",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "CLEANER",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "EMPTY",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "ROBOT",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "VISION_STRIP",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "VISION_REJECTED",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "BOXCOUNTER",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 9,
        "x": 3290,
        "y": 2820,
        "wires": [
            [
                "a6b4d0d8882f6b11"
            ],
            [
                "530bf54ab725e908"
            ],
            [
                "7d66c16c59c071e0"
            ],
            [
                "68234add3aec3c1f"
            ],
            [],
            [],
            [
                "67ee8013ef24383d"
            ],
            [
                "2fbf7dd1923845fa"
            ],
            [
                "1574aa3360e19dd6"
            ]
        ]
    },
    {
        "id": "530bf54ab725e908",
        "type": "subflow:b568b641.da5428",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 3500,
        "y": 2760,
        "wires": [
            [
                "f8ae7899dfcdfda7"
            ]
        ]
    },
    {
        "id": "67ee8013ef24383d",
        "type": "subflow:e10e5505.0b2a38",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 3510,
        "y": 2880,
        "wires": [
            [
                "f8ae7899dfcdfda7"
            ]
        ]
    },
    {
        "id": "2fbf7dd1923845fa",
        "type": "subflow:4a12be2e.080d7",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 3540,
        "y": 2920,
        "wires": [
            [
                "f8ae7899dfcdfda7"
            ]
        ]
    },
    {
        "id": "7d66c16c59c071e0",
        "type": "subflow:b568b641.da5428",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 3500,
        "y": 2800,
        "wires": [
            [
                "f8ae7899dfcdfda7"
            ]
        ]
    },
    {
        "id": "68234add3aec3c1f",
        "type": "subflow:b568b641.da5428",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 3500,
        "y": 2840,
        "wires": [
            [
                "f8ae7899dfcdfda7"
            ]
        ]
    },
    {
        "id": "f8ae7899dfcdfda7",
        "type": "split",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "topic",
        "x": 3770,
        "y": 2820,
        "wires": [
            [
                "cd68500c15b185be"
            ]
        ]
    },
    {
        "id": "cd68500c15b185be",
        "type": "rbe",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "x": 3890,
        "y": 2820,
        "wires": [
            [
                "e3d6dbf13c047a44"
            ]
        ]
    },
    {
        "id": "1574aa3360e19dd6",
        "type": "subflow:ebe34ea7.4705a",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 3510,
        "y": 2960,
        "wires": [
            [
                "f8ae7899dfcdfda7"
            ]
        ]
    },
    {
        "id": "43fc67a12e461809",
        "type": "rpi-gpio in",
        "z": "c62bf2524e0fc96c",
        "name": "GPIO21-Pin40",
        "pin": "21",
        "intype": "tri",
        "debounce": "0",
        "read": true,
        "bcm": true,
        "x": 2760,
        "y": 3120,
        "wires": [
            [
                "5852f2feca35527e"
            ]
        ]
    },
    {
        "id": "5852f2feca35527e",
        "type": "function",
        "z": "c62bf2524e0fc96c",
        "name": "msg.GPIO=21",
        "func": "\nmsg.GPIO = 21\n\n\n//GUARDAR OBJGPIO\nlet ObjGpio = flow.get('ObjGpio') || {}\n\nObjGpio[`${msg.topic.match(/[0-9]+/g)}`] = msg.payload\n\nflow.set('ObjGpio',ObjGpio);\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2960,
        "y": 3120,
        "wires": [
            [
                "45ed128c340b1826"
            ]
        ]
    },
    {
        "id": "12a20550d9207e8a",
        "type": "change",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "resetCounter",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2760,
        "y": 3080,
        "wires": [
            [
                "5852f2feca35527e"
            ]
        ]
    },
    {
        "id": "4cf49e39ec76444f",
        "type": "link in",
        "z": "c62bf2524e0fc96c",
        "name": "ResetCounterAsset_11",
        "links": [
            "07407ec46245f60d"
        ],
        "x": 2615,
        "y": 3080,
        "wires": [
            [
                "12a20550d9207e8a"
            ]
        ]
    },
    {
        "id": "45ed128c340b1826",
        "type": "subflow:16e2ce83.628ca1",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 3140,
        "y": 3120,
        "wires": [
            [
                "809d0bdf8c82e753"
            ]
        ]
    },
    {
        "id": "441b8ec6ecba295f",
        "type": "subflow:1144a4b6.dd0f6b",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 3520,
        "y": 3020,
        "wires": [
            [
                "40db8dad4158ffc0"
            ]
        ]
    },
    {
        "id": "809d0bdf8c82e753",
        "type": "switch",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "property": "nomMaquina",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "HEADER",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "THREADER",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "COLLATOR",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "CLEANER",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "EMPTY",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "ROBOT",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "VISION_STRIP",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "VISION_REJECTED",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "BOXCOUNTER",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 9,
        "x": 3290,
        "y": 3120,
        "wires": [
            [
                "441b8ec6ecba295f"
            ],
            [
                "5070ed3c0f6dabb5"
            ],
            [
                "766173864f6daa46"
            ],
            [
                "cee33ff6738b6ab0"
            ],
            [],
            [],
            [
                "fe4c4f9e8606c8d7"
            ],
            [
                "b331e022d2963323"
            ],
            [
                "5765d318d0ef9670"
            ]
        ]
    },
    {
        "id": "5070ed3c0f6dabb5",
        "type": "subflow:b568b641.da5428",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 3500,
        "y": 3060,
        "wires": [
            [
                "40db8dad4158ffc0"
            ]
        ]
    },
    {
        "id": "fe4c4f9e8606c8d7",
        "type": "subflow:e10e5505.0b2a38",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 3510,
        "y": 3180,
        "wires": [
            [
                "40db8dad4158ffc0"
            ]
        ]
    },
    {
        "id": "b331e022d2963323",
        "type": "subflow:4a12be2e.080d7",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 3540,
        "y": 3220,
        "wires": [
            [
                "40db8dad4158ffc0"
            ]
        ]
    },
    {
        "id": "766173864f6daa46",
        "type": "subflow:b568b641.da5428",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 3500,
        "y": 3100,
        "wires": [
            [
                "40db8dad4158ffc0"
            ]
        ]
    },
    {
        "id": "cee33ff6738b6ab0",
        "type": "subflow:b568b641.da5428",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 3500,
        "y": 3140,
        "wires": [
            [
                "40db8dad4158ffc0"
            ]
        ]
    },
    {
        "id": "40db8dad4158ffc0",
        "type": "split",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "topic",
        "x": 3770,
        "y": 3120,
        "wires": [
            [
                "bd5a5de1b821583b"
            ]
        ]
    },
    {
        "id": "bd5a5de1b821583b",
        "type": "rbe",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "x": 3890,
        "y": 3120,
        "wires": [
            [
                "e3d6dbf13c047a44"
            ]
        ]
    },
    {
        "id": "5765d318d0ef9670",
        "type": "subflow:ebe34ea7.4705a",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "env": [],
        "x": 3510,
        "y": 3260,
        "wires": [
            [
                "40db8dad4158ffc0"
            ]
        ]
    },
    {
        "id": "e3d6dbf13c047a44",
        "type": "link out",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "links": [
            "9425fc698834e2fd",
            "b579b63f.7c0418",
            "6ccb53c5.cd182c"
        ],
        "x": 4455,
        "y": 240,
        "wires": []
    },
    {
        "id": "281719b8f0c031cd",
        "type": "http in",
        "z": "c62bf2524e0fc96c",
        "name": "consultaGpio",
        "url": "/consultaGpio",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 3420,
        "wires": [
            [
                "4976c8155445bcf0"
            ]
        ]
    },
    {
        "id": "4976c8155445bcf0",
        "type": "function",
        "z": "c62bf2524e0fc96c",
        "name": "consultaGpio",
        "func": "\nlet ObjGpio = flow.get('ObjGpio')\n\nlet Gpio = msg.payload.Gpio\n\nmsg.payload = ObjGpio[`${Gpio}`] || 0\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 3420,
        "wires": [
            [
                "3b36dededf6edb22",
                "67044a730fb1f846"
            ]
        ]
    },
    {
        "id": "3b36dededf6edb22",
        "type": "http response",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 440,
        "y": 3420,
        "wires": []
    },
    {
        "id": "ddd3869b0ffd54ac",
        "type": "comment",
        "z": "c62bf2524e0fc96c",
        "name": "Consultar el estatus del gpio ",
        "info": "",
        "x": 160,
        "y": 3360,
        "wires": []
    },
    {
        "id": "67044a730fb1f846",
        "type": "debug",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 520,
        "y": 3500,
        "wires": []
    },
    {
        "id": "7d058859b0fb745c",
        "type": "catch",
        "z": "c62bf2524e0fc96c",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 100,
        "y": 3680,
        "wires": [
            [
                "9e82112ba5726655"
            ]
        ]
    },
    {
        "id": "9e82112ba5726655",
        "type": "function",
        "z": "c62bf2524e0fc96c",
        "name": "Error Handler",
        "func": "node.warn(`ERROR NO CONTROLADO >  ${env.get(\"NAME\")} > ${JSON.stringify(msg)}`)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 3680,
        "wires": [
            []
        ]
    },
    {
        "id": "fbe2465a686fc5e8",
        "type": "inject",
        "z": "c62bf2524e0fc96c",
        "name": "cambiar",
        "props": [
            {
                "p": "cambiar",
                "v": "1",
                "vt": "num"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 90,
        "y": 60,
        "wires": [
            [
                "f7faf0fe2ed6d442"
            ]
        ]
    },
    {
        "id": "f7faf0fe2ed6d442",
        "type": "function",
        "z": "c62bf2524e0fc96c",
        "name": "switch",
        "func": "context.set(\"activo\", context.get(\"activo\") || 0)\nif(msg.cambiar){\n    context.set(\"activo\", !context.get(\"activo\"))\n}else{\n    if(context.get(\"activo\")){\n        return msg;\n    }\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 100,
        "wires": [
            [
                "b6f43f3.5366ac"
            ]
        ]
    },
    {
        "id": "7ac620d9d75b3b19",
        "type": "http in",
        "z": "da106467599aeba9",
        "name": "CajasManuales",
        "url": "/cajasManuales",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 180,
        "y": 160,
        "wires": [
            [
                "590cd67c57e43551"
            ]
        ]
    },
    {
        "id": "590cd67c57e43551",
        "type": "delay",
        "z": "da106467599aeba9",
        "name": "",
        "pauseType": "rate",
        "timeout": "10",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "2",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 420,
        "y": 160,
        "wires": [
            [
                "57d979a109fb1a45"
            ]
        ]
    },
    {
        "id": "57d979a109fb1a45",
        "type": "function",
        "z": "da106467599aeba9",
        "name": "PasaAlto",
        "func": "msg.payload = {'PACK_COMPLETED': true};\nmsg.posicion = 0;\nmsg.EsCajaManual = 1;\nlet maquinas = global.get(\"MaquinasCelda\");\nif (maquinas) {\n    maquinas = maquinas.filter(maquinas => maquinas.NomTipoMaquina == \"ROBOT\")\n    if (maquinas.length > [msg.posicion]){\n        msg.idComponente = maquinas[msg.posicion].IdComponente;\n        //msg.idComponente = 1001\n        msg.esMaquina = maquinas.EsMaquina\n        msg.idOrigen = maquinas.IdComponente\n        msg.esGralProduccion = maquinas.EsGralProduccion\n        msg.esGralParos = maquinas.EsGralParos\n        msg.nomMaquina = maquinas[msg.posicion].NomTipoMaquina;\n        return msg;\n    }\n}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 160,
        "wires": [
            [
                "90879b7c5c1fdedc",
                "1f0f1728c82198d4",
                "1578eb9600f5422c"
            ]
        ]
    },
    {
        "id": "617f298346a2af93",
        "type": "link out",
        "z": "da106467599aeba9",
        "name": "",
        "links": [
            "3832c20e.1c783e"
        ],
        "x": 1215,
        "y": 160,
        "wires": []
    },
    {
        "id": "1f0f1728c82198d4",
        "type": "split",
        "z": "da106467599aeba9",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "topic",
        "x": 930,
        "y": 160,
        "wires": [
            [
                "e657c32588cf0c63"
            ]
        ]
    },
    {
        "id": "e657c32588cf0c63",
        "type": "rbe",
        "z": "da106467599aeba9",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "x": 1110,
        "y": 160,
        "wires": [
            [
                "617f298346a2af93",
                "a6d843579ea141b1"
            ]
        ]
    },
    {
        "id": "90879b7c5c1fdedc",
        "type": "delay",
        "z": "da106467599aeba9",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 600,
        "y": 240,
        "wires": [
            [
                "733c19c27bebe41e"
            ]
        ]
    },
    {
        "id": "733c19c27bebe41e",
        "type": "function",
        "z": "da106467599aeba9",
        "name": "PasaBajo",
        "func": "msg.payload = {'PACK_COMPLETED': false};\nmsg.posicion = 0;\nmsg.EsCajaManual = 1;\nlet maquinas = global.get(\"MaquinasCelda\");\nif (maquinas) {\n    maquinas = maquinas.filter(maquinas => maquinas.NomTipoMaquina == \"ROBOT\")\n    if (maquinas.length > [msg.posicion]){\n        msg.idComponente = maquinas[msg.posicion].IdComponente;\n        //msg.idComponente = 1001\n        msg.esMaquina = maquinas.EsMaquina\n        msg.idOrigen = maquinas.IdComponente\n        msg.esGralProduccion = maquinas.EsGralProduccion\n        msg.esGralParos = maquinas.EsGralParos\n        msg.nomMaquina = maquinas[msg.posicion].NomTipoMaquina;\n        return msg;\n    }\n}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 240,
        "wires": [
            [
                "1f0f1728c82198d4"
            ]
        ]
    },
    {
        "id": "1578eb9600f5422c",
        "type": "http response",
        "z": "da106467599aeba9",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 740,
        "y": 80,
        "wires": []
    },
    {
        "id": "a6d843579ea141b1",
        "type": "function",
        "z": "da106467599aeba9",
        "name": "BúsquedaTurno",
        "func": "\nvar turno = global.get('ClaTurno');\nlet qry = \n`SELECT horaInicioTurno ,horaFinTurno \nFROM ASWLite_CatTurno \nWHERE ClaTurno=${turno};`;\nmsg[\"topic\"] = qry\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 440,
        "wires": [
            [
                "cd3381ece86ee5fe"
            ]
        ]
    },
    {
        "id": "cd3381ece86ee5fe",
        "type": "sqlite",
        "z": "da106467599aeba9",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 530,
        "y": 440,
        "wires": [
            [
                "286dc648ce273d92"
            ]
        ]
    },
    {
        "id": "286dc648ce273d92",
        "type": "function",
        "z": "da106467599aeba9",
        "name": "QueryHorasTurno",
        "func": "var today = new Date();\nvar dd = String(today.getDate()).padStart(2, '0');\nvar mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\nvar yyyy = today.getFullYear();\ntoday = yyyy + '-' + mm + '-' + dd;\nmsg.FechaActual = today;\nmsg.horaInicio = today+' '+msg.payload[0].horaInicioTurno;\nmsg.horaFin =today+' '+msg.payload[0].horaFinTurno;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 440,
        "wires": [
            [
                "1beed7de62196d2c"
            ]
        ]
    },
    {
        "id": "1beed7de62196d2c",
        "type": "function",
        "z": "da106467599aeba9",
        "name": "",
        "func": "let qry = \n`SELECT COUNT(*) FROM ASWLite_TraFinCajaMCSW \nWHERE FechaFinReal BETWEEN '${msg.horaInicio}' AND '${msg.horaFin}'\nAND EsCajaManual = 1;`;\nmsg[\"topic\"] = qry\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 440,
        "wires": [
            [
                "5d8b9616f898f828"
            ]
        ]
    },
    {
        "id": "5d8b9616f898f828",
        "type": "sqlite",
        "z": "da106467599aeba9",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 1010,
        "y": 440,
        "wires": [
            [
                "715d5b46e12287ac"
            ]
        ]
    },
    {
        "id": "715d5b46e12287ac",
        "type": "function",
        "z": "da106467599aeba9",
        "name": "",
        "func": "msg.payload = msg.payload[0][\"COUNT(*)\"]\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 500,
        "wires": [
            [
                "9f87dd9ce3b0afb0"
            ]
        ]
    },
    {
        "id": "9f87dd9ce3b0afb0",
        "type": "websocket out",
        "z": "da106467599aeba9",
        "name": "ContadorCajasManuales",
        "server": "bae194823201145d",
        "client": "",
        "x": 790,
        "y": 560,
        "wires": []
    },
    {
        "id": "7b635f400edc5f83",
        "type": "catch",
        "z": "da106467599aeba9",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 160,
        "y": 1040,
        "wires": [
            [
                "4d769e6010f496d0"
            ]
        ]
    },
    {
        "id": "4d769e6010f496d0",
        "type": "function",
        "z": "da106467599aeba9",
        "name": "Error Handler",
        "func": "node.warn(`ERROR NO CONTROLADO >  ${env.get(\"NAME\")} > ${JSON.stringify(msg)}`)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 1040,
        "wires": [
            []
        ]
    },
    {
        "id": "1f63130.cdb69ed",
        "type": "function",
        "z": "495668b9.69db98",
        "name": "Rename variables",
        "func": "msg.payload = { \n    'ON_OFF': msg.payload[\"DATABASE.ON_OFF_ARM\"],\n    'SPEED': msg.payload[\"DATABASE.SPEED_NAILS_MINUTE\"],\n    'UNIT_PRODUCTION': msg.payload[\"DATABASE.NAIL_PRODUCTION\"],\n    'PACK_PRODUCTION': msg.payload[\"DATABASE.BOX_PRODUCTION\"],\n    'PACK_COMPLETED': msg.payload[\"DATABASE.BOX_COMPLETED\"],\n    'COMM_COUNTER': msg.payload[\"DATABASE.COMM_COUNTER_EQ\"],\n    'BATCH_COMPLETED': msg.payload[\"DATABASE.BATCH_COMPLETE\"],\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 100,
        "wires": [
            [
                "2ffb952c.5dfe8a"
            ]
        ]
    },
    {
        "id": "a05a6c5e.2709c",
        "type": "msg-speed",
        "z": "495668b9.69db98",
        "name": "No Signal Robot",
        "frequency": "min",
        "interval": "5",
        "estimation": true,
        "ignore": false,
        "pauseAtStartup": false,
        "topicDependent": false,
        "x": 440,
        "y": 140,
        "wires": [
            [
                "f81c5a46.497e08"
            ],
            []
        ]
    },
    {
        "id": "f81c5a46.497e08",
        "type": "switch",
        "z": "495668b9.69db98",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 1,
        "x": 590,
        "y": 140,
        "wires": [
            [
                "b94a2fc2.5f215"
            ]
        ]
    },
    {
        "id": "b94a2fc2.5f215",
        "type": "function",
        "z": "495668b9.69db98",
        "name": "NoSignalMessage",
        "func": "msg.payload = { \n    'ON_OFF': false,\n    'SPEED': 0\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 140,
        "wires": [
            [
                "612aa841.98cfd8"
            ]
        ]
    },
    {
        "id": "612aa841.98cfd8",
        "type": "delay",
        "z": "495668b9.69db98",
        "name": "",
        "pauseType": "rate",
        "timeout": "1",
        "timeoutUnits": "minutes",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "outputs": 1,
        "x": 930,
        "y": 140,
        "wires": [
            [
                "2ffb952c.5dfe8a"
            ]
        ]
    },
    {
        "id": "907b9c90.a672d",
        "type": "link out",
        "z": "495668b9.69db98",
        "name": "",
        "links": [
            "dc450116d5dfaad8",
            "ba473078.32e43",
            "d9109672.cc67c8",
            "9c8548f0.a9f468",
            "cffe3d67.01715",
            "3832c20e.1c783e"
        ],
        "x": 1315,
        "y": 140,
        "wires": []
    },
    {
        "id": "b01ee0cc.5a619",
        "type": "eth-ip in",
        "z": "495668b9.69db98",
        "d": true,
        "endpoint": "a788790a5efc8671",
        "mode": "all",
        "variable": "",
        "program": "",
        "name": "OMRON",
        "x": 280,
        "y": 100,
        "wires": [
            [
                "a2318255.129f1",
                "a05a6c5e.2709c"
            ]
        ]
    },
    {
        "id": "afff8e17.7e9af",
        "type": "eth-ip in",
        "z": "495668b9.69db98",
        "d": true,
        "endpoint": "81f6431d.47b76",
        "mode": "all",
        "variable": "",
        "program": "",
        "name": "OMRON 2",
        "x": 280,
        "y": 220,
        "wires": [
            [
                "c2c1f830.f0a998",
                "a2fd23a.0f26ee"
            ]
        ]
    },
    {
        "id": "99477869.7b7a48",
        "type": "function",
        "z": "495668b9.69db98",
        "name": "Rename variables",
        "func": "msg.payload = { \n    'ON_OFF': msg.payload[\"DATABASE.ON_OFF_ARM\"],\n    'SPEED': msg.payload[\"DATABASE.SPEED_NAILS_MINUTE\"],\n    'UNIT_PRODUCTION': msg.payload[\"DATABASE.NAIL_PRODUCTION\"],\n    'PACK_PRODUCTION': msg.payload[\"DATABASE.BOX_PRODUCTION\"],\n    'PACK_COMPLETED': msg.payload[\"DATABASE.BOX_COMPLETED\"],\n    'COMM_COUNTER': msg.payload[\"DATABASE.COMM_COUNTER_EQ\"],\n    'BATCH_COMPLETED': msg.payload[\"DATABASE.BATCH_COMPLETE\"],\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 220,
        "wires": [
            [
                "9ffcdea8.7c7a7"
            ]
        ]
    },
    {
        "id": "a2fd23a.0f26ee",
        "type": "msg-speed",
        "z": "495668b9.69db98",
        "name": "No Signal Robot",
        "frequency": "min",
        "interval": "5",
        "estimation": true,
        "ignore": false,
        "pauseAtStartup": false,
        "topicDependent": false,
        "x": 440,
        "y": 260,
        "wires": [
            [
                "5ec32b9b.f8cdc4"
            ],
            []
        ]
    },
    {
        "id": "5ec32b9b.f8cdc4",
        "type": "switch",
        "z": "495668b9.69db98",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 1,
        "x": 590,
        "y": 260,
        "wires": [
            [
                "f2a1a54c.a84b68"
            ]
        ]
    },
    {
        "id": "f2a1a54c.a84b68",
        "type": "function",
        "z": "495668b9.69db98",
        "name": "NoSignalMessage",
        "func": "msg.payload = { \n    'ON_OFF': false,\n    'SPEED': 0\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 260,
        "wires": [
            [
                "add66403.bba348"
            ]
        ]
    },
    {
        "id": "add66403.bba348",
        "type": "delay",
        "z": "495668b9.69db98",
        "name": "",
        "pauseType": "rate",
        "timeout": "1",
        "timeoutUnits": "minutes",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "outputs": 1,
        "x": 930,
        "y": 260,
        "wires": [
            [
                "9ffcdea8.7c7a7"
            ]
        ]
    },
    {
        "id": "cc4fe1a9.28dcb",
        "type": "link out",
        "z": "495668b9.69db98",
        "name": "",
        "links": [
            "dc450116d5dfaad8",
            "ba473078.32e43",
            "d9109672.cc67c8",
            "9c8548f0.a9f468",
            "cffe3d67.01715",
            "3832c20e.1c783e"
        ],
        "x": 1315,
        "y": 260,
        "wires": []
    },
    {
        "id": "69c30285.94847c",
        "type": "function",
        "z": "495668b9.69db98",
        "name": "AddInfoFromMaquinasCelda",
        "func": "\nlet maquinas = global.get(\"MaquinasCelda\");\nif (maquinas) {\n    maquinas = maquinas.filter(maquina => maquina.NomTipoMaquina == \"ROBOT\")\n    if (maquinas.length > msg.posicion){\n        msg.idComponente = maquinas[msg.posicion].IdComponente;\n        msg.esMaquina = maquinas[msg.posicion].EsMaquina\n        msg.idOrigen = maquinas[msg.posicion].IdComponente\n        msg.esGralProduccion = maquinas[msg.posicion].EsGralProduccion\n        msg.esGralParos = maquinas[msg.posicion].EsGralParos\n        msg.nomMaquina = maquinas[msg.posicion].NomTipoMaquina;\n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 100,
        "wires": [
            [
                "1f63130.cdb69ed"
            ]
        ]
    },
    {
        "id": "a2318255.129f1",
        "type": "function",
        "z": "495668b9.69db98",
        "name": "FnAsset_1",
        "func": "\nmsg.posicion = 0\nmsg.EsCajaManual = 0;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 100,
        "wires": [
            [
                "69c30285.94847c"
            ]
        ]
    },
    {
        "id": "9ffcdea8.7c7a7",
        "type": "split",
        "z": "495668b9.69db98",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "topic",
        "x": 1110,
        "y": 260,
        "wires": [
            [
                "87894575.008548"
            ]
        ]
    },
    {
        "id": "87894575.008548",
        "type": "rbe",
        "z": "495668b9.69db98",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "x": 1230,
        "y": 260,
        "wires": [
            [
                "cc4fe1a9.28dcb"
            ]
        ]
    },
    {
        "id": "c2c1f830.f0a998",
        "type": "function",
        "z": "495668b9.69db98",
        "name": "FnAsset_2",
        "func": "\nmsg.posicion = 1;\nmsg.EsCajaManual = 0;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 220,
        "wires": [
            [
                "dc8f4ca1.ac73c"
            ]
        ]
    },
    {
        "id": "dc8f4ca1.ac73c",
        "type": "function",
        "z": "495668b9.69db98",
        "name": "AddInfoFromMaquinasCelda",
        "func": "\nlet maquinas = global.get(\"MaquinasCelda\");\nif (maquinas) {\n    maquinas = maquinas.filter(maquina => maquina.NomTipoMaquina == \"ROBOT\")\n    if (maquinas.length > msg.posicion){\n        msg.idComponente = maquinas[msg.posicion].IdComponente;\n        msg.esMaquina = maquinas[msg.posicion].EsMaquina\n        msg.idOrigen = maquinas[msg.posicion].IdComponente\n        msg.esGralProduccion = maquinas[msg.posicion].EsGralProduccion\n        msg.esGralParos = maquinas[msg.posicion].EsGralParos\n        msg.nomMaquina = maquinas[msg.posicion].NomTipoMaquina;\n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 220,
        "wires": [
            [
                "99477869.7b7a48"
            ]
        ]
    },
    {
        "id": "2ffb952c.5dfe8a",
        "type": "split",
        "z": "495668b9.69db98",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "topic",
        "x": 1110,
        "y": 140,
        "wires": [
            [
                "bcc6e764.7b8188"
            ]
        ]
    },
    {
        "id": "bcc6e764.7b8188",
        "type": "rbe",
        "z": "495668b9.69db98",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "x": 1230,
        "y": 140,
        "wires": [
            [
                "907b9c90.a672d"
            ]
        ]
    },
    {
        "id": "ca74f05a.0da42",
        "type": "inject",
        "z": "495668b9.69db98",
        "d": true,
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "30",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"DATABASE.ON_OFF_ARM\":true,\"DATABASE.NAIL_PRODUCTION\":1200,\"DATABASE.SPEED_NAILS_MINUTE\":80,\"DATABASE.BOX_PRODUCTION\":123,\"DATABASE.BOX_COMPLETED\":0}",
        "payloadType": "json",
        "x": 110,
        "y": 140,
        "wires": [
            [
                "a2318255.129f1",
                "a05a6c5e.2709c"
            ]
        ]
    },
    {
        "id": "d70d9922.dd2dc8",
        "type": "inject",
        "z": "495668b9.69db98",
        "d": true,
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "40",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"DATABASE.ON_OFF_ARM\":true,\"DATABASE.NAIL_PRODUCTION\":1000,\"DATABASE.SPEED_NAILS_MINUTE\":90,\"DATABASE.BOX_PRODUCTION\":143,\"DATABASE.BOX_COMPLETED\":1}",
        "payloadType": "json",
        "x": 110,
        "y": 180,
        "wires": [
            [
                "a2318255.129f1",
                "a05a6c5e.2709c"
            ]
        ]
    },
    {
        "id": "36f3f6ac.db98ea",
        "type": "comment",
        "z": "495668b9.69db98",
        "name": "Desarrollo",
        "info": "",
        "x": 100,
        "y": 100,
        "wires": []
    },
    {
        "id": "79302f8e.8c128",
        "type": "s7 in",
        "z": "495668b9.69db98",
        "d": true,
        "endpoint": "29ac71ab.07396e",
        "mode": "all",
        "variable": "",
        "diff": false,
        "name": "Desarrollo 1",
        "x": 250,
        "y": 400,
        "wires": [
            [
                "e5b217fe.06c658",
                "26e800e5.80bad"
            ]
        ]
    },
    {
        "id": "26e800e5.80bad",
        "type": "msg-speed",
        "z": "495668b9.69db98",
        "name": "No Signal Robot",
        "frequency": "min",
        "interval": "5",
        "estimation": true,
        "ignore": false,
        "pauseAtStartup": false,
        "topicDependent": false,
        "x": 440,
        "y": 440,
        "wires": [
            [
                "234c050a.2b163a"
            ],
            []
        ]
    },
    {
        "id": "234c050a.2b163a",
        "type": "switch",
        "z": "495668b9.69db98",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 1,
        "x": 590,
        "y": 440,
        "wires": [
            [
                "dbc2a11.229e16"
            ]
        ]
    },
    {
        "id": "dbc2a11.229e16",
        "type": "function",
        "z": "495668b9.69db98",
        "name": "NoSignalMessage",
        "func": "msg.payload = { \n    'ON_OFF': false,\n    'SPEED': 0\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 440,
        "wires": [
            [
                "fc5eb9a5.60a4c8"
            ]
        ]
    },
    {
        "id": "fc5eb9a5.60a4c8",
        "type": "delay",
        "z": "495668b9.69db98",
        "name": "",
        "pauseType": "rate",
        "timeout": "1",
        "timeoutUnits": "minutes",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "outputs": 1,
        "x": 930,
        "y": 440,
        "wires": [
            [
                "87371435.c115b8"
            ]
        ]
    },
    {
        "id": "cadac6e.ffded38",
        "type": "link out",
        "z": "495668b9.69db98",
        "name": "",
        "links": [
            "dc450116d5dfaad8",
            "ba473078.32e43",
            "d9109672.cc67c8",
            "9c8548f0.a9f468",
            "cffe3d67.01715",
            "3832c20e.1c783e"
        ],
        "x": 1315,
        "y": 440,
        "wires": []
    },
    {
        "id": "1049f98a.6b4116",
        "type": "msg-speed",
        "z": "495668b9.69db98",
        "name": "No Signal Robot",
        "frequency": "min",
        "interval": "5",
        "estimation": true,
        "ignore": false,
        "pauseAtStartup": false,
        "topicDependent": false,
        "x": 440,
        "y": 560,
        "wires": [
            [
                "e92a4842.8b3578"
            ],
            []
        ]
    },
    {
        "id": "e92a4842.8b3578",
        "type": "switch",
        "z": "495668b9.69db98",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 1,
        "x": 590,
        "y": 560,
        "wires": [
            [
                "ff413e0c.46a55"
            ]
        ]
    },
    {
        "id": "ff413e0c.46a55",
        "type": "function",
        "z": "495668b9.69db98",
        "name": "NoSignalMessage",
        "func": "msg.payload = { \n    'ON_OFF': false,\n    'SPEED': 0\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 560,
        "wires": [
            [
                "898f5740.3ec598"
            ]
        ]
    },
    {
        "id": "898f5740.3ec598",
        "type": "delay",
        "z": "495668b9.69db98",
        "name": "",
        "pauseType": "rate",
        "timeout": "1",
        "timeoutUnits": "minutes",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "outputs": 1,
        "x": 930,
        "y": 560,
        "wires": [
            [
                "9891e7a2.c556f8"
            ]
        ]
    },
    {
        "id": "b7490687.d166d8",
        "type": "link out",
        "z": "495668b9.69db98",
        "name": "",
        "links": [
            "dc450116d5dfaad8",
            "ba473078.32e43",
            "d9109672.cc67c8",
            "9c8548f0.a9f468",
            "cffe3d67.01715",
            "3832c20e.1c783e"
        ],
        "x": 1315,
        "y": 560,
        "wires": []
    },
    {
        "id": "ac0d20cc.e0718",
        "type": "function",
        "z": "495668b9.69db98",
        "name": "AddInfoFromMaquinasCelda",
        "func": "\nlet maquinas = global.get(\"MaquinasCelda\");\nif (maquinas) {\n    maquinas = maquinas.filter(maquina => maquina.NomTipoMaquina == \"ROBOT\")\n    if (maquinas.length > msg.posicion){\n        msg.idComponente = maquinas[msg.posicion].IdComponente;\n        msg.esMaquina = maquinas[msg.posicion].EsMaquina\n        msg.idOrigen = maquinas[msg.posicion].IdComponente\n        msg.esGralProduccion = maquinas[msg.posicion].EsGralProduccion\n        msg.esGralParos = maquinas[msg.posicion].EsGralParos\n        msg.nomMaquina = maquinas[msg.posicion].NomTipoMaquina;\n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 400,
        "wires": [
            [
                "87371435.c115b8"
            ]
        ]
    },
    {
        "id": "e5b217fe.06c658",
        "type": "function",
        "z": "495668b9.69db98",
        "name": "FnAsset_1",
        "func": "\nmsg.posicion = 0\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 400,
        "wires": [
            [
                "ac0d20cc.e0718"
            ]
        ]
    },
    {
        "id": "9891e7a2.c556f8",
        "type": "split",
        "z": "495668b9.69db98",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "topic",
        "x": 1110,
        "y": 560,
        "wires": [
            [
                "587f804b.601dc"
            ]
        ]
    },
    {
        "id": "587f804b.601dc",
        "type": "rbe",
        "z": "495668b9.69db98",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "x": 1230,
        "y": 560,
        "wires": [
            [
                "b7490687.d166d8"
            ]
        ]
    },
    {
        "id": "541a6f2a.94b6d",
        "type": "function",
        "z": "495668b9.69db98",
        "name": "FnAsset_2",
        "func": "\nmsg.posicion = 1\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 520,
        "wires": [
            [
                "c989138c.106c8"
            ]
        ]
    },
    {
        "id": "c989138c.106c8",
        "type": "function",
        "z": "495668b9.69db98",
        "name": "AddInfoFromMaquinasCelda",
        "func": "\nlet maquinas = global.get(\"MaquinasCelda\");\nif (maquinas) {\n    maquinas = maquinas.filter(maquina => maquina.NomTipoMaquina == \"ROBOT\")\n    if (maquinas.length > msg.posicion){\n        msg.idComponente = maquinas[msg.posicion].IdComponente;\n        msg.esMaquina = maquinas[msg.posicion].EsMaquina\n        msg.idOrigen = maquinas[msg.posicion].IdComponente\n        msg.esGralProduccion = maquinas[msg.posicion].EsGralProduccion\n        msg.esGralParos = maquinas[msg.posicion].EsGralParos\n        msg.nomMaquina = maquinas[msg.posicion].NomTipoMaquina;\n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 520,
        "wires": [
            [
                "9891e7a2.c556f8"
            ]
        ]
    },
    {
        "id": "87371435.c115b8",
        "type": "split",
        "z": "495668b9.69db98",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "topic",
        "x": 1110,
        "y": 440,
        "wires": [
            [
                "35b3eef6.e5e872"
            ]
        ]
    },
    {
        "id": "35b3eef6.e5e872",
        "type": "rbe",
        "z": "495668b9.69db98",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "x": 1230,
        "y": 440,
        "wires": [
            [
                "cadac6e.ffded38"
            ]
        ]
    },
    {
        "id": "895fea1f.350ce8",
        "type": "s7 in",
        "z": "495668b9.69db98",
        "d": true,
        "endpoint": "29ac71ab.07396e",
        "mode": "all",
        "variable": "",
        "diff": false,
        "name": "Desarrollo 2",
        "x": 250,
        "y": 520,
        "wires": [
            [
                "541a6f2a.94b6d",
                "1049f98a.6b4116"
            ]
        ]
    },
    {
        "id": "b3804ff6.55e0e",
        "type": "comment",
        "z": "495668b9.69db98",
        "name": "Desarrollo",
        "info": "",
        "x": 240,
        "y": 360,
        "wires": []
    },
    {
        "id": "baa8e12f.9574a",
        "type": "comment",
        "z": "495668b9.69db98",
        "name": "Desarrollo",
        "info": "",
        "x": 240,
        "y": 480,
        "wires": []
    },
    {
        "id": "a50b26b7e6d1efae",
        "type": "catch",
        "z": "495668b9.69db98",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 120,
        "y": 680,
        "wires": [
            [
                "9fa3084b0d284ee2"
            ]
        ]
    },
    {
        "id": "9fa3084b0d284ee2",
        "type": "function",
        "z": "495668b9.69db98",
        "name": "Error Handler",
        "func": "node.warn(`ERROR NO CONTROLADO >  ${env.get(\"NAME\")} > ${JSON.stringify(msg)}`)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "af859fae6dce94b0",
        "type": "mqtt out",
        "z": "00b935ea496cf142",
        "d": true,
        "name": "Velocidad",
        "topic": "65/4229/FF-02/VELOCIDAD",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "9ae849ca91d35300",
        "x": 460,
        "y": 280,
        "wires": []
    },
    {
        "id": "d301ebfd3b4dfc46",
        "type": "mqtt out",
        "z": "00b935ea496cf142",
        "d": true,
        "name": "Estatus",
        "topic": "65/4229/FF-02/ESTATUS",
        "qos": "0",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "9ae849ca91d35300",
        "x": 460,
        "y": 340,
        "wires": []
    },
    {
        "id": "0d98cfd4d61b80a9",
        "type": "inject",
        "z": "00b935ea496cf142",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "240",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 110,
        "y": 460,
        "wires": [
            [
                "51a9c46996badf40"
            ]
        ]
    },
    {
        "id": "294ea36c9cfaa235",
        "type": "inject",
        "z": "00b935ea496cf142",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "300",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 110,
        "y": 420,
        "wires": [
            [
                "d301ebfd3b4dfc46",
                "1028730bdb0f622c"
            ]
        ]
    },
    {
        "id": "100f78e652a8d414",
        "type": "inject",
        "z": "00b935ea496cf142",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 280,
        "wires": [
            [
                "d63c97d024ee9cd5"
            ]
        ]
    },
    {
        "id": "d63c97d024ee9cd5",
        "type": "random",
        "z": "00b935ea496cf142",
        "name": "",
        "low": 1,
        "high": "45",
        "inte": "true",
        "property": "payload",
        "x": 300,
        "y": 280,
        "wires": [
            [
                "af859fae6dce94b0",
                "b367f99970467859"
            ]
        ]
    },
    {
        "id": "51a9c46996badf40",
        "type": "delay",
        "z": "00b935ea496cf142",
        "name": "",
        "pauseType": "random",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "5",
        "randomLast": "15",
        "randomUnits": "minutes",
        "drop": false,
        "allowrate": true,
        "outputs": 1,
        "x": 260,
        "y": 460,
        "wires": [
            [
                "d301ebfd3b4dfc46",
                "1028730bdb0f622c"
            ]
        ]
    },
    {
        "id": "912843031c8afd67",
        "type": "mqtt in",
        "z": "00b935ea496cf142",
        "name": "",
        "topic": "",
        "qos": "2",
        "datatype": "auto",
        "broker": "312219315c68d611",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 570,
        "y": 80,
        "wires": [
            [
                "4473435aa9f40d1c"
            ]
        ]
    },
    {
        "id": "b1f14a99f3daf146",
        "type": "inject",
        "z": "00b935ea496cf142",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 110,
        "y": 380,
        "wires": [
            [
                "d301ebfd3b4dfc46",
                "1028730bdb0f622c"
            ]
        ]
    },
    {
        "id": "8b1f34e5c8733e15",
        "type": "inject",
        "z": "00b935ea496cf142",
        "name": "",
        "props": [
            {
                "p": "topic",
                "v": "{\"topic\":\"65/4229/FF-02/+\",\"qos\":2}",
                "vt": "json"
            },
            {
                "p": "action",
                "v": "subscribe",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 130,
        "y": 80,
        "wires": [
            [
                "c7ad1c24c771fd23"
            ]
        ]
    },
    {
        "id": "4473435aa9f40d1c",
        "type": "function",
        "z": "00b935ea496cf142",
        "name": "AddInfoFromMaquinas",
        "func": "const regex = /\\d+\\/\\d+\\/(.*?)\\/([A-Z][A-Z_]+)/;\n\n//Busco la maquina y el topic\nlet matchRegex = msg.topic.match(regex);\n\n//el resultado debe ser un array [claMaquina, topic]\nif (matchRegex !== null && matchRegex.length == 3){\n    \n    msg.idComponente = matchRegex[1];\n    msg.topic = matchRegex[2];\n    \n    \n    let maquinas = global.get(\"MaquinasCelda\");\n    if (maquinas) {\n        maquinas = maquinas.filter(maquina => maquina.IdComponente == msg.idComponente)\n        if (maquinas.length > 0){\n            msg.idComponente = maquinas[0].IdComponente;\n            msg.esMaquina = maquinas[0].EsMaquina\n            msg.idOrigen = maquinas[0].IdComponente\n            msg.esGralProduccion = maquinas[0].EsGralProduccion\n            msg.esGralParos = maquinas[0].EsGralParos\n            msg.nomMaquina = maquinas[0].NomTipoMaquina;\n            \n            msg.payload = Number(msg.payload)\n            return msg;\n        }\n        else{\n            node.log(`No se encontro la maquina ${msg.idComponente} en la variable glogal de maquinas`)\n        }\n    }\n    else{\n        node.log(`No hay variable global de maquinas`)\n    }\n\n}\nelse{\n    node.log(`No se encontro una clave de maquina o una variable en la cadena ${msg.topic}`)\n}\n//return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 80,
        "wires": [
            [
                "48237363ffb707cb",
                "8fef300b7428257c"
            ]
        ]
    },
    {
        "id": "48237363ffb707cb",
        "type": "rbe",
        "z": "00b935ea496cf142",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "x": 970,
        "y": 80,
        "wires": [
            [
                "c213266d0e2430a5"
            ]
        ]
    },
    {
        "id": "c213266d0e2430a5",
        "type": "link out",
        "z": "00b935ea496cf142",
        "name": "",
        "links": [
            "dc450116d5dfaad8",
            "ba473078.32e43",
            "d9109672.cc67c8",
            "9c8548f0.a9f468",
            "cffe3d67.01715",
            "3832c20e.1c783e"
        ],
        "x": 1065,
        "y": 80,
        "wires": []
    },
    {
        "id": "c7ad1c24c771fd23",
        "type": "function",
        "z": "00b935ea496cf142",
        "name": "maquinasToTopics",
        "func": "let claUbicacion = global.get(\"ClaUbicacion\")\nlet claArea = global.get(\"ClaArea\")\nlet maquinas = global.get(\"MaquinasCelda\")\n\n//si estan disponibles todas las variables formo el arrego de topics (subscripciones)\nif (claUbicacion != null && claArea != null && maquinas != null){\n    let topics = maquinas.flatMap((maquina)=>{\n        //Todos los topics deben devolver valores numericos\n        return [{\n                topic: claUbicacion+'/'+claArea+'/'+maquina.IdComponente+'/ON_OFF',\n                qos: 2\n                },{\n                topic: claUbicacion+'/'+claArea+'/'+maquina.IdComponente+'/SPEED',\n                qos: 0\n                },{\n                topic: claUbicacion+'/'+claArea+'/'+maquina.IdComponente+'/UNIT_PRODUCTION',\n                qos: 0\n                },{\n                topic: claUbicacion+'/'+claArea+'/'+maquina.IdComponente+'/PACK_PRODUCTION',\n                qos: 0\n                },{\n                topic: claUbicacion+'/'+claArea+'/'+maquina.IdComponente+'/PACK_COMPLETED',\n                qos: 0\n                }\n        ]\n    })\n    //arreglo de subcripciones\n    /*\n    [{\"topic\":\"65/4229/FF-02/ESTATUS\",\"qos\":2},{\"topic\":\"65/4229/FF-02/VELOCIDAD\",\"qos\":0}]\n    */\n    msg.payload = topics\n    return [msg,null];\n}\nelse{\n    //se llama de nuevo a la funcion mientras no se consiga el arreglo de subscripciones\n    return [null,msg]\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 80,
        "wires": [
            [
                "912843031c8afd67"
            ],
            [
                "36d84969a3be46f1"
            ]
        ]
    },
    {
        "id": "d9ad8363d7ae162c",
        "type": "mqtt in",
        "z": "00b935ea496cf142",
        "d": true,
        "name": "",
        "topic": "65/4229/FF-02/+",
        "qos": "2",
        "datatype": "auto",
        "broker": "312219315c68d611",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 300,
        "y": 580,
        "wires": [
            [
                "2918f5c6782dedb1"
            ]
        ]
    },
    {
        "id": "b367f99970467859",
        "type": "mqtt out",
        "z": "00b935ea496cf142",
        "name": "",
        "topic": "65/4229/FF-02/SPEED",
        "qos": "2",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "312219315c68d611",
        "x": 500,
        "y": 380,
        "wires": []
    },
    {
        "id": "2918f5c6782dedb1",
        "type": "debug",
        "z": "00b935ea496cf142",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 590,
        "y": 580,
        "wires": []
    },
    {
        "id": "36d84969a3be46f1",
        "type": "delay",
        "z": "00b935ea496cf142",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 340,
        "y": 140,
        "wires": [
            [
                "c7ad1c24c771fd23"
            ]
        ]
    },
    {
        "id": "8fef300b7428257c",
        "type": "debug",
        "z": "00b935ea496cf142",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 970,
        "y": 20,
        "wires": []
    },
    {
        "id": "1028730bdb0f622c",
        "type": "mqtt out",
        "z": "00b935ea496cf142",
        "d": true,
        "name": "",
        "topic": "65/4229/FF-02/ON_OFF",
        "qos": "2",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "312219315c68d611",
        "x": 510,
        "y": 440,
        "wires": []
    },
    {
        "id": "823ec4d7.8b59b8",
        "type": "comment",
        "z": "92e911a9.3fbda",
        "name": "PENDIENTE CREAR UN COMPONENTE GLOBAL QUE TENGA LAS SUMAS DE LOS N COMPONENTES",
        "info": "",
        "x": 450,
        "y": 40,
        "wires": []
    },
    {
        "id": "74990047.4cb0f",
        "type": "websocket out",
        "z": "92e911a9.3fbda",
        "name": "WS_CU2_Pag3_ON_OFF",
        "server": "e4608a94.38e1b8",
        "client": "",
        "x": 1290,
        "y": 80,
        "wires": []
    },
    {
        "id": "c3c30cca.1f3b1",
        "type": "websocket out",
        "z": "92e911a9.3fbda",
        "name": "WS_CU2_Pag3_SPEED",
        "server": "5b0b780c.c97958",
        "client": "",
        "x": 1510,
        "y": 251,
        "wires": []
    },
    {
        "id": "50bb92df.dc226c",
        "type": "switch",
        "z": "92e911a9.3fbda",
        "name": "DISTRIBUIDOR",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "ON_OFF",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "SPEED",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "UNIT_PRODUCTION",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "PACK_PRODUCTION",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "PACK_COMPLETED",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "BATCH_COMPLETED",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "STRIP_PRODUCTION",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "STRIP_REJECTED",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "ON_OFF_VISION",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 9,
        "x": 960,
        "y": 360,
        "wires": [
            [
                "74990047.4cb0f",
                "a617fac5.c6ac68"
            ],
            [
                "f18ba42a.7bdfe8",
                "c989e532.433978"
            ],
            [
                "3bc51670.a14f4a",
                "dda4bfe9.f4669"
            ],
            [
                "ead2e513.8ed3e8",
                "94f71d74.436e5"
            ],
            [
                "908be3e973edb7df"
            ],
            [
                "42c40bef.842884",
                "771f1529.3d90bc"
            ],
            [],
            [],
            []
        ]
    },
    {
        "id": "b0a22d8f.56714",
        "type": "websocket out",
        "z": "92e911a9.3fbda",
        "name": "WS_CU2_Pag3_UNIT_PRODUCTION",
        "server": "a0436d66.7ad9",
        "client": "",
        "x": 1550,
        "y": 361,
        "wires": []
    },
    {
        "id": "5d94d91a.5f7e68",
        "type": "websocket out",
        "z": "92e911a9.3fbda",
        "name": "WS_CU2_Pag3_PACK_PRODUCTION",
        "server": "6bed0f86.923c5",
        "client": "",
        "x": 1560,
        "y": 471,
        "wires": []
    },
    {
        "id": "2f09868f.1ad6ea",
        "type": "websocket out",
        "z": "92e911a9.3fbda",
        "name": "WS_CU2_Pag3_PACK_COMPLETED",
        "server": "b7101100.e4b07",
        "client": "",
        "x": 1750,
        "y": 540,
        "wires": []
    },
    {
        "id": "42c40bef.842884",
        "type": "websocket out",
        "z": "92e911a9.3fbda",
        "name": "WS_CU2_Pag3_BATCH_COMPLETED",
        "server": "d396fd97ca5c27bd",
        "client": "",
        "x": 1340,
        "y": 700,
        "wires": []
    },
    {
        "id": "eaef8c75.74ef4",
        "type": "catch",
        "z": "92e911a9.3fbda",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 100,
        "y": 620,
        "wires": [
            [
                "b62be7d5.6cb2d8"
            ]
        ]
    },
    {
        "id": "b62be7d5.6cb2d8",
        "type": "websocket out",
        "z": "92e911a9.3fbda",
        "name": "CU2_Pag3_Error_PLC",
        "server": "8adde370.767ba",
        "client": "",
        "x": 340,
        "y": 620,
        "wires": []
    },
    {
        "id": "71c3237a.06d5bc",
        "type": "s7 out",
        "z": "92e911a9.3fbda",
        "d": true,
        "endpoint": "4a0608b8.235408",
        "variable": "",
        "name": "SIEMENS",
        "x": 820,
        "y": 880,
        "wires": []
    },
    {
        "id": "656c9382.0f620c",
        "type": "http in",
        "z": "92e911a9.3fbda",
        "name": "ON_OFF",
        "url": "/plc/ON_OFF",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 100,
        "y": 900,
        "wires": [
            [
                "e3d598e0.e80a58",
                "a7b0fa11.129898"
            ]
        ]
    },
    {
        "id": "e3d598e0.e80a58",
        "type": "function",
        "z": "92e911a9.3fbda",
        "name": "",
        "func": "\nvar robot = global.get('MaquinasCelda').filter(maquina=>maquina.NomTipoMaquina == 'ROBOT');\n\nif (robot.length>0){\n    msg.robotBrand = robot[0].RobotBrand\n}\n\nmsg.variable = \"ON_OFF\"\nmsg.IdComponente = msg.payload.IdComponente;\nmsg.payload = msg.payload.dato\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 900,
        "wires": [
            [
                "db28ed56.132fb"
            ]
        ]
    },
    {
        "id": "96955028.0c99",
        "type": "http in",
        "z": "92e911a9.3fbda",
        "name": "BATCH_COMPLETED",
        "url": "/plc/BATCH_COMPLETED",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 940,
        "wires": [
            [
                "da28873c.513b38",
                "a7b0fa11.129898"
            ]
        ]
    },
    {
        "id": "da28873c.513b38",
        "type": "function",
        "z": "92e911a9.3fbda",
        "name": "",
        "func": "\nvar robot = global.get('MaquinasCelda').filter(maquina=>maquina.NomTipoMaquina == 'ROBOT');\n\nif (robot.length>0){\n    msg.robotBrand = robot[0].robotBrand\n}\n\nmsg.variable = \"BATCH_COMPLETED\"\nmsg.IdComponente = msg.payload.IdComponente;\nmsg.payload = msg.payload.dato\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 940,
        "wires": [
            [
                "db28ed56.132fb",
                "07407ec46245f60d"
            ]
        ]
    },
    {
        "id": "a7b0fa11.129898",
        "type": "http response",
        "z": "92e911a9.3fbda",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 370,
        "y": 860,
        "wires": []
    },
    {
        "id": "a617fac5.c6ac68",
        "type": "link out",
        "z": "92e911a9.3fbda",
        "name": "OUT_CU2_Pag3_ON_OFF",
        "mode": "link",
        "links": [
            "4e608993.281328"
        ],
        "x": 1195,
        "y": 160,
        "wires": []
    },
    {
        "id": "f18ba42a.7bdfe8",
        "type": "link out",
        "z": "92e911a9.3fbda",
        "name": "OUT_CU2_Pag3_SPEED",
        "mode": "link",
        "links": [],
        "x": 1195,
        "y": 325,
        "wires": []
    },
    {
        "id": "3bc51670.a14f4a",
        "type": "link out",
        "z": "92e911a9.3fbda",
        "name": "OUT_CU2_Pag3_UNIT_PRODUCTION",
        "mode": "link",
        "links": [],
        "x": 1195,
        "y": 420,
        "wires": []
    },
    {
        "id": "ead2e513.8ed3e8",
        "type": "link out",
        "z": "92e911a9.3fbda",
        "name": "CU2_Pag3_PACK_PRODUCTION",
        "mode": "link",
        "links": [],
        "x": 1195,
        "y": 551,
        "wires": []
    },
    {
        "id": "3f8dc717.86ef78",
        "type": "link out",
        "z": "92e911a9.3fbda",
        "name": "WS_CU2_Pag3_PACK_COMPLETED",
        "mode": "link",
        "links": [
            "b2fe7951.806788",
            "e4d04281.57b1c"
        ],
        "x": 1635,
        "y": 640,
        "wires": []
    },
    {
        "id": "771f1529.3d90bc",
        "type": "link out",
        "z": "92e911a9.3fbda",
        "name": "",
        "links": [],
        "x": 1195,
        "y": 748,
        "wires": []
    },
    {
        "id": "b9b44f3c.9b189",
        "type": "function",
        "z": "92e911a9.3fbda",
        "name": "GuardaVariablesPLC",
        "func": "/*NOTA: EL VALOR DE LA VARIABLE GLOBAL SE MANTIENE HASTA REINICIAR NODE-RED*/\n\n/*SI SE CAMBIA EL ID DE UN COMPONENTE, SEGUIRA EXISTIENDO EL ANTERIOR*/\n\nvar objVariablesPLC = flow.get('variablesPlc')||{};\n\n\nif(!msg.idComponente){\n    //cuando idcomponente no este definido no hacer nada para evitar crear valor undefined en el objeto variablesplc\n    return null\n}\n\nif(objVariablesPLC[`${msg.idComponente}`]){\n    objVariablesPLC[`${msg.idComponente}`][msg.topic] = msg.payload;\n    \n    //Si la variable tiene un nombre como ON_OFF_ARM agregar ON_OFF para estandarizar\n    //if((msg.topic).includes(\"ON_OFF\") == 1 ){\n    //    objVariablesPLC[`${msg.idComponente}`][\"ON_OFF\"] = msg.payload;\n    //}\n    \n}else{\n    objVariablesPLC[`${msg.idComponente}`] = { [msg.topic] :  msg.payload };\n    \n    //Si la variable tiene un nombre como ON_OFF_ARM agregar ON_OFF para estandarizar\n    //if((msg.topic).includes(\"ON_OFF\") == 1 ){\n    //    objVariablesPLC[`${msg.idComponente}`][\"ON_OFF\"] = msg.payload;\n    //}\n    \n}\n\n//condicion por si una señal reporta al mismo IdComponente pero no es Gral.\n//por ejemplo que VISION_REJECTED reporte al mismo componente que el BOXCOUNTER\nif(msg.esGralProduccion == 1){\n    \n    objVariablesPLC['general'] = {esGeneral:1}\n    objVariablesPLC[`${msg.idComponente}`]['esGralProduccion'] = msg.esGralProduccion;\n    \n    objVariablesPLC['general']['SPEED'] = \n        Object.values(objVariablesPLC)\n        .filter((x)=>{  if(x.esGralProduccion == 1){return x}})\n        .reduce((sumaVel,{SPEED}) => sumaVel + SPEED,0);\n        \n    objVariablesPLC['general']['UNIT_PRODUCTION'] = \n        Object.values(objVariablesPLC)\n        .filter((x)=>{  if(x.esGralProduccion == 1){return x}})\n        .reduce((sumaVel,{UNIT_PRODUCTION}) => sumaVel + UNIT_PRODUCTION,0);\n        \n    objVariablesPLC['general']['PACK_PRODUCTION'] = \n        Object.values(objVariablesPLC)\n        .filter((x)=>{  if(x.esGralProduccion == 1){return x}})\n        .reduce((sumaVel,{PACK_PRODUCTION}) => sumaVel + PACK_PRODUCTION,0);\n    \n}\n\n\n\n                                                            \n\n\nflow.set('variablesPlc',objVariablesPLC);\nmsg.payload = flow.get('variablesPlc');\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 320,
        "wires": [
            [
                "43f47b19.8cb324"
            ]
        ]
    },
    {
        "id": "a51d33b2.42c7a",
        "type": "function",
        "z": "92e911a9.3fbda",
        "name": "",
        "func": "var objVariables = flow.get('variablesPlc');\nvar nombreVariable = msg.payload.variable;\nvar idcomponente = msg.payload.idComponente;\n\nif(idcomponente){\n    msg.payload.valor= objVariables[`${idcomponente}`][`${nombreVariable}`] ;\n}else{\n    msg.payload=objVariables;\n}\n\n//node.warn(objVariables[`${idcomponente}`][`${nombreVariable}`])\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 1100,
        "wires": [
            [
                "4e3ff257.e6293c"
            ]
        ]
    },
    {
        "id": "d5e92579.5fb458",
        "type": "http in",
        "z": "92e911a9.3fbda",
        "name": "CU2_Pag3_ConsultaVariable",
        "url": "/plc/CU2_Pag3_ConsultaVariable",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 160,
        "y": 1100,
        "wires": [
            [
                "a51d33b2.42c7a"
            ]
        ]
    },
    {
        "id": "4e3ff257.e6293c",
        "type": "http response",
        "z": "92e911a9.3fbda",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 610,
        "y": 1100,
        "wires": []
    },
    {
        "id": "c989e532.433978",
        "type": "change",
        "z": "92e911a9.3fbda",
        "name": "USAR_GENERAL",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "variablesPlc.general.SPEED",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1270,
        "y": 251,
        "wires": [
            [
                "c3c30cca.1f3b1"
            ]
        ]
    },
    {
        "id": "dda4bfe9.f4669",
        "type": "change",
        "z": "92e911a9.3fbda",
        "name": "USAR_GENERAL",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "variablesPlc.general.UNIT_PRODUCTION",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1270,
        "y": 361,
        "wires": [
            [
                "b0a22d8f.56714"
            ]
        ]
    },
    {
        "id": "94f71d74.436e5",
        "type": "change",
        "z": "92e911a9.3fbda",
        "name": "USAR_GENERAL",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "variablesPlc.general.PACK_PRODUCTION",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1270,
        "y": 471,
        "wires": [
            [
                "5d94d91a.5f7e68"
            ]
        ]
    },
    {
        "id": "d61c9e23.b60fa",
        "type": "function",
        "z": "92e911a9.3fbda",
        "name": "",
        "func": "msg.payload = {IdComponente:msg.idComponente,Valor:msg.payload}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 360,
        "wires": [
            [
                "50bb92df.dc226c"
            ]
        ]
    },
    {
        "id": "41911e15.20ac7",
        "type": "FINS Write",
        "z": "92e911a9.3fbda",
        "name": "OMRON",
        "connection": "41cd94e5.1ec25c",
        "addressType": "msg",
        "address": "direccion",
        "dataType": "msg",
        "data": "payload",
        "x": 1040,
        "y": 940,
        "wires": [
            []
        ]
    },
    {
        "id": "db28ed56.132fb",
        "type": "switch",
        "z": "92e911a9.3fbda",
        "name": "DistribuirComponente",
        "property": "robotBrand",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "SIEMENS",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "OMROM",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 600,
        "y": 920,
        "wires": [
            [
                "71c3237a.06d5bc"
            ],
            [
                "1d68adc2.9c7932"
            ]
        ]
    },
    {
        "id": "1d68adc2.9c7932",
        "type": "function",
        "z": "92e911a9.3fbda",
        "name": "traducirDireccion",
        "func": "const ON_OFF = 'W0.0';\nconst BATCH_COMPLETED = 'W1.0';\n\nswitch (msg.variable){\n    case \"ON_OFF\": \n        msg.direccion = ON_OFF;\n        if(msg.payload === true || msg.payload == 1){\n            msg.payload = 1\n        }else{\n            msg.payload = 0\n        }\n    break;\n    case \"BATCH_COMPLETED\": \n        msg.direccion = BATCH_COMPLETED;\n        if(msg.payload === true || msg.payload == 1){\n            msg.payload = 1\n        }else{\n            msg.payload = 0\n        }\n    break;\n}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 940,
        "wires": [
            [
                "41911e15.20ac7"
            ]
        ]
    },
    {
        "id": "c515567d.e95758",
        "type": "switch",
        "z": "92e911a9.3fbda",
        "name": "bit",
        "property": "payload.Valor",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 1510,
        "y": 600,
        "wires": [
            [
                "2f09868f.1ad6ea",
                "3f8dc717.86ef78"
            ],
            [
                "2f09868f.1ad6ea",
                "3f8dc717.86ef78"
            ]
        ]
    },
    {
        "id": "6ccb53c5.cd182c",
        "type": "link in",
        "z": "92e911a9.3fbda",
        "name": "",
        "links": [
            "494107dbbcc4dd7a",
            "e3d6dbf13c047a44"
        ],
        "x": 155,
        "y": 180,
        "wires": [
            [
                "25e93490.2b09cc"
            ]
        ]
    },
    {
        "id": "3832c20e.1c783e",
        "type": "link in",
        "z": "92e911a9.3fbda",
        "name": "",
        "links": [
            "907b9c90.a672d",
            "cc4fe1a9.28dcb",
            "cadac6e.ffded38",
            "b7490687.d166d8",
            "617f298346a2af93"
        ],
        "x": 155,
        "y": 300,
        "wires": [
            [
                "b9b44f3c.9b189",
                "d61c9e23.b60fa"
            ]
        ]
    },
    {
        "id": "43f47b19.8cb324",
        "type": "change",
        "z": "92e911a9.3fbda",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "variablesPlc",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 780,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "3d5c9c4d.c3eb44",
        "type": "inject",
        "z": "92e911a9.3fbda",
        "name": "ON_OFF",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 860,
        "wires": [
            [
                "e3d598e0.e80a58"
            ]
        ]
    },
    {
        "id": "b8527478.c44768",
        "type": "inject",
        "z": "92e911a9.3fbda",
        "name": "BATCH_COMPLETED",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 980,
        "wires": [
            [
                "da28873c.513b38"
            ]
        ]
    },
    {
        "id": "25e93490.2b09cc",
        "type": "switch",
        "z": "92e911a9.3fbda",
        "name": "",
        "property": "nomMaquina",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "BOXCOUNTER",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 310,
        "y": 180,
        "wires": [
            [
                "d61c9e23.b60fa",
                "b9b44f3c.9b189"
            ],
            [
                "d61c9e23.b60fa",
                "b9b44f3c.9b189"
            ]
        ]
    },
    {
        "id": "07407ec46245f60d",
        "type": "link out",
        "z": "92e911a9.3fbda",
        "name": "",
        "links": [
            "1c047a16.957566",
            "2a357a00.6b9866",
            "2b62ead3.8630a6",
            "54107c39.f7be94",
            "57de7cc0.a70104",
            "592facc5.43bc24",
            "b4be447b.c1aba8",
            "b69a9319.3dc5f",
            "c7992061.57093",
            "e662fc25.d4454",
            "f31d3b0c.f6a788",
            "045c2726aed17b71",
            "0c92451a13c1d712",
            "0e48ca4f73afa612",
            "afacdfd837d11996",
            "d5549e37fce484bb",
            "a30ccf282a55eb9c",
            "1bb2db6dab09371a",
            "5e8f76c2e38e8aca",
            "272d91e34659dc16",
            "45e3500a81f5861d",
            "4cf49e39ec76444f"
        ],
        "x": 515,
        "y": 980,
        "wires": []
    },
    {
        "id": "908be3e973edb7df",
        "type": "function",
        "z": "92e911a9.3fbda",
        "name": "ValorConversionBool",
        "func": "if(msg.payload.Valor==1){\n    msg.payload.Valor=true\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1280,
        "y": 600,
        "wires": [
            [
                "c515567d.e95758"
            ]
        ]
    },
    {
        "id": "7763e6673a3a204d",
        "type": "function",
        "z": "92e911a9.3fbda",
        "name": "InicializarObjVariablesPlc",
        "func": "\nlet ObjVar = flow.get('variablesPlc')||{};\n\nlet valor = parseInt(msg.payload)\n\nif(!ObjVar[`${msg.IdComponente}`]){\n    \n    ObjVar[`${msg.IdComponente}`]  = {\"ON_OFF\":valor}\n    node.warn(`Se inivializo IdComponente ${msg.IdComponente}`)\n}\n\n\n\nflow.set('variablesPlc',ObjVar);\nnode.warn('Variables PLC '+flow.get('variablesPlc'))\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 1280,
        "wires": [
            []
        ]
    },
    {
        "id": "a7e7550367056516",
        "type": "link in",
        "z": "92e911a9.3fbda",
        "name": "IN_InicializaObjVarPlc",
        "links": [
            "4c862b16fb86c431",
            "4e2e98778c514d09"
        ],
        "x": 220,
        "y": 1280,
        "wires": [
            [
                "9a5e8246aeeb24ac"
            ]
        ],
        "l": true
    },
    {
        "id": "4d7e2279ece59567",
        "type": "http request",
        "z": "92e911a9.3fbda",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "query",
        "url": "http://localhost:18800/consultaGpio",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 670,
        "y": 1280,
        "wires": [
            [
                "7763e6673a3a204d"
            ]
        ]
    },
    {
        "id": "9a5e8246aeeb24ac",
        "type": "change",
        "z": "92e911a9.3fbda",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload.Gpio",
                "pt": "msg",
                "to": "Gpio",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 460,
        "y": 1280,
        "wires": [
            [
                "4d7e2279ece59567"
            ]
        ]
    },
    {
        "id": "50287d49fa71f476",
        "type": "catch",
        "z": "92e911a9.3fbda",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 100,
        "y": 1460,
        "wires": [
            [
                "7ce08811a141dd8a"
            ]
        ]
    },
    {
        "id": "7ce08811a141dd8a",
        "type": "function",
        "z": "92e911a9.3fbda",
        "name": "Error Handler",
        "func": "node.warn(`ERROR NO CONTROLADO >  ${env.get(\"NAME\")} > ${JSON.stringify(msg)}`)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 1460,
        "wires": [
            []
        ]
    },
    {
        "id": "60165b01.64dab4",
        "type": "inject",
        "z": "20acafb7.9aa8c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": "5",
        "topic": "",
        "payloadType": "date",
        "x": 70,
        "y": 140,
        "wires": [
            [
                "2768d70b.42ada8"
            ]
        ]
    },
    {
        "id": "3708d2fb.5c401e",
        "type": "http in",
        "z": "20acafb7.9aa8c",
        "name": "Usuario",
        "url": "/sqlite/CU155_Pag2_Usuario",
        "method": "put",
        "upload": false,
        "swaggerDoc": "",
        "x": 62,
        "y": 450,
        "wires": [
            [
                "b0dd5fc7.a7436"
            ]
        ]
    },
    {
        "id": "b0dd5fc7.a7436",
        "type": "function",
        "z": "20acafb7.9aa8c",
        "name": "",
        "func": "let idUsuario = msg.payload.datos.IdUsuario;\nlet datos = {};\nlet nombretabla = 'ASWLite_VariablesProduccion';\n\nif(idUsuario == 'off'){\n    idUsuario = null;\n}\n\n    datos['nombretabla'] = nombretabla\n    datos['idUsuario'] = idUsuario;\n\n\n\nmsg.payload =[datos];\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 182,
        "y": 450,
        "wires": [
            [
                "750b22a4.b3746c"
            ]
        ]
    },
    {
        "id": "8b649998.9dc2f8",
        "type": "http response",
        "z": "20acafb7.9aa8c",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 742,
        "y": 450,
        "wires": []
    },
    {
        "id": "750b22a4.b3746c",
        "type": "function",
        "z": "20acafb7.9aa8c",
        "name": "fnParseUpdate_idUsuario",
        "func": "let Datos = msg.payload //[{\"nombretabla\":\"ASWLite_TraOrdenProduccion\",\"ClaUbicacion\":\"68\",\"IdPO\":3,\"IdCelda\":\"1\",\"ClaArticulo\":\"611645\",\"ClaveArticulo\":\"611645\",\"Orden\":\"3\",\"ClaEstatus\":\"1\",\"BajaLogica\":\"0\",\"ClaUsuarioMod\":\"0\",\"NombrePcMod\":\"302NGALAZ\",\"FechaUltimaMod\":\"2020-03-05T01:43:57.713\"}]\nDatos = Datos[0];\nlet NombreTabla = Datos.nombretabla;\nlet CteStr = 'WITH CteTmp (';\nlet CteSelectStr = 'AS ( SELECT '\nlet UpdateStr = `UPDATE ${NombreTabla} SET `;\nlet CamposUpdateStr = '';\nlet WhereUpdateStr = ''\nlet QryFinal = '';\n//LISTA DE CAMPOS DE LA CTE\nObject.keys(Datos).forEach((key,idx) => {\n    if(key != 'nombretabla'){\n        CteStr += key,idx;\n        CteStr += (idx != (Object.keys(Datos).length -1) ) ? ',':') ';\n        CteSelectStr += (typeof(Datos[key]) == 'string') ? `'${Datos[key]}'` : `${Datos[key]}`;\n        CteSelectStr += (idx != (Object.keys(Datos).length -1) ) ? ',':') ';\n    }\n});\n\n//COMPLETAMOS STRING PARA CREAR CTE\nCteStr += CteSelectStr;\n\nObject.keys(Datos).forEach((key,idx) => {\n    let campo = key;\n    let valor = (typeof(Datos[key]) == 'string') ? `'${Datos[key]}'` : Datos[key];\n    if(campo != 'nombretabla'){\n        CamposUpdateStr += `${key} = (SELECT ${campo} FROM CteTmp )`\n        CamposUpdateStr += (idx != (Object.keys(Datos).length -1) ) ? ',':' ';\n    }\n    \n})\n//AGREGAMOS CLAUSULA WHERE AL UPDATE\n//WhereUpdateStr = ` WHERE IdPO = ${Datos[\"IdPO\"]} `\n\n//COMPLETAR UPDATE\nUpdateStr += CamposUpdateStr + WhereUpdateStr;\n\n//COMPLETAR QUERY\nQryFinal = CteStr+UpdateStr;\n\n\n//msg.payload={NombreTabla,CteStr,CteSelectStr,CamposUpdateStr,WhereUpdateStr,UpdateStr}\nmsg.topic=QryFinal;\nreturn msg;\n\n\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 402,
        "y": 450,
        "wires": [
            [
                "d1a99ff1.66554"
            ]
        ],
        "info": "CREA EL UPDATE A EJECUTAR PARA ACTUALIZAR ORDENES DE TRABAJO\n *    ** SOLO PROCESA UN REGISTRO**"
    },
    {
        "id": "d1a99ff1.66554",
        "type": "sqlite",
        "z": "20acafb7.9aa8c",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 602,
        "y": 450,
        "wires": [
            [
                "8b649998.9dc2f8"
            ]
        ]
    },
    {
        "id": "6ee64a90.187f84",
        "type": "comment",
        "z": "20acafb7.9aa8c",
        "name": "IdUsuario: Cambia segun login/logoff en la app",
        "info": "",
        "x": 192,
        "y": 410,
        "wires": []
    },
    {
        "id": "4f77b91a.25eea8",
        "type": "comment",
        "z": "20acafb7.9aa8c",
        "name": "IdPO,ClaArticulo,ClaveArticulo: Se consultan datos de la OP en ClaEstatus = 2",
        "info": "",
        "x": 277,
        "y": 250,
        "wires": []
    },
    {
        "id": "2701c3aa.38aafc",
        "type": "comment",
        "z": "20acafb7.9aa8c",
        "name": "Si no hay registro en tabla de variables crea uno vacio",
        "info": "",
        "x": 200,
        "y": 60,
        "wires": []
    },
    {
        "id": "a3f6dc7a.61e3e",
        "type": "http request",
        "z": "20acafb7.9aa8c",
        "name": "CurrentShift_Sel",
        "method": "GET",
        "ret": "txt",
        "paytoqs": false,
        "url": "http://localhost:18800/sqlite/CU1_Pag2_CurrentShift_Sel",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 267,
        "y": 550,
        "wires": [
            [
                "3009b49d.81cf9c"
            ]
        ]
    },
    {
        "id": "49e770d9.edd81",
        "type": "inject",
        "z": "20acafb7.9aa8c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 97,
        "y": 550,
        "wires": [
            [
                "a3f6dc7a.61e3e"
            ]
        ]
    },
    {
        "id": "6ee62348.8c24ec",
        "type": "comment",
        "z": "20acafb7.9aa8c",
        "name": "FechaAdministrativa:Consulta Fecha Administrativa",
        "info": "",
        "x": 197,
        "y": 590,
        "wires": []
    },
    {
        "id": "3009b49d.81cf9c",
        "type": "function",
        "z": "20acafb7.9aa8c",
        "name": "FormatTurno",
        "func": "msg.payload = JSON.parse(msg.payload);\nlet nombretabla = 'ASWLite_VariablesProduccion';\n\nif(msg.payload.length > 0){\n    \n    global.set(\"ClaTurno\", msg.payload[0].ClaTurno);\n    global.set(\"FechaAdm\", msg.payload[0].fechaAdministrativa);\n    \n    msg.payload = [\n        {'nombretabla':nombretabla,'ClaTurno': msg.payload[0].ClaTurno,'FechaAdministrativa':msg.payload[0].fechaAdministrativa}\n    ]  \n    \n}else{\n    \n    msg.payload = [{'nombretabla':nombretabla,'ClaTurno': null}]\n    global.set(\"ClaTurno\", null)\n}\n\ndelete msg.topic\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 467,
        "y": 550,
        "wires": [
            [
                "942e55af.b908b8",
                "4e6ff29a.5780fc"
            ]
        ]
    },
    {
        "id": "942e55af.b908b8",
        "type": "function",
        "z": "20acafb7.9aa8c",
        "name": "fnParseUpdate",
        "func": "let Datos = msg.payload //[{\"nombretabla\":\"ASWLite_TraOrdenProduccion\",\"ClaUbicacion\":\"68\",\"IdPO\":3,\"IdCelda\":\"1\",\"ClaArticulo\":\"611645\",\"ClaveArticulo\":\"611645\",\"Orden\":\"3\",\"ClaEstatus\":\"1\",\"BajaLogica\":\"0\",\"ClaUsuarioMod\":\"0\",\"NombrePcMod\":\"302NGALAZ\",\"FechaUltimaMod\":\"2020-03-05T01:43:57.713\"}]\nDatos = Datos[0];\nlet NombreTabla = Datos.nombretabla;\nlet CteStr = 'WITH CteTmp (';\nlet CteSelectStr = 'AS ( SELECT '\nlet UpdateStr = `UPDATE ${NombreTabla} SET `;\nlet CamposUpdateStr = '';\nlet WhereUpdateStr = ''\nlet QryFinal = '';\n//LISTA DE CAMPOS DE LA CTE\nObject.keys(Datos).forEach((key,idx) => {\n    if(key != 'nombretabla'){\n        CteStr += key,idx;\n        CteStr += (idx != (Object.keys(Datos).length -1) ) ? ',':') ';\n        CteSelectStr += (typeof(Datos[key]) == 'string') ? `'${Datos[key]}'` : `${Datos[key]}`;\n        CteSelectStr += (idx != (Object.keys(Datos).length -1) ) ? ',':') ';\n    }\n});\n\n//COMPLETAMOS STRING PARA CREAR CTE\nCteStr += CteSelectStr;\n\nObject.keys(Datos).forEach((key,idx) => {\n    let campo = key;\n    let valor = (typeof(Datos[key]) == 'string') ? `'${Datos[key]}'` : Datos[key];\n    if(campo != 'nombretabla'){\n        CamposUpdateStr += `${key} = (SELECT ${campo} FROM CteTmp )`\n        CamposUpdateStr += (idx != (Object.keys(Datos).length -1) ) ? ',':' ';\n    }\n    \n})\n//AGREGAMOS CLAUSULA WHERE AL UPDATE\n//WhereUpdateStr = ` WHERE IdPO = ${Datos[\"IdPO\"]} `\n\n//COMPLETAR UPDATE\nUpdateStr += CamposUpdateStr + WhereUpdateStr;\n\n//COMPLETAR QUERY\nQryFinal = CteStr+UpdateStr;\n\n\n//msg.payload={NombreTabla,CteStr,CteSelectStr,CamposUpdateStr,WhereUpdateStr,UpdateStr}\nmsg.topic=QryFinal;\nreturn msg;\n\n\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 707,
        "y": 550,
        "wires": [
            [
                "7b813045.b20d8"
            ]
        ],
        "info": "CREA EL UPDATE A EJECUTAR PARA ACTUALIZAR ORDENES DE TRABAJO\n *    ** SOLO PROCESA UN REGISTRO**"
    },
    {
        "id": "7b813045.b20d8",
        "type": "sqlite",
        "z": "20acafb7.9aa8c",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 897,
        "y": 550,
        "wires": [
            []
        ]
    },
    {
        "id": "fea84b20.25d478",
        "type": "comment",
        "z": "20acafb7.9aa8c",
        "name": "ClaTurno: Consulta Turno ",
        "info": "",
        "x": 117,
        "y": 510,
        "wires": []
    },
    {
        "id": "41c39f8e.cd469",
        "type": "comment",
        "z": "20acafb7.9aa8c",
        "name": "IdUnidadCaja: Id del detalle de la caja en proceso",
        "info": "",
        "x": 200,
        "y": 884,
        "wires": []
    },
    {
        "id": "5bd700d2.8411d",
        "type": "function",
        "z": "20acafb7.9aa8c",
        "name": "",
        "func": "let idCaja = msg.payload.datos.IdCaja;\nlet idComponente = msg.payload.datos.IdComponente;\n\nlet datos = {};\nlet nombretabla = 'ASWLite_VariablesProduccion';\n\ndatos['nombretabla'] = nombretabla\ndatos['IdUnidadCaja'] = idCaja;\ndatos['IdComponente'] = idComponente;\n\nmsg.payload =[datos];\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 340,
        "y": 920,
        "wires": [
            [
                "8b24db3e.7b9e68"
            ]
        ]
    },
    {
        "id": "8b24db3e.7b9e68",
        "type": "function",
        "z": "20acafb7.9aa8c",
        "name": "fnParseUpdate",
        "func": "let Datos = msg.payload //[{\"nombretabla\":\"ASWLite_TraOrdenProduccion\",\"ClaUbicacion\":\"68\",\"IdPO\":3,\"IdCelda\":\"1\",\"ClaArticulo\":\"611645\",\"ClaveArticulo\":\"611645\",\"Orden\":\"3\",\"ClaEstatus\":\"1\",\"BajaLogica\":\"0\",\"ClaUsuarioMod\":\"0\",\"NombrePcMod\":\"302NGALAZ\",\"FechaUltimaMod\":\"2020-03-05T01:43:57.713\"}]\nDatos = Datos[0];\nlet NombreTabla = Datos.nombretabla;\nlet CteStr = 'WITH CteTmp (';\nlet CteSelectStr = 'AS ( SELECT '\nlet UpdateStr = `UPDATE ${NombreTabla} SET `;\nlet CamposUpdateStr = '';\nlet WhereUpdateStr = ''\nlet QryFinal = '';\n//LISTA DE CAMPOS DE LA CTE\nObject.keys(Datos).forEach((key,idx) => {\n    if(key != 'nombretabla'){\n        CteStr += key,idx;\n        CteStr += (idx != (Object.keys(Datos).length -1) ) ? ',':') ';\n        CteSelectStr += (typeof(Datos[key]) == 'string') ? `'${Datos[key]}'` : `${Datos[key]}`;\n        CteSelectStr += (idx != (Object.keys(Datos).length -1) ) ? ',':') ';\n    }\n});\n\n//COMPLETAMOS STRING PARA CREAR CTE\nCteStr += CteSelectStr;\n\nObject.keys(Datos).forEach((key,idx) => {\n    let campo = key;\n    let valor = (typeof(Datos[key]) == 'string') ? `'${Datos[key]}'` : Datos[key];\n    if(campo != 'nombretabla'){\n        CamposUpdateStr += `${key} = (SELECT ${campo} FROM CteTmp )`\n        CamposUpdateStr += (idx != (Object.keys(Datos).length -1) ) ? ',':' ';\n    }\n    \n})\n//AGREGAMOS CLAUSULA WHERE AL UPDATE\nWhereUpdateStr = ` WHERE IdComponente = ${Datos[\"IdComponente\"]} `\n\n//COMPLETAR UPDATE\nUpdateStr += CamposUpdateStr + WhereUpdateStr;\n\n//COMPLETAR QUERY\nQryFinal = CteStr+UpdateStr;\n\n\n//msg.payload={NombreTabla,CteStr,CteSelectStr,CamposUpdateStr,WhereUpdateStr,UpdateStr}\nmsg.topic=QryFinal;\nreturn msg;\n\n\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 540,
        "y": 924,
        "wires": [
            [
                "c556d02b.85706"
            ]
        ],
        "info": "CREA EL UPDATE A EJECUTAR PARA ACTUALIZAR ORDENES DE TRABAJO\n *    ** SOLO PROCESA UN REGISTRO**"
    },
    {
        "id": "c556d02b.85706",
        "type": "sqlite",
        "z": "20acafb7.9aa8c",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 710,
        "y": 924,
        "wires": [
            [
                "22267856.2eb388"
            ]
        ]
    },
    {
        "id": "ce795b1a.577d18",
        "type": "http in",
        "z": "20acafb7.9aa8c",
        "name": "CU155_Pag2_CajaUnidad",
        "url": "/sqlite/CU155_Pag2_CajaUnidad",
        "method": "put",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 924,
        "wires": [
            [
                "5bd700d2.8411d"
            ]
        ]
    },
    {
        "id": "22267856.2eb388",
        "type": "http response",
        "z": "20acafb7.9aa8c",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 870,
        "y": 924,
        "wires": []
    },
    {
        "id": "a6889afd.d476b8",
        "type": "http in",
        "z": "20acafb7.9aa8c",
        "name": "CU155_Pag2_DatosOp",
        "url": "/sqlite/CU155_Pag2_DatosOp",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 107,
        "y": 290,
        "wires": [
            [
                "2e84c2d5.c9b4ae"
            ]
        ]
    },
    {
        "id": "56424083.44826",
        "type": "http response",
        "z": "20acafb7.9aa8c",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1557,
        "y": 290,
        "wires": []
    },
    {
        "id": "d49560a5.3571a",
        "type": "switch",
        "z": "20acafb7.9aa8c",
        "name": "",
        "property": "req",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1437,
        "y": 290,
        "wires": [
            [
                "56424083.44826"
            ]
        ],
        "info": "IDENTIFICAR ORIGEN DE LA EJECUCION PARA DETERMINAR SI ENVIAR RESPUESTA HTTP"
    },
    {
        "id": "b8bff7cd.2708c8",
        "type": "comment",
        "z": "20acafb7.9aa8c",
        "name": "CU162_Pag1_PROCESAR FIN DE CAJA",
        "info": "este proceso debe monitoriar el fin de caja, llenar los datos de finalizacion de la caja actual y actualizar las ordenes producidas y pendientes, y si la orden sigue en proceso se carga la nueva caja en el registro de la misma, si esta terminada se carga a la orden con estatus 2 abriendo el registro de la primera caja y se envia el fin de batch, se debe actualizar la tabla de variables con la caja nueva (y la op obvi), si tiene materia prima se debe descontar lo consumido. tomar en cuenta que la maquina se dtiene al menos 30 minutos para el change over si la ultima aja no se termino no se cuenta.",
        "x": 180,
        "y": 1004,
        "wires": []
    },
    {
        "id": "b2fe7951.806788",
        "type": "link in",
        "z": "20acafb7.9aa8c",
        "name": "Link_Pack_Completed",
        "links": [
            "3f8dc717.86ef78"
        ],
        "x": 135,
        "y": 1044,
        "wires": [
            [
                "c54f6b72.4eab98",
                "c132574fa53e30f9"
            ]
        ],
        "info": "Conectado a la salida del plc fin de caja"
    },
    {
        "id": "a3b9edd1.afff4",
        "type": "http in",
        "z": "20acafb7.9aa8c",
        "name": "CU155_Pag2_DatosOp_Componente",
        "url": "/sqlite/CU155_Pag2_DatosOp_Componente",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 157,
        "y": 370,
        "wires": [
            [
                "945e9fc6.f3aef"
            ]
        ]
    },
    {
        "id": "945e9fc6.f3aef",
        "type": "function",
        "z": "20acafb7.9aa8c",
        "name": "",
        "func": "msg.IdComponente = msg.payload.IdComponente\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 377,
        "y": 370,
        "wires": [
            [
                "2db01035.8143d"
            ]
        ]
    },
    {
        "id": "2db01035.8143d",
        "type": "http request",
        "z": "20acafb7.9aa8c",
        "name": "CurrentProductionOrder_Sel",
        "method": "GET",
        "ret": "txt",
        "paytoqs": false,
        "url": "http://localhost:18800/sqlite/CU151_Pag1_CurrentProductionOrder_Sel",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 567,
        "y": 370,
        "wires": [
            [
                "6423adbc.36d9b4"
            ]
        ]
    },
    {
        "id": "6423adbc.36d9b4",
        "type": "function",
        "z": "20acafb7.9aa8c",
        "name": "",
        "func": "msg.payload = JSON.parse(msg.payload);\nif(msg.payload.length > 0){\n    msg.payload = [\n        {'IdPO': msg.payload[0].IdPO,\n         'ClaArticulo': msg.payload[0].ClaArticulo,\n         'ClaveArticulo': msg.payload[0].ClaveArticulo,\n         'UnidadesProgramadas':msg.payload[0].UnidadesProgramadas,\n         'IdUnidadCaja': null,\n         'IdComponente': msg.IdComponente\n        }\n    ]  \n    msg.ClaArticulo = msg.payload[0].ClaArticulo\n}\n            \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 757,
        "y": 370,
        "wires": [
            [
                "ae1f7d4d.fe808"
            ]
        ]
    },
    {
        "id": "63ecbc55.9a5d54",
        "type": "function",
        "z": "20acafb7.9aa8c",
        "name": "fnPreparaDatos",
        "func": "let datos = {};\nlet nombretabla = 'ASWLite_VariablesProduccion';\nif (msg.payload.length > 0){\n    \n    datos['nombretabla'] = nombretabla\n     datos['CajasXHora'] = msg.CajasXHora\n    Object.assign(datos, msg.payload[0]);\n}\n\n\nmsg.payload = [datos];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1167,
        "y": 370,
        "wires": [
            [
                "17025a22.838e06"
            ]
        ]
    },
    {
        "id": "17025a22.838e06",
        "type": "function",
        "z": "20acafb7.9aa8c",
        "name": "fnParseUpdate",
        "func": "let Datos = msg.payload //[{\"nombretabla\":\"ASWLite_TraOrdenProduccion\",\"ClaUbicacion\":\"68\",\"IdPO\":3,\"IdCelda\":\"1\",\"ClaArticulo\":\"611645\",\"ClaveArticulo\":\"611645\",\"Orden\":\"3\",\"ClaEstatus\":\"1\",\"BajaLogica\":\"0\",\"ClaUsuarioMod\":\"0\",\"NombrePcMod\":\"302NGALAZ\",\"FechaUltimaMod\":\"2020-03-05T01:43:57.713\"}]\nDatos = Datos[0];\nlet NombreTabla = Datos.nombretabla;\nlet CteStr = 'WITH CteTmp (';\nlet CteSelectStr = 'AS ( SELECT '\nlet UpdateStr = `UPDATE ${NombreTabla} SET `;\nlet CamposUpdateStr = '';\nlet WhereUpdateStr = ''\nlet QryFinal = '';\n//LISTA DE CAMPOS DE LA CTE\nObject.keys(Datos).forEach((key,idx) => {\n    if(key != 'nombretabla'){\n        CteStr += key,idx;\n        CteStr += (idx != (Object.keys(Datos).length -1) ) ? ',':') ';\n        CteSelectStr += (typeof(Datos[key]) == 'string') ? `'${Datos[key]}'` : `${Datos[key]}`;\n        CteSelectStr += (idx != (Object.keys(Datos).length -1) ) ? ',':') ';\n    }\n});\n\n//COMPLETAMOS STRING PARA CREAR CTE\nCteStr += CteSelectStr;\n\nObject.keys(Datos).forEach((key,idx) => {\n    let campo = key;\n    let valor = (typeof(Datos[key]) == 'string') ? `'${Datos[key]}'` : Datos[key];\n    if(campo != 'nombretabla'){\n        CamposUpdateStr += `${key} = (SELECT ${campo} FROM CteTmp )`\n        CamposUpdateStr += (idx != (Object.keys(Datos).length -1) ) ? ',':' ';\n    }\n    \n})\n//AGREGAMOS CLAUSULA WHERE AL UPDATE\nWhereUpdateStr = ` WHERE IdComponente = ${Datos[\"IdComponente\"]} `\n\n//COMPLETAR UPDATE\nUpdateStr += CamposUpdateStr + WhereUpdateStr;\n\n//COMPLETAR QUERY\nQryFinal = CteStr+UpdateStr;\n\n\n//msg.payload={NombreTabla,CteStr,CteSelectStr,CamposUpdateStr,WhereUpdateStr,UpdateStr}\nmsg.topic=QryFinal;\nreturn msg;\n\n\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1367,
        "y": 370,
        "wires": [
            [
                "b11abb8c.37b458"
            ]
        ],
        "info": "CREA EL UPDATE A EJECUTAR PARA ACTUALIZAR ORDENES DE TRABAJO\n *    ** SOLO PROCESA UN REGISTRO**"
    },
    {
        "id": "b11abb8c.37b458",
        "type": "sqlite",
        "z": "20acafb7.9aa8c",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 1537,
        "y": 370,
        "wires": [
            [
                "c8f128de.0a4378"
            ]
        ]
    },
    {
        "id": "c8f128de.0a4378",
        "type": "switch",
        "z": "20acafb7.9aa8c",
        "name": "",
        "property": "req",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1657,
        "y": 370,
        "wires": [
            [
                "eb1f9325.fd59d"
            ]
        ],
        "info": "IDENTIFICAR ORIGEN DE LA EJECUCION PARA DETERMINAR SI ENVIAR RESPUESTA HTTP"
    },
    {
        "id": "eb1f9325.fd59d",
        "type": "http response",
        "z": "20acafb7.9aa8c",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1777,
        "y": 370,
        "wires": []
    },
    {
        "id": "cf91f3d9.2f21e",
        "type": "comment",
        "z": "20acafb7.9aa8c",
        "name": "Actualiza datos de la OP del componente especificado",
        "info": "",
        "x": 207,
        "y": 330,
        "wires": []
    },
    {
        "id": "eeeda62.90a6258",
        "type": "comment",
        "z": "20acafb7.9aa8c",
        "name": "CU201_Pag1_BitacoraParos",
        "info": "downtimes log (Registro bitacora de paro) - Registro de la informacion del paro inicio, fin, duracion, al terminar el paro se debe evaluar si supero el setpoint de microparo, si lo supero se registra la duracion y se manda llamar el proceso de identificacion de paros, Registrar paro por componente",
        "x": 140,
        "y": 1204,
        "wires": []
    },
    {
        "id": "4e608993.281328",
        "type": "link in",
        "z": "20acafb7.9aa8c",
        "name": "In_CU201_Pag1_BitacoraParos",
        "links": [
            "a617fac5.c6ac68",
            "aff7511b.080fc",
            "b47519fe.d86108",
            "2c5f37a37b35922b"
        ],
        "x": 135,
        "y": 1264,
        "wires": [
            [
                "fd57d505.48b8e8"
            ]
        ]
    },
    {
        "id": "fd57d505.48b8e8",
        "type": "subflow:c8128109.41391",
        "z": "20acafb7.9aa8c",
        "name": "CU201_Pag1_BitacoraParos",
        "env": [],
        "x": 320,
        "y": 1260,
        "wires": [
            [
                "f0b51298.fb154",
                "c3325322.fd0d4",
                "fb3a09a2.f05ca8",
                "11f8c4bff5ad353f"
            ]
        ]
    },
    {
        "id": "4e6ff29a.5780fc",
        "type": "rbe",
        "z": "20acafb7.9aa8c",
        "name": "DetectaCambioTurno",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "property": "payload",
        "x": 647,
        "y": 590,
        "wires": [
            [
                "7c90d645.09e578",
                "ee6851ac30a4d8cf"
            ]
        ]
    },
    {
        "id": "7c90d645.09e578",
        "type": "link out",
        "z": "20acafb7.9aa8c",
        "name": "DetectaCambioTurno",
        "links": [
            "dc450caa.2b077",
            "db304468260bcce4"
        ],
        "x": 995,
        "y": 589,
        "wires": []
    },
    {
        "id": "c54f6b72.4eab98",
        "type": "subflow:3ce020fc.06235",
        "z": "20acafb7.9aa8c",
        "name": "",
        "env": [],
        "x": 370,
        "y": 1044,
        "wires": [
            [
                "aee4c67a.57f378",
                "3b95872c042a1be2"
            ]
        ]
    },
    {
        "id": "ae1f7d4d.fe808",
        "type": "subflow:39e21cf9.935554",
        "z": "20acafb7.9aa8c",
        "name": "",
        "env": [],
        "x": 947,
        "y": 370,
        "wires": [
            [
                "63ecbc55.9a5d54"
            ]
        ]
    },
    {
        "id": "5a194ffe.7836b",
        "type": "comment",
        "z": "20acafb7.9aa8c",
        "name": "CU164_Pag1_CalculaOEE",
        "info": "",
        "x": 121,
        "y": 1340,
        "wires": []
    },
    {
        "id": "f0ff6086.06db8",
        "type": "link in",
        "z": "20acafb7.9aa8c",
        "name": "",
        "links": [],
        "x": 115,
        "y": 1380,
        "wires": [
            [
                "a980431c.61bd4"
            ]
        ]
    },
    {
        "id": "a980431c.61bd4",
        "type": "subflow:7d171618.276858",
        "z": "20acafb7.9aa8c",
        "name": "",
        "env": [],
        "x": 321,
        "y": 1400,
        "wires": [
            [
                "27a6cc50.02ffb4"
            ]
        ]
    },
    {
        "id": "f8cb2563.948398",
        "type": "inject",
        "z": "20acafb7.9aa8c",
        "name": "1M",
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 81,
        "y": 1420,
        "wires": [
            [
                "a980431c.61bd4"
            ]
        ]
    },
    {
        "id": "e52cf492.0c47f8",
        "type": "websocket out",
        "z": "20acafb7.9aa8c",
        "name": "CU164_Pag3_Oee",
        "server": "be72ffdf.b3434",
        "client": "",
        "x": 921,
        "y": 1400,
        "wires": []
    },
    {
        "id": "27a6cc50.02ffb4",
        "type": "function",
        "z": "20acafb7.9aa8c",
        "name": "FnObtenerOee",
        "func": "msg.topic=`\nSELECT DisponibilidadAcumulado AS Disponibilidad\n\t,PerformanceAcumulado AS Performance\n\t,CalidadAcumulado AS Calidad\n\t,OeeAcumulado AS Oee\nFROM ASWLite_TraIndicadorOEE\nWHERE IdCelda=${msg.IdCelda} \n\tAND FechaAdmScada='${msg.FechaAdmScada}'\n\tAND ClaTurno=${msg.ClaTurno}\n\tAND Hora='${msg.Hora}' \n`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 551,
        "y": 1400,
        "wires": [
            [
                "6e194b7e.b01114"
            ]
        ]
    },
    {
        "id": "6e194b7e.b01114",
        "type": "sqlite",
        "z": "20acafb7.9aa8c",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 721,
        "y": 1400,
        "wires": [
            [
                "e52cf492.0c47f8"
            ]
        ]
    },
    {
        "id": "2c535ae6.282f46",
        "type": "comment",
        "z": "20acafb7.9aa8c",
        "name": "CU202_Pag1_BitacoraProduccion",
        "info": "",
        "x": 160,
        "y": 1560,
        "wires": []
    },
    {
        "id": "ed95439a.777f6",
        "type": "inject",
        "z": "20acafb7.9aa8c",
        "name": "",
        "repeat": "",
        "crontab": "0 0-23 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 103,
        "y": 1720,
        "wires": [
            [
                "8d24ac7b.b09"
            ]
        ]
    },
    {
        "id": "d7064b1c.121898",
        "type": "subflow:761998e1.8728f8",
        "z": "20acafb7.9aa8c",
        "name": "",
        "env": [],
        "x": 780,
        "y": 1600,
        "wires": [
            []
        ]
    },
    {
        "id": "8d24ac7b.b09",
        "type": "function",
        "z": "20acafb7.9aa8c",
        "name": "qryComponentes",
        "func": "msg.topic = `SELECT IdComponente, 'PORHORA' as Evento \nFROM ASWLite_VariablesProduccion`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 290,
        "y": 1720,
        "wires": [
            [
                "e4e851e1.e451a"
            ]
        ]
    },
    {
        "id": "aee4c67a.57f378",
        "type": "link out",
        "z": "20acafb7.9aa8c",
        "name": "CU162_Pag1_ProcesarFinCaja_Out",
        "links": [
            "8707b53c.737e68",
            "7fb72ace.37c4e4"
        ],
        "x": 562,
        "y": 1030,
        "wires": []
    },
    {
        "id": "fb3a09a2.f05ca8",
        "type": "link out",
        "z": "20acafb7.9aa8c",
        "name": "CU201_Pag1_BitacoraParos_Out",
        "links": [
            "8707b53c.737e68",
            "1510ebf5.40b9c4"
        ],
        "x": 522,
        "y": 1310,
        "wires": []
    },
    {
        "id": "8707b53c.737e68",
        "type": "link in",
        "z": "20acafb7.9aa8c",
        "name": "",
        "links": [
            "aee4c67a.57f378",
            "fb3a09a2.f05ca8"
        ],
        "x": 455,
        "y": 1600,
        "wires": [
            [
                "d7064b1c.121898"
            ]
        ]
    },
    {
        "id": "e4e851e1.e451a",
        "type": "sqlite",
        "z": "20acafb7.9aa8c",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 450,
        "y": 1720,
        "wires": [
            [
                "53d1c5d0.f1c1cc"
            ]
        ]
    },
    {
        "id": "53d1c5d0.f1c1cc",
        "type": "split",
        "z": "20acafb7.9aa8c",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 590,
        "y": 1720,
        "wires": [
            [
                "d7064b1c.121898"
            ]
        ]
    },
    {
        "id": "b5493ae0.5d60d8",
        "type": "link in",
        "z": "20acafb7.9aa8c",
        "name": "",
        "links": [
            "18fcc7eb.4e4248",
            "75642367.ebba2c"
        ],
        "x": 115,
        "y": 1660,
        "wires": [
            [
                "e0a27dea.5bc15"
            ]
        ]
    },
    {
        "id": "e0a27dea.5bc15",
        "type": "function",
        "z": "20acafb7.9aa8c",
        "name": "qryComponentes",
        "func": "msg.topic = `SELECT IdComponente, 'CAMBIOTURNO' as Evento \nFROM ASWLite_VariablesProduccion`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 250,
        "y": 1660,
        "wires": [
            [
                "91eb2256.6b61f"
            ]
        ]
    },
    {
        "id": "91eb2256.6b61f",
        "type": "sqlite",
        "z": "20acafb7.9aa8c",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 410,
        "y": 1660,
        "wires": [
            [
                "9bbd5bd6.4cbc78"
            ]
        ]
    },
    {
        "id": "9bbd5bd6.4cbc78",
        "type": "split",
        "z": "20acafb7.9aa8c",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 550,
        "y": 1660,
        "wires": [
            [
                "d7064b1c.121898"
            ]
        ]
    },
    {
        "id": "eaf6e111.803ff",
        "type": "inject",
        "z": "20acafb7.9aa8c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 90,
        "y": 680,
        "wires": [
            [
                "56be235e.baa2dc"
            ]
        ]
    },
    {
        "id": "56be235e.baa2dc",
        "type": "function",
        "z": "20acafb7.9aa8c",
        "name": "qryObtenerFechaAdm",
        "func": "let ClaDepartamento = global.get('departamento');\n/*\nlet today = new Date();\nlet date = today.getFullYear()+'-'+(today.getMonth()+1)+'-'+today.getDate();\nlet time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\nvar fechaHoraActual  = date+' '+time;\n\nmsg.payload = { \"sp_name\":\"ASWSch.ASW_CU1_Pag4_FechaAdministrativa_Sel\",\n                \"params\":{\"PnClaDepartamento\":ClaDepartamento,\"PdFechaHora\":fechaHoraActual}\n            }*/\n            \nmsg.topic = `WITH CteTurno(Fecha,Hora,ClaDepartamento,NomDepartamento,ClaTurno,NomTurno,Duracion,horaInicioTurno,horaFinTurno,ProduccionDiaInicio,CruceDia) as (\n    SELECT date('now','localtime') as Fecha, --parametro de entrada\n           time('now','localtime') as Hora,--parametro de entrada\n           TURNO.ClaDepartamento,\n           TURNO.NomDepartamento,\n           TURNO.ClaTurno,\n           TURNO.NomTurno,\n           TURNO.Duracion,\n           TURNO.horaInicioTurno,\n           TURNO.horaFinTurno,\n           TURNO.ProduccionDiaInicio,\n           CASE WHEN  TURNO.horaInicioTurno > TURNO.horaFinTurno THEN 1 ELSE 0 END AS CruceDia\n           FROM ASWLite_CatTurno TURNO\n           WHERE CASE WHEN horaInicioTurno > horaFinTurno \n                    THEN TIME('now','localtime') not between horaFinTurno and horaInicioTurno \n                    ELSE TIME('now','localtime') between horaInicioTurno and horafinTurno \n\t             END\n)\nSELECT ClaTurno,\n    NomTurno, \n    NomDepartamento,\n    Duracion,\n    HoraInicioTurno as horaInicio,\n    HoraFinTurno as horaFin,\n    produccionDiaInicio,\n    cruceDia, \n    CASE WHEN CruceDia = 1 \n        THEN \n             CASE WHEN ProduccionDiaInicio = 1\n             THEN/*PRUDUCCION PERTENECE AL DIA DE INICIO DEL TURNO*/\n                 CASE WHEN TIME(Hora) >= TIME(horaInicioTurno) \n                         THEN DATE(Fecha) /*SI HORA ES MAYOR A HORAINICIO -> ESTA EN EL MISMO DIA QUE EMPEZO EL TURNO*/\n                      WHEN TIME(Hora) < TIME(horaFinTurno) \n                          THEN DATE(Fecha,'-1 Day') /*SI HORA ES MENOR A HORAFIN -> ESTA EN EL DIA SIGUIENTE Y HAY QUE RESTAR UN DIA A LA FECHA*/\n                      ELSE NULL\n                 END\n             ELSE\n             /*PRODUCCION PERTENECE AL DIA DE FINALIZACION DEL TURNO*/\n                 CASE WHEN TIME(Hora) >= TIME(horaInicioTurno) \n                          THEN DATE(Fecha,'+1 Day') /*SI HORA ES MAYOR A HORAINICIO -> ES EL MISMO DIA DE INICIO DEL TURNO Y HAY QUE AUMENTAR UN DIA*/\n                      WHEN TIME(Hora) < TIME(horaFinTurno) \n                          THEN DATE(Fecha) /*SI HORA ES MENOR A HORAFIN -> ES EL DIA QUE TERMINA EL TURNO */\n                      ELSE NULL\n                 END\n             END\n         ELSE /*NO HAY CRUCE DE DIA*/ \n             DATE(Fecha)\n     END  AS fechaAdministrativa,\n     DATETIME(Fecha,Hora)  as FechaReal\nFROM CteTurno`\n            \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 287,
        "y": 670,
        "wires": [
            [
                "217eaf89.bea5a"
            ]
        ]
    },
    {
        "id": "906aec58.b4755",
        "type": "rbe",
        "z": "20acafb7.9aa8c",
        "name": "DetectaCambioFecha",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "x": 880,
        "y": 660,
        "wires": [
            [
                "75642367.ebba2c",
                "52d76f8.a544a9"
            ]
        ]
    },
    {
        "id": "75642367.ebba2c",
        "type": "link out",
        "z": "20acafb7.9aa8c",
        "name": "DetectaCambioTurno",
        "links": [
            "dc450caa.2b077",
            "b5493ae0.5d60d8"
        ],
        "x": 1043,
        "y": 670,
        "wires": []
    },
    {
        "id": "217eaf89.bea5a",
        "type": "sqlite",
        "z": "20acafb7.9aa8c",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 484,
        "y": 670,
        "wires": [
            [
                "933d4bb.49b0cb8"
            ]
        ]
    },
    {
        "id": "933d4bb.49b0cb8",
        "type": "function",
        "z": "20acafb7.9aa8c",
        "name": "FnCheckInMsg",
        "func": "//msg.payload = JSON.parse(msg.payload);\nlet nombretabla = 'ASWLite_VariablesProduccion';\nvar d=new Date().toISOString();\nvar date = d.split('T')[0];\n\nif(msg.payload.length > 0){\n    //para checkIn\n    msg.FechaAdmAct =  msg.payload[0].fechaAdministrativa;\n  //  msg.payload[0].fechaAdministrativa = \"2021-11-11\";\n    msg.ClaTurnoAct = msg.payload[0].ClaTurno;\n    //parseUpdate\n    msg.payload = `${msg.payload[0].fechaAdministrativa}`;  \n    global.set(\"FechaAdm\", msg.payload);\n}else{\n    //para checkIn\n    msg.FechaAdmAct =  date;\n    msg.ClaTurnoAct = 0;\n    //parseUpdate\n    msg.payload = date; \n     \n    global.set(\"FechaAdm\", msg.payload);\n}\n\nmsg.topic = '';\nreturn msg ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 674,
        "y": 670,
        "wires": [
            [
                "906aec58.b4755"
            ]
        ]
    },
    {
        "id": "1f75f06f.51c9",
        "type": "function",
        "z": "20acafb7.9aa8c",
        "name": "fnParseUpdate",
        "func": "let Datos = msg.payload //[{\"nombretabla\":\"ASWLite_TraOrdenProduccion\",\"ClaUbicacion\":\"68\",\"IdPO\":3,\"IdCelda\":\"1\",\"ClaArticulo\":\"611645\",\"ClaveArticulo\":\"611645\",\"Orden\":\"3\",\"ClaEstatus\":\"1\",\"BajaLogica\":\"0\",\"ClaUsuarioMod\":\"0\",\"NombrePcMod\":\"302NGALAZ\",\"FechaUltimaMod\":\"2020-03-05T01:43:57.713\"}]\nDatos = Datos[0];\nlet NombreTabla = Datos.nombretabla;\nlet CteStr = 'WITH CteTmp (';\nlet CteSelectStr = 'AS ( SELECT '\nlet UpdateStr = `UPDATE ${NombreTabla} SET `;\nlet CamposUpdateStr = '';\nlet WhereUpdateStr = ''\nlet QryFinal = '';\n//LISTA DE CAMPOS DE LA CTE\nObject.keys(Datos).forEach((key,idx) => {\n    if(key != 'nombretabla'){\n        CteStr += key,idx;\n        CteStr += (idx != (Object.keys(Datos).length -1) ) ? ',':') ';\n        CteSelectStr += (typeof(Datos[key]) == 'string') ? `'${Datos[key]}'` : `${Datos[key]}`;\n        CteSelectStr += (idx != (Object.keys(Datos).length -1) ) ? ',':') ';\n    }\n});\n\n//COMPLETAMOS STRING PARA CREAR CTE\nCteStr += CteSelectStr;\n\nObject.keys(Datos).forEach((key,idx) => {\n    let campo = key;\n    let valor = (typeof(Datos[key]) == 'string') ? `'${Datos[key]}'` : Datos[key];\n    if(campo != 'nombretabla'){\n        if(campo.includes('FechaAdm')){\n        CamposUpdateStr += `${key} = (SELECT DATE(${campo}) FROM CteTmp )`\n        }else{\n        CamposUpdateStr += `${key} = (SELECT ${campo} FROM CteTmp )`\n        }\n        CamposUpdateStr += (idx != (Object.keys(Datos).length -1) ) ? ',':' ';\n    }\n    \n})\n//AGREGAMOS CLAUSULA WHERE AL UPDATE\n//WhereUpdateStr = ` WHERE IdPO = ${Datos[\"IdPO\"]} `\n\n//COMPLETAR UPDATE\nUpdateStr += CamposUpdateStr + WhereUpdateStr;\n\n//COMPLETAR QUERY\nQryFinal = CteStr+UpdateStr;\n\n\n//msg.payload={NombreTabla,CteStr,CteSelectStr,CamposUpdateStr,WhereUpdateStr,UpdateStr}\nmsg.topic=QryFinal;\nreturn msg;\n\n\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 274,
        "y": 765,
        "wires": [
            [
                "618d80f0.35d0b"
            ]
        ],
        "info": "CREA EL UPDATE A EJECUTAR PARA ACTUALIZAR ORDENES DE TRABAJO\n *    ** SOLO PROCESA UN REGISTRO**"
    },
    {
        "id": "618d80f0.35d0b",
        "type": "sqlite",
        "z": "20acafb7.9aa8c",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 484,
        "y": 765,
        "wires": [
            [
                "ed6beda4.c1614"
            ]
        ]
    },
    {
        "id": "52d76f8.a544a9",
        "type": "function",
        "z": "20acafb7.9aa8c",
        "name": "FnGetCheckOutInfo",
        "func": "msg.topic = `\nSELECT FechaAdministrativa, ClaTurno, ClaArticulo\nFROM ASWLite_VariablesProduccion\nLIMIT 1;\n`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 294,
        "y": 724,
        "wires": [
            [
                "b61aee0.777371"
            ]
        ]
    },
    {
        "id": "b61aee0.777371",
        "type": "sqlite",
        "z": "20acafb7.9aa8c",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 484,
        "y": 725,
        "wires": [
            [
                "345d3a74.ef6db6"
            ]
        ]
    },
    {
        "id": "345d3a74.ef6db6",
        "type": "function",
        "z": "20acafb7.9aa8c",
        "name": "FnCheckOutMsg",
        "func": "var d=new Date().toISOString();\nvar date = d.split('T')[0];\nif(msg.payload.length > 0){\n    msg.FechaAdmAnt = msg.payload[0].FechaAdministrativa\n    msg.ClaTurnoAnt = msg.payload[0].ClaTurno\n    msg.ClaArticuloAnt = msg.payload[0].ClaArticulo\n    msg.ClaArticuloAct = msg.payload[0].ClaArticulo\n}else{ \n    msg.FechaAdmAnt = date\n    msg.ClaTurnoAnt = 0\n    msg.ClaArticuloAnt =null\n    msg.ClaArticuloAct = null\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 684,
        "y": 725,
        "wires": [
            [
                "58011903.1743c8"
            ]
        ]
    },
    {
        "id": "ed6beda4.c1614",
        "type": "function",
        "z": "20acafb7.9aa8c",
        "name": "FnMsgToPayload",
        "func": "msg.variablesCheck = {\n    FechaAdmAnt : msg.FechaAdmAnt,\n    ClaTurnoAnt : msg.ClaTurnoAnt,\n    ClaArticuloAnt : msg.ClaArticuloAnt,\n    FechaAdmAct : msg.FechaAdmAct,\n    ClaTurnoAct : msg.ClaTurnoAct,\n    ClaArticuloAct : msg.ClaArticuloAct,\n    Evento : 'CambioTurno'\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 284,
        "y": 831,
        "wires": [
            [
                "e20288ae.ee4ac8"
            ]
        ]
    },
    {
        "id": "58011903.1743c8",
        "type": "function",
        "z": "20acafb7.9aa8c",
        "name": "UpdateVariablesProduccion",
        "func": "//msg.payload = JSON.parse(msg.payload);\nlet nombretabla = 'ASWLite_VariablesProduccion';\n\n msg.payload = [\n        {'nombretabla':nombretabla,'FechaAdministrativa': msg.FechaAdmAct, 'ClaTurno': msg.ClaTurnoAct}\n    ] \n            \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 934,
        "y": 725,
        "wires": [
            [
                "1f75f06f.51c9"
            ]
        ]
    },
    {
        "id": "e20288ae.ee4ac8",
        "type": "subflow:86ffa80d.aef248",
        "z": "20acafb7.9aa8c",
        "name": "",
        "env": [],
        "x": 551,
        "y": 831,
        "wires": []
    },
    {
        "id": "adeffc30.2a717",
        "type": "function",
        "z": "20acafb7.9aa8c",
        "name": "reset",
        "func": "\nmsg.reset=undefined;\ndelete msg.reset; \n            \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 484,
        "y": 865,
        "wires": [
            []
        ]
    },
    {
        "id": "b091edff.48eb5",
        "type": "function",
        "z": "20acafb7.9aa8c",
        "name": "reset",
        "func": "\nmsg.reset=1;\n            \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 644,
        "y": 636,
        "wires": [
            []
        ]
    },
    {
        "id": "7fb72ace.37c4e4",
        "type": "link in",
        "z": "20acafb7.9aa8c",
        "name": "CU167_Pag1_FinCaja",
        "links": [
            "aee4c67a.57f378"
        ],
        "x": 119,
        "y": 1960,
        "wires": [
            [
                "1ae5ea0c.3e43f6"
            ]
        ],
        "l": true
    },
    {
        "id": "1ae5ea0c.3e43f6",
        "type": "subflow:2bb83287.f44a8e",
        "z": "20acafb7.9aa8c",
        "name": "",
        "env": [],
        "x": 409,
        "y": 1960,
        "wires": [
            [
                "615328e321c47b96",
                "74d7125fbe45e1fc"
            ]
        ]
    },
    {
        "id": "b6276879.1396b8",
        "type": "comment",
        "z": "20acafb7.9aa8c",
        "name": "CheckInOut por cambio de producto",
        "info": "Al haber un cambio de PO (producto) generar los datos para la interfaz de ChangeOver\n\n\npayload.Evento\tCAMBIOPO\npayload.IdComponente\t1001\nidComponente \t1001\nIdComponente\t1001\nValor\ttrue\nCambioPO true\nAccion\t2\nIdParo\t23\n",
        "x": 647,
        "y": 1210,
        "wires": []
    },
    {
        "id": "c3325322.fd0d4",
        "type": "subflow:871820c8.db65d",
        "z": "20acafb7.9aa8c",
        "name": "",
        "env": [],
        "x": 627,
        "y": 1264,
        "wires": []
    },
    {
        "id": "d7106f22.af94",
        "type": "comment",
        "z": "20acafb7.9aa8c",
        "name": "CU544_Pag1_AutoJustificaParo",
        "info": "",
        "x": 150,
        "y": 2080,
        "wires": []
    },
    {
        "id": "1510ebf5.40b9c4",
        "type": "link in",
        "z": "20acafb7.9aa8c",
        "name": "",
        "links": [
            "fb3a09a2.f05ca8"
        ],
        "x": 75,
        "y": 2140,
        "wires": [
            [
                "4a72166.37559e8"
            ]
        ]
    },
    {
        "id": "4a72166.37559e8",
        "type": "subflow:c1f3db55.552f78",
        "z": "20acafb7.9aa8c",
        "name": "",
        "env": [],
        "x": 270,
        "y": 2140,
        "wires": [
            [
                "a60b4024.5e758"
            ]
        ]
    },
    {
        "id": "a60b4024.5e758",
        "type": "link out",
        "z": "20acafb7.9aa8c",
        "name": "CU524_Pag1_EnviaSeñal",
        "links": [
            "b5cd4287.cb95b"
        ],
        "x": 610,
        "y": 2140,
        "wires": [],
        "l": true
    },
    {
        "id": "f0b51298.fb154",
        "type": "http response",
        "z": "20acafb7.9aa8c",
        "name": "CU201_Pag1_BitacoraParos_res",
        "statusCode": "",
        "headers": {},
        "x": 647,
        "y": 1170,
        "wires": []
    },
    {
        "id": "2e84c2d5.c9b4ae",
        "type": "subflow:d3a37898.3d3278",
        "z": "20acafb7.9aa8c",
        "name": "",
        "env": [],
        "x": 790,
        "y": 280,
        "wires": [
            [
                "d49560a5.3571a"
            ]
        ]
    },
    {
        "id": "2768d70b.42ada8",
        "type": "subflow:27a291e8.5fa3be",
        "z": "20acafb7.9aa8c",
        "name": "",
        "env": [],
        "x": 320,
        "y": 100,
        "wires": [
            [
                "2e84c2d5.c9b4ae"
            ],
            [
                "2e84c2d5.c9b4ae"
            ]
        ]
    },
    {
        "id": "ee6851ac30a4d8cf",
        "type": "subflow:690d6306.10b5ec",
        "z": "20acafb7.9aa8c",
        "name": "",
        "x": 1140,
        "y": 560,
        "wires": [
            [
                "b47519fe.d86108"
            ]
        ]
    },
    {
        "id": "b47519fe.d86108",
        "type": "link out",
        "z": "20acafb7.9aa8c",
        "name": "",
        "links": [
            "4e608993.281328"
        ],
        "x": 1295,
        "y": 560,
        "wires": []
    },
    {
        "id": "c132574fa53e30f9",
        "type": "debug",
        "z": "20acafb7.9aa8c",
        "name": "ProcesarFin",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 320,
        "y": 1160,
        "wires": []
    },
    {
        "id": "615328e321c47b96",
        "type": "debug",
        "z": "20acafb7.9aa8c",
        "name": "FinCaja",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 1960,
        "wires": []
    },
    {
        "id": "3b95872c042a1be2",
        "type": "function",
        "z": "20acafb7.9aa8c",
        "name": "fhActualizarEstatus",
        "func": "msg.topic = `UPDATE ASWLite_TraOrdenProduccion\nSET ClaEstatusReplica = 1\nWHERE IdPO = (SELECT IdPO FROM ASWLite_VariablesProduccion WHERE IdComponente = ${msg.IdComponente})`\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 1060,
        "wires": [
            [
                "48c3706a95d9ddf7"
            ]
        ]
    },
    {
        "id": "48c3706a95d9ddf7",
        "type": "sqlite",
        "z": "20acafb7.9aa8c",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 990,
        "y": 1060,
        "wires": [
            []
        ]
    },
    {
        "id": "11f8c4bff5ad353f",
        "type": "subflow:518934b7c7fabd9f",
        "z": "20acafb7.9aa8c",
        "name": "",
        "x": 640,
        "y": 1360,
        "wires": []
    },
    {
        "id": "74d7125fbe45e1fc",
        "type": "link out",
        "z": "20acafb7.9aa8c",
        "name": "",
        "links": [
            "db304468260bcce4"
        ],
        "x": 625,
        "y": 1900,
        "wires": []
    },
    {
        "id": "6f41068d46c33bf6",
        "type": "inject",
        "z": "20acafb7.9aa8c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"IdComponente\":704,\"Evento\":\"FINCAJA\"}",
        "payloadType": "json",
        "x": 510,
        "y": 1480,
        "wires": [
            [
                "d7064b1c.121898"
            ]
        ]
    },
    {
        "id": "0fa7a53e89b80f0c",
        "type": "catch",
        "z": "20acafb7.9aa8c",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 100,
        "y": 2380,
        "wires": [
            [
                "dd63acd566e79088"
            ]
        ]
    },
    {
        "id": "dd63acd566e79088",
        "type": "function",
        "z": "20acafb7.9aa8c",
        "name": "Error Handler",
        "func": "node.warn(`ERROR NO CONTROLADO >  ${env.get(\"NAME\")} > ${JSON.stringify(msg)}`)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 2380,
        "wires": [
            []
        ]
    },
    {
        "id": "4564785f.ed9fa8",
        "type": "http in",
        "z": "810e3309.5f05f",
        "name": "CU1_Pag2_LoginUsers_Top3",
        "url": "/sqlite/CU1_Pag2_LoginUsers_Top3",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 138,
        "y": 40,
        "wires": [
            [
                "3cd08dd7.0bbce2"
            ]
        ]
    },
    {
        "id": "3cd08dd7.0bbce2",
        "type": "function",
        "z": "810e3309.5f05f",
        "name": "",
        "func": "let qry = `SELECT idUsuario,LoginUserName \n           FROM ASWLite_TraUsuarios\n           ORDER BY FechaUltimoLogin DESC\n           LIMIT 3`;\n\nmsg[\"topic\"] = qry\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 348,
        "y": 40,
        "wires": [
            [
                "37351a92.aec486"
            ]
        ]
    },
    {
        "id": "604070b5.8ef6a",
        "type": "http response",
        "z": "810e3309.5f05f",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1201,
        "y": 120,
        "wires": []
    },
    {
        "id": "37351a92.aec486",
        "type": "sqlite",
        "z": "810e3309.5f05f",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 831,
        "y": 120,
        "wires": [
            [
                "511d674a.661eb8"
            ]
        ]
    },
    {
        "id": "511d674a.661eb8",
        "type": "switch",
        "z": "810e3309.5f05f",
        "name": "",
        "property": "req",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1001,
        "y": 120,
        "wires": [
            [
                "604070b5.8ef6a"
            ]
        ],
        "info": "IDENTIFICAR ORIGEN DE LA EJECUCION PARA DETERMINAR SI ENVIAR RESPUESTA HTTP"
    },
    {
        "id": "f3879a23.d26f28",
        "type": "catch",
        "z": "810e3309.5f05f",
        "name": "ErrSQLite",
        "scope": [
            "37351a92.aec486"
        ],
        "uncaught": false,
        "x": 891,
        "y": 20,
        "wires": [
            [
                "93548586.810418"
            ]
        ]
    },
    {
        "id": "93548586.810418",
        "type": "function",
        "z": "810e3309.5f05f",
        "name": "",
        "func": "msg.statusCode = 500\nmsg.payload = {Err:\"Error al ejecutar:\" +msg.error.message}\nconsole.log(msg)\n//node.error(\"Error SQLITE\")\n//node.error(msg.error.message)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1021,
        "y": 20,
        "wires": [
            [
                "604070b5.8ef6a"
            ]
        ]
    },
    {
        "id": "1d4ae3e4.a7e0cc",
        "type": "http in",
        "z": "810e3309.5f05f",
        "name": "CU1_Pag2_Users_Sel",
        "url": "/sqlite/CU1_Pag2_Users_Sel",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 118,
        "y": 80,
        "wires": [
            [
                "ef1bb2c.bb9375"
            ]
        ]
    },
    {
        "id": "ef1bb2c.bb9375",
        "type": "function",
        "z": "810e3309.5f05f",
        "name": "",
        "func": "let qry = `SELECT idUsuario,LoginUserName \n           FROM ASWLite_TraUsuarios\n           ORDER BY LoginUserName`;\n\nmsg[\"topic\"] = qry\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 348,
        "y": 80,
        "wires": [
            [
                "37351a92.aec486"
            ]
        ]
    },
    {
        "id": "9a63ef60.fc983",
        "type": "http in",
        "z": "810e3309.5f05f",
        "name": "CU1_Pag2_CurrentShifts_Sel",
        "url": "/sqlite/CU1_Pag2_CurrentShift_Sel",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 138,
        "y": 160,
        "wires": [
            [
                "e53b390a.c719a8"
            ]
        ]
    },
    {
        "id": "e53b390a.c719a8",
        "type": "function",
        "z": "810e3309.5f05f",
        "name": "",
        "func": "let dpto = global.get('departamento');\n\nlet qry = \n`WITH CteTurno(Fecha,Hora,ClaDepartamento,NomDepartamento,ClaTurno,NomTurno,Duracion,horaInicioTurno,horaFinTurno,ProduccionDiaInicio,CruceDia) as (\n    SELECT date('now','localtime') as Fecha, --parametro de entrada\n           time('now','localtime') as Hora,--parametro de entrada\n           TURNO.ClaDepartamento,\n           TURNO.NomDepartamento,\n           TURNO.ClaTurno,\n           TURNO.NomTurno,\n           TURNO.Duracion,\n           TURNO.horaInicioTurno,\n           TURNO.horaFinTurno,\n           TURNO.ProduccionDiaInicio,\n           CASE WHEN  TURNO.horaInicioTurno > TURNO.horaFinTurno THEN 1 ELSE 0 END AS CruceDia\n           FROM ASWLite_CatTurno TURNO\n           WHERE CASE WHEN horaInicioTurno > horaFinTurno \n                    THEN TIME('now','localtime') not between horaFinTurno and horaInicioTurno \n                    ELSE TIME('now','localtime') between horaInicioTurno and horafinTurno \n\t             END\n)\nSELECT ClaTurno,\n    NomTurno, \n    NomDepartamento,\n    Duracion,\n    HoraInicioTurno as horaInicioTurno,\n    HoraFinTurno as horaFinTurno,\n    produccionDiaInicio,\n    cruceDia, \n    CASE WHEN CruceDia = 1 \n        THEN \n             CASE WHEN ProduccionDiaInicio = 1\n             THEN/*PRUDUCCION PERTENECE AL DIA DE INICIO DEL TURNO*/\n                 CASE WHEN TIME(Hora) >= TIME(horaInicioTurno) \n                         THEN DATE(Fecha) /*SI HORA ES MAYOR A HORAINICIO -> ESTA EN EL MISMO DIA QUE EMPEZO EL TURNO*/\n                      WHEN TIME(Hora) < TIME(horaFinTurno) \n                          THEN DATE(Fecha,'-1 Day') /*SI HORA ES MENOR A HORAFIN -> ESTA EN EL DIA SIGUIENTE Y HAY QUE RESTAR UN DIA A LA FECHA*/\n                      ELSE NULL\n                 END\n             ELSE\n             /*PRODUCCION PERTENECE AL DIA DE FINALIZACION DEL TURNO*/\n                 CASE WHEN TIME(Hora) >= TIME(horaInicioTurno) \n                          THEN DATE(Fecha,'+1 Day') /*SI HORA ES MAYOR A HORAINICIO -> ES EL MISMO DIA DE INICIO DEL TURNO Y HAY QUE AUMENTAR UN DIA*/\n                      WHEN TIME(Hora) < TIME(horaFinTurno) \n                          THEN DATE(Fecha) /*SI HORA ES MENOR A HORAFIN -> ES EL DIA QUE TERMINA EL TURNO */\n                      ELSE NULL\n                 END\n             END\n         ELSE /*NO HAY CRUCE DE DIA*/ \n             DATE(Fecha)\n     END  AS fechaAdministrativa,\n     DATETIME(Fecha,Hora)  as FechaReal\nFROM CteTurno`;\n//time('now','localtime')\nmsg[\"topic\"] = qry\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 348,
        "y": 160,
        "wires": [
            [
                "37351a92.aec486"
            ]
        ]
    },
    {
        "id": "4210e31f.f1cc9c",
        "type": "http in",
        "z": "810e3309.5f05f",
        "name": "CU151_Pag1_CurrentProductionOrder_Sel",
        "url": "/sqlite/CU151_Pag1_CurrentProductionOrder_Sel",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 167,
        "y": 351,
        "wires": [
            [
                "e5aeb6ec.6deb38"
            ]
        ]
    },
    {
        "id": "e5aeb6ec.6deb38",
        "type": "function",
        "z": "810e3309.5f05f",
        "name": "CurrentPOSel",
        "func": "let qry = \n`;WITH cte_inprogress as (SELECT PO.ClaUbicacion,\n       PO.IdPO,\n       PO.ClavePO,\n       PO.IdCelda,\n       PO.ClaArticulo,\n       PO.ClaveArticulo,\n       '[ '||PO.ClaveArticulo ||' ] - '||ART.NomArticuloIngles as NomArticulo,\n       PO.ClaGpoCosteo,\n       PO.ClaGrupoProceso,\n       PO.Orden,\n       PO.ClaUnidadProd,\n       PO.UnidadesProgramadas,\n       PO.UnidadesProducidas,\n       PO.PaquetesPorUnidad,\n       PO.PiezasPorUnidad,\n       PO.UnidadesPorSkid,\n       PO.Diametro,\n       PO.DiametroMin,\n       PO.DiametroMax,\n       PO.Longitud,\n       PO.LongitudMin,\n       PO.LongitudMax,\n       PO.Length,\n       PO.Diameter,\n       PO.Point,\n       PO.Shank,\n       PO.ClaEstatus,\n       PO.NotasProduccion,\n       PO.FechaCaptura,\n       PO.FechaInicioReal,\n       PO.FechaInicioAdm,\n       PO.FechaFinReal,\n       PO.FechaFinAdm,\n       PO.BajaLogica,\n       PO.FechaBajaLogica,\n       PO.ClaUsuarioMod,\n       PO.NombrePcMod,\n       PO.FechaUltimaMod\n  FROM ASWLite_TraOrdenProduccion PO\n  LEFT JOIN ASWLite_CatArticuloGeneral ART\n  ON PO.ClaArticulo = ART.ClaArticulo\n  WHERE ClaEstatus = 2),\n cte_ordenes as (SELECT PO.ClaUbicacion,\n       PO.IdPO,\n       PO.ClavePO,\n       PO.IdCelda,\n       PO.ClaArticulo,\n       PO.ClaveArticulo,\n       '[ '||PO.ClaveArticulo ||' ] - '||ART.NomArticuloIngles as NomArticulo,\n       PO.ClaGpoCosteo,\n       PO.ClaGrupoProceso,\n       PO.Orden,\n       PO.ClaUnidadProd,\n       PO.UnidadesProgramadas,\n       PO.UnidadesProducidas,\n       PO.PaquetesPorUnidad,\n       PO.PiezasPorUnidad,\n       PO.UnidadesPorSkid,\n       PO.Diametro,\n       PO.DiametroMin,\n       PO.DiametroMax,\n       PO.Longitud,\n       PO.LongitudMin,\n       PO.LongitudMax,\n       PO.Length,\n       PO.Diameter,\n       PO.Point,\n       PO.Shank,\n       PO.ClaEstatus,\n       PO.NotasProduccion,\n       PO.FechaCaptura,\n       PO.FechaInicioReal,\n       PO.FechaInicioAdm,\n       PO.FechaFinReal,\n       PO.FechaFinAdm,\n       PO.BajaLogica,\n       PO.FechaBajaLogica,\n       PO.ClaUsuarioMod,\n       PO.NombrePcMod,\n       PO.FechaUltimaMod\n  FROM ASWLite_TraOrdenProduccion PO\n  LEFT JOIN ASWLite_CatArticuloGeneral ART\n  ON PO.ClaArticulo = ART.ClaArticulo\n  WHERE claestatus not in (3,4)\n  ORDER BY  orden asc ) \n  SELECT * FROM cte_inprogress\n  UNION ALL \n  SELECT  * FROM cte_ordenes\n  limit 1`;\n\nmsg[\"topic\"] = qry\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 447,
        "y": 351,
        "wires": [
            [
                "37351a92.aec486"
            ]
        ]
    },
    {
        "id": "f2e9e2c5.51758",
        "type": "function",
        "z": "810e3309.5f05f",
        "name": "FnOrdenesLocalesSel",
        "func": "\nmsg.topic = `SELECT idPo,Orden,ClaEstatus,FechaUltimaMod \nFROM ASWLite_TraOrdenProduccion \nWHERE ClaEstatus NOT IN (3,4)\nORDER BY FechaUltimaMod Desc `\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 445,
        "y": 491,
        "wires": [
            [
                "37351a92.aec486"
            ]
        ],
        "info": "REVISAR SI HAY O NO ORDENES DE PRODUCCION EN LA RASPBERRY.\n\n - SI NO HAY SE DEBEN TRAER TODAS LAS ORDENES QUE SE REQUIEREN PRODUCIR Y SE GUARDAN SIN PROCESAR\n   \n - SI EXISTEN SE DEBEN PROCESAR PARA DETERMINAR SI EXISTEN CAMBIOS O NO"
    },
    {
        "id": "3f4d3bc4.39bc14",
        "type": "http in",
        "z": "810e3309.5f05f",
        "name": "CU151_Pag1_OrdenesLocales_Sel",
        "url": "/sqlite/CU151_Pag1_OrdenesLocales_Sel",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 160,
        "y": 491,
        "wires": [
            [
                "f2e9e2c5.51758"
            ]
        ]
    },
    {
        "id": "5ad23531.4f1b0c",
        "type": "http in",
        "z": "810e3309.5f05f",
        "name": "CU151_Pag1_OrdenProduccion_Ins",
        "url": "/sqlite/CU151_Pag1_OrdenProduccion_Ins",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 160,
        "y": 524,
        "wires": [
            [
                "1fa75009.4f797"
            ]
        ]
    },
    {
        "id": "1fa75009.4f797",
        "type": "function",
        "z": "810e3309.5f05f",
        "name": "FnOrdenProduccionIns",
        "func": "msg.payload=[msg.payload.datos]\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 455,
        "y": 524,
        "wires": [
            [
                "c789a59a.6b5b48"
            ]
        ],
        "info": "REVISAR SI HAY O NO ORDENES DE PRODUCCION EN LA RASPBERRY.\n\n - SI NO HAY SE DEBEN TRAER TODAS LAS ORDENES QUE SE REQUIEREN PRODUCIR Y SE GUARDAN SIN PROCESAR\n   \n - SI EXISTEN SE DEBEN PROCESAR PARA DETERMINAR SI EXISTEN CAMBIOS O NO"
    },
    {
        "id": "c789a59a.6b5b48",
        "type": "subflow:1ae9450.7021cbb",
        "z": "810e3309.5f05f",
        "name": "",
        "env": [],
        "x": 507,
        "y": 564,
        "wires": [
            [
                "37351a92.aec486"
            ]
        ]
    },
    {
        "id": "b0f4d306.935c5",
        "type": "http in",
        "z": "810e3309.5f05f",
        "name": "CU151_Pag1_CatArticulo_Ins",
        "url": "/sqlite/CU151_Pag1_CatArticulo_Ins",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 686,
        "wires": [
            [
                "1a1c7abe.557bb5"
            ]
        ]
    },
    {
        "id": "1a1c7abe.557bb5",
        "type": "function",
        "z": "810e3309.5f05f",
        "name": "FnOrdenProduccionIns",
        "func": "msg.payload=[msg.payload.datos]\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 460,
        "y": 686,
        "wires": [
            [
                "862b4876.9076b8"
            ]
        ],
        "info": "REVISAR SI HAY O NO ORDENES DE PRODUCCION EN LA RASPBERRY.\n\n - SI NO HAY SE DEBEN TRAER TODAS LAS ORDENES QUE SE REQUIEREN PRODUCIR Y SE GUARDAN SIN PROCESAR\n   \n - SI EXISTEN SE DEBEN PROCESAR PARA DETERMINAR SI EXISTEN CAMBIOS O NO"
    },
    {
        "id": "f331f171.de747",
        "type": "http in",
        "z": "810e3309.5f05f",
        "name": "CU151_Pag1_CatArticuloCaracteristicas_Ins",
        "url": "/sqlite/CU151_Pag1_CatArticuloCaracteristicas_Ins",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 180,
        "y": 766,
        "wires": [
            [
                "6a05eab0.3f6a34"
            ]
        ]
    },
    {
        "id": "6a05eab0.3f6a34",
        "type": "function",
        "z": "810e3309.5f05f",
        "name": "FnOrdenProduccionIns",
        "func": "msg.payload=[msg.payload.datos]\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 486,
        "y": 766,
        "wires": [
            [
                "d8b7b778.10ab88"
            ]
        ],
        "info": "REVISAR SI HAY O NO ORDENES DE PRODUCCION EN LA RASPBERRY.\n\n - SI NO HAY SE DEBEN TRAER TODAS LAS ORDENES QUE SE REQUIEREN PRODUCIR Y SE GUARDAN SIN PROCESAR\n   \n - SI EXISTEN SE DEBEN PROCESAR PARA DETERMINAR SI EXISTEN CAMBIOS O NO"
    },
    {
        "id": "862b4876.9076b8",
        "type": "function",
        "z": "810e3309.5f05f",
        "name": "fnArticuloInsertNotExist",
        "func": "let valorCampo = null;\nlet insqry ;\nlet result = msg.payload;\ninsqry = `INSERT INTO ${result[0][\"nombretabla\"]} ( `;\n\nObject.keys(result[0]).forEach((key,idx)=>{\n    //SE AGREGA AL QUERY EL LISTADO DE CAMPOS DE LA TABLA\n    if(key !== 'nombretabla'){\n        insqry += (Object.keys(result[0]).length !== (idx+1)) ? `${key},` : `${key} ) `;\n    }\n});\nlet selectStr ='';\nlet criterio = ['ClaArticulo']\nresult.forEach((element,elementIdx) => {\n    selectStr += insqry + 'SELECT '\n    Object.keys(element).forEach((key,idx) => {\n        if(key !== 'nombretabla'){\n            selectStr += (typeof(element[key]) == 'string') ? `'${element[key]}'`: element[key]\n            selectStr += (Object.keys(element).length !== (idx+1)) ? ',':'';\n        }\n        \n    })\n    selectStr += ` WHERE NOT EXISTS (SELECT 1 FROM ${element[\"nombretabla\"]} WHERE ${criterio[0]} = ${element[criterio[0]]} )` ; \n    \n    selectStr += (result.length !== (elementIdx+1)) ? \";\" : \";\" ; \n    \n})\n\n\nmsg.qry = selectStr\nmsg.topic = selectStr\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 487,
        "y": 726,
        "wires": [
            [
                "37351a92.aec486"
            ]
        ]
    },
    {
        "id": "d8b7b778.10ab88",
        "type": "function",
        "z": "810e3309.5f05f",
        "name": "fnCaracteristicaInsertNotExist",
        "func": "let valorCampo = null;\nlet insqry ;\nlet result = msg.payload;\ninsqry = `INSERT INTO ${result[0][\"nombretabla\"]} ( `;\n\nObject.keys(result[0]).forEach((key,idx)=>{\n    //SE AGREGA AL QUERY EL LISTADO DE CAMPOS DE LA TABLA\n    if(key !== 'nombretabla'){\n        insqry += (Object.keys(result[0]).length !== (idx+1)) ? `${key},` : `${key} ) `;\n    }\n});\nlet selectStr ='';\nlet criterio = ['ClaArticulo','ClaCaracteristica']\nresult.forEach((element,elementIdx) => {\n    selectStr += insqry + 'SELECT '\n    Object.keys(element).forEach((key,idx) => {\n        if(key !== 'nombretabla'){\n            selectStr += (typeof(element[key]) == 'string') ? `'${element[key]}'`: element[key]\n            selectStr += (Object.keys(element).length !== (idx+1)) ? ',':'';\n        }\n        \n    })\n    selectStr += ` WHERE NOT EXISTS (SELECT 1 FROM ${element[\"nombretabla\"]} WHERE ${criterio[0]} = ${element[criterio[0]]} AND   ${criterio[1]} = ${element[criterio[1]]} )` ; \n    \n    selectStr += (result.length !== (elementIdx+1)) ? \" \" : \" \" ; \n    \n})\n\n\nmsg.qry = selectStr\nmsg.topic = selectStr\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 506,
        "y": 806,
        "wires": [
            [
                "37351a92.aec486"
            ]
        ]
    },
    {
        "id": "388d2cc0.451084",
        "type": "http in",
        "z": "810e3309.5f05f",
        "name": "CU151_Pag1_OrdenProduccion_Upd",
        "url": "/sqlite/CU151_Pag1_OrdenProduccion_Upd",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 159,
        "y": 604,
        "wires": [
            [
                "d4e89e67.862a9"
            ]
        ]
    },
    {
        "id": "d4e89e67.862a9",
        "type": "function",
        "z": "810e3309.5f05f",
        "name": "FnOrdenProduccionIns",
        "func": "msg.payload=[msg.payload.datos]\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 455,
        "y": 604,
        "wires": [
            [
                "e99f0138.bfe9c"
            ]
        ],
        "info": "REVISAR SI HAY O NO ORDENES DE PRODUCCION EN LA RASPBERRY.\n\n - SI NO HAY SE DEBEN TRAER TODAS LAS ORDENES QUE SE REQUIEREN PRODUCIR Y SE GUARDAN SIN PROCESAR\n   \n - SI EXISTEN SE DEBEN PROCESAR PARA DETERMINAR SI EXISTEN CAMBIOS O NO"
    },
    {
        "id": "e99f0138.bfe9c",
        "type": "function",
        "z": "810e3309.5f05f",
        "name": "fnParseUpdate_CU151.1",
        "func": "let Datos = msg.payload //[{\"nombretabla\":\"ASWLite_TraOrdenProduccion\",\"ClaUbicacion\":\"68\",\"IdPO\":3,\"IdCelda\":\"1\",\"ClaArticulo\":\"611645\",\"ClaveArticulo\":\"611645\",\"Orden\":\"3\",\"ClaEstatus\":\"1\",\"BajaLogica\":\"0\",\"ClaUsuarioMod\":\"0\",\"NombrePcMod\":\"302NGALAZ\",\"FechaUltimaMod\":\"2020-03-05T01:43:57.713\"}]\nDatos = Datos[0];\nlet NombreTabla = Datos.nombretabla;\nlet CteStr = 'WITH CteTmp (';\nlet CteSelectStr = 'AS ( SELECT '\nlet UpdateStr = `UPDATE ${NombreTabla} SET `;\nlet CamposUpdateStr = '';\nlet WhereUpdateStr = ''\nlet QryFinal = '';\n//LISTA DE CAMPOS DE LA CTE\nObject.keys(Datos).forEach((key,idx) => {\n    if(key != 'nombretabla'){\n        CteStr += key,idx;\n        CteStr += (idx != (Object.keys(Datos).length -1) ) ? ',':') ';\n        CteSelectStr += (typeof(Datos[key]) == 'string') ? `'${Datos[key]}'` : `${Datos[key]}`;\n        CteSelectStr += (idx != (Object.keys(Datos).length -1) ) ? ',':') ';\n    }\n});\n\n//COMPLETAMOS STRING PARA CREAR CTE\nCteStr += CteSelectStr;\n\nObject.keys(Datos).forEach((key,idx) => {\n    let campo = key;\n    let valor = (typeof(Datos[key]) == 'string') ? `'${Datos[key]}'` : Datos[key];\n    if(campo != 'nombretabla'){\n        CamposUpdateStr += `${key} = (SELECT ${campo} FROM CteTmp WHERE IdPO = ${Datos[\"IdPO\"]})`\n        CamposUpdateStr += (idx != (Object.keys(Datos).length -1) ) ? ',':' ';\n    }\n    \n})\n//AGREGAMOS CLAUSULA WHERE AL UPDATE\nWhereUpdateStr = ` WHERE IdPO = ${Datos[\"IdPO\"]} `\n\n//COMPLETAR UPDATE\nUpdateStr += CamposUpdateStr + WhereUpdateStr;\n\n//COMPLETAR QUERY\nQryFinal = CteStr+UpdateStr;\n\n\n//msg.payload={NombreTabla,CteStr,CteSelectStr,CamposUpdateStr,WhereUpdateStr,UpdateStr}\nmsg.topic=QryFinal;\nreturn msg;\n\n\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 455,
        "y": 644,
        "wires": [
            [
                "37351a92.aec486"
            ]
        ],
        "info": "CREA EL UPDATE A EJECUTAR PARA ACTUALIZAR ORDENES DE TRABAJO\n *    ** SOLO PROCESA UN REGISTRO**"
    },
    {
        "id": "c2d5e9af.18e578",
        "type": "http in",
        "z": "810e3309.5f05f",
        "name": "CU151_Pag1_ProductionOrderFeatures_Sel",
        "url": "/sqlite/CU151_Pag1_ProductionOrderFeatures_Sel",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 177,
        "y": 391,
        "wires": [
            [
                "1987599d.dbe2d6"
            ]
        ]
    },
    {
        "id": "1987599d.dbe2d6",
        "type": "function",
        "z": "810e3309.5f05f",
        "name": "POFeaturesSel",
        "func": "let IdPO=[msg.payload.IdPO];\n\nlet qry = \n`SELECT F.ClaArticulo,\n       F.ClaPlantilla,\n       F.NomPlantilla,\n       F.NomPlantillaIngles,\n       F.ClaCaracteristica,\n       F.NomCaracteristica,\n       F.NomCaracteristicaIngles,\n       F.NomValorCaract,\n       F.NomValorCaractIngles,\n       F.BajaLogica,\n       F.FechaBajaLogica,\n       F.FechaUltimaMod\n  FROM ASWLite_CatArticuloCaracteristicas F\n  JOIN ASWLite_TraOrdenProduccion PO \n  ON F.ClaArticulo = PO.ClaArticulo\n  WHERE PO.IdPO = ${IdPO};`;\n\nmsg[\"topic\"] = qry\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 447,
        "y": 391,
        "wires": [
            [
                "37351a92.aec486"
            ]
        ]
    },
    {
        "id": "5abb3c79.34e7d4",
        "type": "http in",
        "z": "810e3309.5f05f",
        "name": "CU151_Pag1_ProductionOrderProgress_Sel",
        "url": "/sqlite/CU151_Pag1_ProductionOrderProgress_Sel",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 177,
        "y": 431,
        "wires": [
            [
                "8807ba47.c91bf8"
            ]
        ]
    },
    {
        "id": "8807ba47.c91bf8",
        "type": "function",
        "z": "810e3309.5f05f",
        "name": "POProgressSel",
        "func": "let IdPO=[msg.payload.IdPO];\n\nlet qry = \n`\nSELECT CASE WHEN po.unidadesproducidas <> 0 THEN ROUND((po.unidadesproducidas)/(po.unidadesprogramadas*1.0)*100,2) ELSE 0.0 END   as Progress\nFROM ASWLite_TraOrdenProduccion po\nWHERE po.idpo = ${IdPO}`;\n\nmsg[\"topic\"] = qry\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 447,
        "y": 431,
        "wires": [
            [
                "37351a92.aec486"
            ]
        ]
    },
    {
        "id": "36fee19f.17e40e",
        "type": "http in",
        "z": "810e3309.5f05f",
        "name": "CU1_Pag2_LoginUsers_Upd",
        "url": "/sqlite/CU1_Pag2_LoginUsers_Upd",
        "method": "put",
        "upload": false,
        "swaggerDoc": "",
        "x": 138,
        "y": 120,
        "wires": [
            [
                "e969c4d4.a54db8"
            ]
        ]
    },
    {
        "id": "e969c4d4.a54db8",
        "type": "function",
        "z": "810e3309.5f05f",
        "name": "",
        "func": "let IdUsuario = msg.payload.IdUsuario\n\nlet qry = `UPDATE ASWLite_TraUsuarios\nSET FechaUltimoLogin = TIME('now','localtime') \nWHERE idUsuario = ${IdUsuario}`\n\nmsg[\"topic\"] = qry\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 348,
        "y": 120,
        "wires": [
            [
                "37351a92.aec486"
            ]
        ]
    },
    {
        "id": "4958e8c1.55fbd8",
        "type": "http in",
        "z": "810e3309.5f05f",
        "name": "CU153_Pag1_OrdenesLocales_Sel",
        "url": "/sqlite/CU153_Pag1_OrdenesLocales_Sel",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 160,
        "y": 1577,
        "wires": [
            [
                "4a223430.1bf73c"
            ]
        ]
    },
    {
        "id": "4a223430.1bf73c",
        "type": "function",
        "z": "810e3309.5f05f",
        "name": "FnOrdenesLocalesSel",
        "func": "\nmsg.topic = `SELECT PO.ClaUbicacion,\n       PO.IdPO,\n       PO.ClavePO,\n       PO.IdCelda,\n       PO.ClaArticulo,\n       PO.ClaveArticulo,\n       '[ '||PO.ClaveArticulo ||' ] - '||ART.NomArticuloIngles as NomArticulo,\n       PO.ClaGpoCosteo,\n       PO.ClaGrupoProceso,\n       PO.Orden,\n       PO.ClaUnidadProd,\n       PO.UnidadesProgramadas,\n       PO.UnidadesProgramadas - COALESCE(PO.UnidadesProducidas,0) as UnidadesPendientes,\n       PO.UnidadesProducidas,\n       PO.PaquetesPorUnidad,\n       PO.PiezasPorUnidad,\n       PO.UnidadesPorSkid,\n       PO.Diametro,\n       PO.DiametroMin,\n       PO.DiametroMax,\n       PO.Longitud,\n       PO.LongitudMin,\n       PO.LongitudMax,\n       PO.Length,\n       PO.Diameter,\n       PO.Point,\n       PO.Shank,\n       PO.ClaEstatus,\n       PO.NotasProduccion,\n       PO.FechaCaptura,\n       PO.FechaInicioReal,\n       PO.FechaInicioAdm,\n       PO.FechaFinReal,\n       PO.FechaFinAdm,\n       PO.BajaLogica,\n       PO.FechaBajaLogica,\n       PO.ClaUsuarioMod,\n       PO.NombrePcMod,\n       PO.FechaUltimaMod\n  FROM ASWLite_TraOrdenProduccion PO\n  JOIN ASWLite_CatArticuloGeneral ART\n  ON PO.ClaArticulo = ART.ClaArticulo \n  Where ClaEstatus not in (3,4)\n  ORDER BY Orden ASC;`\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 500,
        "y": 1577,
        "wires": [
            [
                "3d27bc1d.890e64"
            ]
        ],
        "info": "REVISAR SI HAY O NO ORDENES DE PRODUCCION EN LA RASPBERRY.\n\n - SI NO HAY SE DEBEN TRAER TODAS LAS ORDENES QUE SE REQUIEREN PRODUCIR Y SE GUARDAN SIN PROCESAR\n   \n - SI EXISTEN SE DEBEN PROCESAR PARA DETERMINAR SI EXISTEN CAMBIOS O NO"
    },
    {
        "id": "90852564.02aaa8",
        "type": "http in",
        "z": "810e3309.5f05f",
        "name": "CU153_Pag1_OrdenesLocales_Upd",
        "url": "/sqlite/CU153_Pag1_OrdenesLocales_Upd",
        "method": "put",
        "upload": false,
        "swaggerDoc": "",
        "x": 162,
        "y": 1619,
        "wires": [
            [
                "ffd65dee.31d4e"
            ]
        ]
    },
    {
        "id": "ffd65dee.31d4e",
        "type": "function",
        "z": "810e3309.5f05f",
        "name": "fnParseUpdate_CU153.1",
        "func": "let Datos = [msg.payload.datos] \nDatos = Datos[0];\nlet NombreTabla = Datos.nombretabla;\nlet CteStr = 'WITH CteTmp (';\nlet CteSelectStr = 'AS ( SELECT '\nlet UpdateStr = `UPDATE ${NombreTabla} SET `;\nlet CamposUpdateStr = '';\nlet WhereUpdateStr = ''\nlet QryFinal = '';\n//LISTA DE CAMPOS DE LA CTE\nObject.keys(Datos).forEach((key,idx) => {\n    if(key != 'nombretabla'){\n        CteStr += key,idx;\n        CteStr += (idx != (Object.keys(Datos).length -1) ) ? ',':') ';\n        if(typeof(Datos[key]) == 'string' && Datos[key] == 'current'){\n            CteSelectStr += `datetime('now','localtime')`;\n            CteSelectStr += (idx != (Object.keys(Datos).length -1) ) ? ',':') ';\n        }else{\n            CteSelectStr += (typeof(Datos[key]) == 'string') ? `'${Datos[key]}'` : `${Datos[key]}`;\n            CteSelectStr += (idx != (Object.keys(Datos).length -1) ) ? ',':') ';\n        }\n        \n    }\n});\n\n//COMPLETAMOS STRING PARA CREAR CTE\nCteStr += CteSelectStr;\n\nObject.keys(Datos).forEach((key,idx) => {\n    let campo = key;\n    let valor = (typeof(Datos[key]) == 'string') ? `'${Datos[key]}'` : Datos[key];\n    if(campo != 'nombretabla'){\n        CamposUpdateStr += `${key} = (SELECT ${campo} FROM CteTmp WHERE IdPO = ${Datos[\"IdPO\"]})`\n        CamposUpdateStr += (idx != (Object.keys(Datos).length -1) ) ? ',':' ';\n    }\n    \n})\n//AGREGAMOS CLAUSULA WHERE AL UPDATE\nWhereUpdateStr = ` WHERE IdPO = ${Datos[\"IdPO\"]} `\n\n//COMPLETAR UPDATE\nUpdateStr += CamposUpdateStr + WhereUpdateStr;\n\n//COMPLETAR QUERY\nQryFinal = CteStr+UpdateStr;\n\n\n//msg.payload={NombreTabla,CteStr,CteSelectStr,CamposUpdateStr,WhereUpdateStr,UpdateStr}\nmsg.topic=QryFinal;\nreturn msg;\n\n\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 491,
        "y": 1619,
        "wires": [
            [
                "3d27bc1d.890e64"
            ]
        ],
        "info": "CREA EL UPDATE A EJECUTAR PARA ACTUALIZAR ORDENES DE TRABAJO\n *    ** SOLO PROCESA UN REGISTRO**"
    },
    {
        "id": "9b4d836.d09a78",
        "type": "http in",
        "z": "810e3309.5f05f",
        "name": "CU153_Pag1_AvanzarOrdenOp_Upd",
        "url": "/sqlite/CU153_Pag1_AvanzarOrdenOp_Upd",
        "method": "put",
        "upload": false,
        "swaggerDoc": "",
        "x": 172,
        "y": 1659,
        "wires": [
            [
                "2e185ce4.819154"
            ]
        ]
    },
    {
        "id": "2e185ce4.819154",
        "type": "function",
        "z": "810e3309.5f05f",
        "name": "fnAumentarOrdenAll",
        "func": "const qry = `UPDATE ASWLite_TraOrdenProduccion\nSET Orden = orden + 1\nWHERE claEstatus in (1,5)`;\nmsg.topic = qry\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 501,
        "y": 1659,
        "wires": [
            [
                "3d27bc1d.890e64"
            ]
        ]
    },
    {
        "id": "13ab00de.8ffdff",
        "type": "http in",
        "z": "810e3309.5f05f",
        "name": "CU153_Pag1_Supervisores_Sel",
        "url": "/sqlite/CU153_Pag1_Supervisores_Sel",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 152,
        "y": 1699,
        "wires": [
            [
                "8aaf5819.49c598"
            ]
        ]
    },
    {
        "id": "8aaf5819.49c598",
        "type": "function",
        "z": "810e3309.5f05f",
        "name": "FnSupervisoresSel",
        "func": "\nmsg.topic = `SELECT idUsuario,LoginUserName \n           FROM ASWLite_TraUsuarios\n           WHERE supervisor = 1`\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 511,
        "y": 1699,
        "wires": [
            [
                "3d27bc1d.890e64"
            ]
        ],
        "info": "REVISAR SI HAY O NO ORDENES DE PRODUCCION EN LA RASPBERRY.\n\n - SI NO HAY SE DEBEN TRAER TODAS LAS ORDENES QUE SE REQUIEREN PRODUCIR Y SE GUARDAN SIN PROCESAR\n   \n - SI EXISTEN SE DEBEN PROCESAR PARA DETERMINAR SI EXISTEN CAMBIOS O NO"
    },
    {
        "id": "452c497.637f4b8",
        "type": "http in",
        "z": "810e3309.5f05f",
        "name": "CU153_Pag1_OpSiguiente_Sel",
        "url": "/sqlite/CU153_Pag1_OpSiguiente_Sel",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 152,
        "y": 1740,
        "wires": [
            [
                "3d516a17.adecd6"
            ]
        ]
    },
    {
        "id": "3d516a17.adecd6",
        "type": "function",
        "z": "810e3309.5f05f",
        "name": "FnOpSiguienteSel",
        "func": "\nmsg.topic = `SELECT PO.ClaUbicacion,\n       PO.IdPO,\n       PO.ClavePO,\n       PO.IdCelda,\n       PO.ClaArticulo,\n       PO.ClaveArticulo,\n       '[ '||PO.ClaveArticulo ||' ] - '||ART.NomArticuloIngles as NomArticulo,\n       PO.ClaGpoCosteo,\n       PO.ClaGrupoProceso,\n       PO.Orden,\n       PO.ClaUnidadProd,\n       PO.UnidadesProgramadas,\n       PO.UnidadesProducidas,\n       PO.PaquetesPorUnidad,\n       PO.PiezasPorUnidad,\n       PO.UnidadesPorSkid,\n       PO.Diametro,\n       PO.DiametroMin,\n       PO.DiametroMax,\n       PO.Longitud,\n       PO.LongitudMin,\n       PO.LongitudMax,\n       PO.Length,\n       PO.Diameter,\n       PO.Point,\n       PO.Shank,\n       PO.ClaEstatus,\n       PO.NotasProduccion,\n       PO.FechaCaptura,\n       PO.FechaInicioReal,\n       PO.FechaInicioAdm,\n       PO.FechaFinReal,\n       PO.FechaFinAdm,\n       PO.BajaLogica,\n       PO.FechaBajaLogica,\n       PO.ClaUsuarioMod,\n       PO.NombrePcMod,\n       PO.FechaUltimaMod\n  FROM ASWLite_TraOrdenProduccion PO\n  JOIN ASWLite_CatArticuloGeneral ART\n  ON PO.ClaArticulo = ART.ClaArticulo \n  Where ClaEstatus not in (3,2,4)\n  ORDER BY Orden ASC\n  LIMIT 1;`\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 510,
        "y": 1740,
        "wires": [
            [
                "3d27bc1d.890e64"
            ]
        ],
        "info": "REVISAR SI HAY O NO ORDENES DE PRODUCCION EN LA RASPBERRY.\n\n - SI NO HAY SE DEBEN TRAER TODAS LAS ORDENES QUE SE REQUIEREN PRODUCIR Y SE GUARDAN SIN PROCESAR\n   \n - SI EXISTEN SE DEBEN PROCESAR PARA DETERMINAR SI EXISTEN CAMBIOS O NO"
    },
    {
        "id": "8f44a5b6.a5b358",
        "type": "function",
        "z": "810e3309.5f05f",
        "name": "CurrentPOSel",
        "func": "let qry = \n`;WITH cte_inprogress as (SELECT PO.ClaUbicacion,\n       PO.IdPO,\n       PO.ClavePO,\n       PO.IdCelda,\n       PO.ClaArticulo,\n       PO.ClaveArticulo,\n       '[ '||PO.ClaveArticulo ||' ] - '||ART.NomArticuloIngles as NomArticulo,\n       PO.ClaGpoCosteo,\n       PO.ClaGrupoProceso,\n       PO.Orden,\n       PO.ClaUnidadProd,\n       PO.UnidadesProgramadas,\n       PO.UnidadesProducidas,\n       PO.PaquetesPorUnidad,\n       PO.PiezasPorUnidad,\n       PO.UnidadesPorSkid,\n       PO.Diametro,\n       PO.DiametroMin,\n       PO.DiametroMax,\n       PO.Longitud,\n       PO.LongitudMin,\n       PO.LongitudMax,\n       PO.Length,\n       PO.Diameter,\n       PO.Point,\n       PO.Shank,\n       PO.ClaEstatus,\n       PO.NotasProduccion,\n       PO.FechaCaptura,\n       PO.FechaInicioReal,\n       PO.FechaInicioAdm,\n       PO.FechaFinReal,\n       PO.FechaFinAdm,\n       PO.BajaLogica,\n       PO.FechaBajaLogica,\n       PO.ClaUsuarioMod,\n       PO.NombrePcMod,\n       PO.FechaUltimaMod\n  FROM ASWLite_TraOrdenProduccion PO\n  JOIN ASWLite_CatArticuloGeneral ART\n  ON PO.ClaArticulo = ART.ClaArticulo\n  WHERE ClaEstatus = 2),\n cte_ordenes as (SELECT PO.ClaUbicacion,\n       PO.IdPO,\n       PO.ClavePO,\n       PO.IdCelda,\n       PO.ClaArticulo,\n       PO.ClaveArticulo,\n       '[ '||PO.ClaveArticulo ||' ] - '||ART.NomArticuloIngles as NomArticulo,\n       PO.ClaGpoCosteo,\n       PO.ClaGrupoProceso,\n       PO.Orden,\n       PO.ClaUnidadProd,\n       PO.UnidadesProgramadas,\n       PO.UnidadesProducidas,\n       PO.PaquetesPorUnidad,\n       PO.PiezasPorUnidad,\n       PO.UnidadesPorSkid,\n       PO.Diametro,\n       PO.DiametroMin,\n       PO.DiametroMax,\n       PO.Longitud,\n       PO.LongitudMin,\n       PO.LongitudMax,\n       PO.Length,\n       PO.Diameter,\n       PO.Point,\n       PO.Shank,\n       PO.ClaEstatus,\n       PO.NotasProduccion,\n       PO.FechaCaptura,\n       PO.FechaInicioReal,\n       PO.FechaInicioAdm,\n       PO.FechaFinReal,\n       PO.FechaFinAdm,\n       PO.BajaLogica,\n       PO.FechaBajaLogica,\n       PO.ClaUsuarioMod,\n       PO.NombrePcMod,\n       PO.FechaUltimaMod\n  FROM ASWLite_TraOrdenProduccion PO\n  JOIN ASWLite_CatArticuloGeneral ART\n  ON PO.ClaArticulo = ART.ClaArticulo\n  WHERE claestatus not in (3,4)\n  ORDER BY   orden asc ) \n  SELECT * FROM cte_inprogress\n  UNION ALL \n  SELECT  * FROM cte_ordenes\n  limit 1`;\n\nmsg[\"topic\"] = qry\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 516,
        "y": 1781,
        "wires": [
            [
                "3d27bc1d.890e64"
            ]
        ]
    },
    {
        "id": "8c999974.0a9a28",
        "type": "http in",
        "z": "810e3309.5f05f",
        "name": "CU153_Pag1_CurrentProductionOrder_Sel",
        "url": "/sqlite/CU153_Pag1_CurrentProductionOrder_Sel",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 182,
        "y": 1781,
        "wires": [
            [
                "8f44a5b6.a5b358"
            ]
        ]
    },
    {
        "id": "2e556222.de112e",
        "type": "http in",
        "z": "810e3309.5f05f",
        "name": "CU153_Pag3_MoverOrden_Sel",
        "url": "/sqlite/CU153_Pag3_MoverOrden_Sel",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 152,
        "y": 1879,
        "wires": [
            [
                "c11b3eb4.c9733"
            ]
        ]
    },
    {
        "id": "c11b3eb4.c9733",
        "type": "function",
        "z": "810e3309.5f05f",
        "name": "MoverOrdenSel",
        "func": "let IdPO=[msg.payload.IdPO];\n\nlet qry = \n`;WITH cte_OrdenSel as ( SELECT Orden\n,ClaEstatus\n,IdPO\nFROM ASWLite_TraOrdenProduccion\nWHERE  IdPO = ${IdPO})\n, cte_anterior as (\nSELECT Orden\n,ClaEstatus\n,IdPO\nFROM ASWLite_TraOrdenProduccion\nWHERE claEstatus not in (2,3,4)\n AND  orden < (SELECT orden FROM cte_OrdenSel)\nORDER BY orden desc\nLimit 1)\n,cte_siguiente as (SELECT Orden\n,ClaEstatus\n,IdPO\nFROM ASWLite_TraOrdenProduccion\nWHERE claEstatus not in (2,3,4)\n AND  orden > (SELECT orden FROM cte_OrdenSel)\nORDER BY orden asc\nLimit 1)\n\nselect * from cte_siguiente\nUNION ALL\nselect * from cte_OrdenSel \nUNION ALL\nselect * from cte_anterior\n\n \n`;\n\nmsg[\"topic\"] = qry\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 515,
        "y": 1879,
        "wires": [
            [
                "87f5412d.dc879"
            ]
        ]
    },
    {
        "id": "b410fbf3.660af8",
        "type": "http in",
        "z": "810e3309.5f05f",
        "name": "CU154_Pag1_RevisaFinOrden_Sel",
        "url": "/sqlite/CU154_Pag1_RevisaFinOrden_Sel",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 160,
        "y": 1941,
        "wires": [
            [
                "e8a2328e.8700e"
            ]
        ]
    },
    {
        "id": "e8a2328e.8700e",
        "type": "function",
        "z": "810e3309.5f05f",
        "name": "RevisaFinOrdenSel",
        "func": "let setOff = 1;\n\nlet qry =`\nselect CASE WHEN (COALESCE(PO.UnidadesProgramadas,0) - COALESCE(PO.UnidadesProducidas,0)) = ${setOff}  THEN 1 ELSE 0 END as termina\n,PO.ClaveArticulo\n,ART.NomArticuloIngles as NomArticulo \n,COALESCE(PO.UnidadesProgramadas,0) as UnidadesProgramadas\n,COALESCE(PO.UnidadesProducidas,0) as UnidadesProducidas\nfrom  ASWLite_TraOrdenProduccion PO\nJOIN ASWLite_CatArticuloGeneral ART\nON PO.ClaArticulo = ART.ClaArticulo\nWHERE ClaEstatus = 2\n`;\n\n\nmsg.topic = qry\n\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 510,
        "y": 1941,
        "wires": [
            [
                "2c60cbf7.7ef894"
            ]
        ]
    },
    {
        "id": "74419abf.d17d84",
        "type": "http in",
        "z": "810e3309.5f05f",
        "name": "CU151_Pag1_CatArticuloComposicion_Ins",
        "url": "/sqlite/CU151_Pag1_CatArticuloComposicion_Ins",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 180,
        "y": 851,
        "wires": [
            [
                "62a1d611.75cdb8"
            ]
        ]
    },
    {
        "id": "62a1d611.75cdb8",
        "type": "function",
        "z": "810e3309.5f05f",
        "name": "FnOrdenProduccionIns",
        "func": "msg.payload=[msg.payload.datos]\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 496,
        "y": 851,
        "wires": [
            [
                "583be49e.5f0acc"
            ]
        ],
        "info": "REVISAR SI HAY O NO ORDENES DE PRODUCCION EN LA RASPBERRY.\n\n - SI NO HAY SE DEBEN TRAER TODAS LAS ORDENES QUE SE REQUIEREN PRODUCIR Y SE GUARDAN SIN PROCESAR\n   \n - SI EXISTEN SE DEBEN PROCESAR PARA DETERMINAR SI EXISTEN CAMBIOS O NO"
    },
    {
        "id": "583be49e.5f0acc",
        "type": "function",
        "z": "810e3309.5f05f",
        "name": "fnComposicionInsertNotExist",
        "func": "let valorCampo = null;\nlet insqry ;\nlet result = msg.payload;\ninsqry = `INSERT INTO ${result[0][\"nombretabla\"]} ( `;\n\nObject.keys(result[0]).forEach((key,idx)=>{\n    //SE AGREGA AL QUERY EL LISTADO DE CAMPOS DE LA TABLA\n    if(key !== 'nombretabla'){\n        insqry += (Object.keys(result[0]).length !== (idx+1)) ? `${key},` : `${key} ) `;\n    }\n});\nlet selectStr ='';\nlet criterio = ['ClaArticulo','ClaMateriaPrima']\nresult.forEach((element,elementIdx) => {\n    selectStr += insqry + 'SELECT '\n    Object.keys(element).forEach((key,idx) => {\n        if(key !== 'nombretabla'){\n            selectStr += (typeof(element[key]) == 'string') ? `'${element[key]}'`: element[key]\n            selectStr += (Object.keys(element).length !== (idx+1)) ? ',':'';\n        }\n        \n    })\n    selectStr += ` WHERE NOT EXISTS (SELECT 1 FROM ${element[\"nombretabla\"]} WHERE ${criterio[0]} = ${element[criterio[0]]} AND   ${criterio[1]} = ${element[criterio[1]]} )` ; \n    \n    selectStr += (result.length !== (elementIdx+1)) ? \" \" : \" \" ; \n    \n})\n\n\nmsg.qry = selectStr\nmsg.topic = selectStr\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 506,
        "y": 891,
        "wires": [
            [
                "37351a92.aec486"
            ]
        ]
    },
    {
        "id": "4c899c86.2aef94",
        "type": "link in",
        "z": "810e3309.5f05f",
        "name": "SQLITE",
        "links": [
            "24228d3.929bb72",
            "2c60cbf7.7ef894",
            "3d27bc1d.890e64",
            "49f09092.bb23b",
            "7461f0a3.c0112",
            "8383bdfc.61e67",
            "87f5412d.dc879",
            "99825059.15f1f",
            "abbceac9.ab03f8",
            "b127c375.ef683",
            "c705fe01.7b5ec",
            "d211b25c.a6058",
            "fc0eac67.735d6",
            "fdcbfb52.248568",
            "5dee54e6.87de2c",
            "fc0c93eba77aef7c",
            "673f2344733da742",
            "5a3d50bee46bd69b"
        ],
        "x": 755,
        "y": 80,
        "wires": [
            [
                "37351a92.aec486"
            ]
        ]
    },
    {
        "id": "1e6743c6.0143dc",
        "type": "http in",
        "z": "810e3309.5f05f",
        "name": "CU151_Pag1_OrdenProduccionDet_Ins",
        "url": "/sqlite/CU151_Pag1_OrdenProduccionDet_Ins",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 951,
        "wires": [
            [
                "9fef2fce.c6816"
            ]
        ]
    },
    {
        "id": "9fef2fce.c6816",
        "type": "function",
        "z": "810e3309.5f05f",
        "name": "",
        "func": "msg.payload=msg.payload.datos\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 430,
        "y": 951,
        "wires": [
            [
                "944b7b1e.f8f108"
            ]
        ]
    },
    {
        "id": "944b7b1e.f8f108",
        "type": "subflow:1ae9450.7021cbb",
        "z": "810e3309.5f05f",
        "name": "",
        "x": 530,
        "y": 991,
        "wires": [
            [
                "37351a92.aec486"
            ]
        ]
    },
    {
        "id": "7a78829.d98a27c",
        "type": "http in",
        "z": "810e3309.5f05f",
        "name": "CU155_Pag2_Componentes_Sel",
        "url": "/sqlite/CU155_Pag2_Componentes_Sel",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 2060,
        "wires": [
            [
                "a83de001.c4851"
            ]
        ]
    },
    {
        "id": "8383bdfc.61e67",
        "type": "link out",
        "z": "810e3309.5f05f",
        "name": "",
        "links": [
            "4c899c86.2aef94",
            "cbff4ffc.ac9a2"
        ],
        "x": 715,
        "y": 2060,
        "wires": []
    },
    {
        "id": "a83de001.c4851",
        "type": "function",
        "z": "810e3309.5f05f",
        "name": "FnComponentesSel",
        "func": "msg.topic = `SELECT  ClaMaquina AS IdComponente\n                    ,NomMaquina AS Descripcion\n                    ,ClaTipoMaquina AS TipoComponente\n                    ,COALESCE(Origen,'') as NomTipoComponente\n                    ,COALESCE(ABCMachine,'') as  ABCMachine\n                    ,ClaveMaquina\n            FROM ASWLite_CatWorkUnit\n            WHERE EsMaquina=1\n            AND BajaLogica=0\n            ORDER BY ClaTipoMaquina, COALESCE(ABCMachine,'')`\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 2060,
        "wires": [
            [
                "8383bdfc.61e67"
            ]
        ]
    },
    {
        "id": "3d27bc1d.890e64",
        "type": "link out",
        "z": "810e3309.5f05f",
        "name": "",
        "links": [
            "4c899c86.2aef94",
            "cbff4ffc.ac9a2"
        ],
        "x": 715,
        "y": 1671,
        "wires": []
    },
    {
        "id": "2c60cbf7.7ef894",
        "type": "link out",
        "z": "810e3309.5f05f",
        "name": "",
        "links": [
            "4c899c86.2aef94",
            "cbff4ffc.ac9a2"
        ],
        "x": 715,
        "y": 1941,
        "wires": []
    },
    {
        "id": "87f5412d.dc879",
        "type": "link out",
        "z": "810e3309.5f05f",
        "name": "",
        "links": [
            "4c899c86.2aef94",
            "cbff4ffc.ac9a2"
        ],
        "x": 715,
        "y": 1879,
        "wires": []
    },
    {
        "id": "658db2be.06f2fc",
        "type": "http in",
        "z": "810e3309.5f05f",
        "name": "CU155_Pag2_unidadesProgramadas_Sel",
        "url": "/sqlite/CU155_Pag2_unidadesProgramadas_Sel",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 180,
        "y": 2001,
        "wires": [
            [
                "6e7a33d5.cf4d7c"
            ]
        ]
    },
    {
        "id": "6e7a33d5.cf4d7c",
        "type": "function",
        "z": "810e3309.5f05f",
        "name": "",
        "func": "msg.topic = `SELECT  UnidadesProgramadas, IdUnidadCaja\n            FROM ASWLite_VariablesProduccion`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 2001,
        "wires": [
            [
                "b127c375.ef683"
            ]
        ]
    },
    {
        "id": "b127c375.ef683",
        "type": "link out",
        "z": "810e3309.5f05f",
        "name": "",
        "links": [
            "4c899c86.2aef94",
            "cbff4ffc.ac9a2"
        ],
        "x": 715,
        "y": 2001,
        "wires": []
    },
    {
        "id": "2efaf4f7.b15a6c",
        "type": "http in",
        "z": "810e3309.5f05f",
        "name": "CU152_Pag1_OrdenesLocales_Sel",
        "url": "/sqlite/CU152_Pag1_OrdenesLocales_Sel",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 160,
        "y": 1091,
        "wires": [
            [
                "7e8a5295.54c6ac"
            ]
        ]
    },
    {
        "id": "7e8a5295.54c6ac",
        "type": "function",
        "z": "810e3309.5f05f",
        "name": "FnOrdenesLocalesSel",
        "func": "\nmsg.topic = `SELECT IdPO,\n        op.ClavePO,\n        op.ClaveArticulo,\n        a.NomArticulo,\n        CASE ClaEstatus \n            WHEN 2 THEN 'Current PO' \n            ELSE 'PO' END AS Titulo,\n        ClaEstatus,\n        UnidadesProgramadas,\n        u.NomUnidad\n  FROM ASWLite_TraOrdenProduccion op\n  JOIN ASWLite_CatArticuloGeneral a\n  \tON op.ClaArticulo = a.ClaArticulo\n  LEFT JOIN ASWLite_CatUnidad u\n   \tON op.ClaUnidadProd = u.ClaUnidad\n  Where ClaEstatus not in (3,4)\n  ORDER BY Orden;`\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 498,
        "y": 1091,
        "wires": [
            [
                "7461f0a3.c0112"
            ]
        ],
        "info": "OPs locales"
    },
    {
        "id": "fa74d754.0e3d48",
        "type": "http in",
        "z": "810e3309.5f05f",
        "name": "CU152_Pag1_MateriaPrimaOrden_Sel",
        "url": "/sqlite/CU152_Pag1_MateriaPrimaOrden_Sel",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 1131,
        "wires": [
            [
                "df8f0cb7.04075"
            ]
        ]
    },
    {
        "id": "df8f0cb7.04075",
        "type": "function",
        "z": "810e3309.5f05f",
        "name": "FnMateriaPrimaOrdenSel",
        "func": "\nmsg.topic = `SELECT C.[ClaArticulo]\n\t,[ClaMateriaPrima]\n\t,[ClaveMateriaPrima]\n\t,[NomMateriaPrima]\n\t,[Cantidad]\n\t,[Unidad]\n\t,[CantidadUnidad]\n\t,C.[BajaLogica]\n\t,C.[FechaBajaLogica]\n\t,C.[FechaUltimaMod]\nFROM [ASWLite_TraOrdenProduccion] PO\nJOIN [ASWLite_CatArticuloComposicion] C\n\tON PO.ClaArticulo=C.ClaArticulo\nWHERE PO.IdPO=${msg.payload.IdPO}\n`\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 488,
        "y": 1131,
        "wires": [
            [
                "7461f0a3.c0112"
            ]
        ],
        "info": "OPs locales"
    },
    {
        "id": "7461f0a3.c0112",
        "type": "link out",
        "z": "810e3309.5f05f",
        "name": "",
        "links": [
            "4c899c86.2aef94",
            "cbff4ffc.ac9a2"
        ],
        "x": 713,
        "y": 1231,
        "wires": []
    },
    {
        "id": "f373dab1.4772b8",
        "type": "http in",
        "z": "810e3309.5f05f",
        "name": "CU152_Pag1_AlambreCapturadoOrden_IU",
        "url": "/sqlite/CU152_Pag1_AlambreCapturadoOrden_IU",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 190,
        "y": 1171,
        "wires": [
            [
                "619871cd.b2986"
            ]
        ]
    },
    {
        "id": "619871cd.b2986",
        "type": "function",
        "z": "810e3309.5f05f",
        "name": "FnAddRawMaterial",
        "func": "msg.payload=msg.payload.Alambre\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 488,
        "y": 1171,
        "wires": [
            [
                "23f78363.14cb5c"
            ]
        ]
    },
    {
        "id": "23f78363.14cb5c",
        "type": "subflow:1ae9450.7021cbb",
        "z": "810e3309.5f05f",
        "name": "",
        "env": [],
        "x": 528,
        "y": 1211,
        "wires": [
            [
                "7461f0a3.c0112"
            ]
        ]
    },
    {
        "id": "37f2beec.02e832",
        "type": "http in",
        "z": "810e3309.5f05f",
        "name": "CU152_Pag1_TraMateriaPrima_Sel",
        "url": "/sqlite/CU152_Pag1_TraMateriaPrima_Sel",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 158,
        "y": 1251,
        "wires": [
            [
                "f16b0dca.eb098"
            ]
        ]
    },
    {
        "id": "f16b0dca.eb098",
        "type": "subflow:54a4792c.863048",
        "z": "810e3309.5f05f",
        "name": "",
        "env": [],
        "x": 518,
        "y": 1251,
        "wires": [
            [
                "7461f0a3.c0112"
            ]
        ]
    },
    {
        "id": "503e6ff8.711ef",
        "type": "http in",
        "z": "810e3309.5f05f",
        "name": "CU152_Pag1_WireOrden_Sel",
        "url": "/sqlite/CU152_Pag1_WireOrden_Sel",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 138,
        "y": 1291,
        "wires": [
            [
                "24fb71.f2abe49"
            ]
        ]
    },
    {
        "id": "24fb71.f2abe49",
        "type": "function",
        "z": "810e3309.5f05f",
        "name": "FnWireOrdenSel",
        "func": "\nmsg.topic = `SELECT [IdPO]\n\t,[Barcode]\n\t,[Barcode] AS code\n\t,[Codigo]\n\t,[Referencia]\n\t,[NomAlambre]\n\t,[NomAlambre] AS wire\n\t,[NomProvedor]\n\t,[NomProvedor] AS vendor\n\t,[Colada]\n\t,[PesoInicial]\n\t,[PesoFinal]\n\t,[PesoFinal] AS remaining\n\t,[Peso]\n\t,[EsEnUso]\n\t,[EsConsumido]\n\t,[EsRemovido]\n\t,[ClaEventoAdd]\n\t,[ClaEventoUse]\n\t,[ClaEventoConsume]\n\t,[ClaEventoRemove]\n\t,[ClaEstatusReplica]\n\t,[ClaEstatusMCSW]\n\t,[NomEstatusMCSW]\nFROM [ASWLite_TraMateriaPrima]\nWHERE IdPO=${msg.payload.IdPO}\n    AND EsConsumido = 0\n    AND EsRemovido = 0\nORDER BY IdBarcode\n`\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 508,
        "y": 1291,
        "wires": [
            [
                "7461f0a3.c0112"
            ]
        ],
        "info": "OPs locales"
    },
    {
        "id": "8f2987be.d74cd8",
        "type": "http in",
        "z": "810e3309.5f05f",
        "name": "CU152_Pag4_AlambreUsadoOrden_IU",
        "url": "/sqlite/CU152_Pag4_AlambreUsadoOrden_IU",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 168,
        "y": 1331,
        "wires": [
            [
                "9ae6422c.3c0c4",
                "3ad9905e.f1e48"
            ]
        ]
    },
    {
        "id": "9ae6422c.3c0c4",
        "type": "function",
        "z": "810e3309.5f05f",
        "name": "FnActualizaEnUso",
        "func": "\nmsg.topic = `\nUPDATE [ASWLite_TraMateriaPrima]\nSET [EsEnUso] = 1\n    ,[ClaEventoUse] = ${msg.payload.ClaEventoUse}\n    ,[ClaEstatusReplica] = ${msg.payload.ClaEstatusReplica}\n    ,[ClaUsuarioMod] = ${msg.payload.ClaUsuarioMod}\n    ,[NombrePcMod] = '${msg.payload.NombrePcMod}'\n    ,[FechaUltimaMod] = datetime('now','localtime')\nWHERE IdPO=${msg.payload.IdPO}\n    AND Barcode = '${msg.payload.Barcode}'\n`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 508,
        "y": 1331,
        "wires": [
            [
                "7461f0a3.c0112"
            ]
        ],
        "info": "OPs locales"
    },
    {
        "id": "3ad9905e.f1e48",
        "type": "function",
        "z": "810e3309.5f05f",
        "name": "FnTerminaEnUso",
        "func": "\nmsg.topic = `\nUPDATE [ASWLite_TraMateriaPrima]\nSET [EsEnUso] = 0\n    ,[ClaUsuarioMod] = ${msg.payload.ClaUsuarioMod}\n    ,[NombrePcMod] = '${msg.payload.NombrePcMod}'\n    ,[FechaUltimaMod] = datetime('now','localtime')\nWHERE IdPO=${msg.payload.IdPO}\n    AND Barcode != '${msg.payload.Barcode}'\n    AND EsEnUso = 1\n`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 508,
        "y": 1371,
        "wires": [
            [
                "7461f0a3.c0112"
            ]
        ],
        "info": "OPs locales"
    },
    {
        "id": "23534f07.b6477",
        "type": "http in",
        "z": "810e3309.5f05f",
        "name": "CU152_Pag6_AlambreConsumidoOrden_IU",
        "url": "/sqlite/CU152_Pag6_AlambreConsumidoOrden_IU",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 188,
        "y": 1411,
        "wires": [
            [
                "be0f8d4f.4cae2"
            ]
        ]
    },
    {
        "id": "be0f8d4f.4cae2",
        "type": "function",
        "z": "810e3309.5f05f",
        "name": "FnActualizaConsumido",
        "func": "\nmsg.topic = `\nUPDATE [ASWLite_TraMateriaPrima]\nSET [EsConsumido] = 1\n    ,[ClaEventoConsume] = ${msg.payload.ClaEventoConsume}\n    ,[ClaEstatusReplica] = ${msg.payload.ClaEstatusReplica}\n    ,[ClaUsuarioMod] = ${msg.payload.ClaUsuarioMod}\n    ,[NombrePcMod] = '${msg.payload.NombrePcMod}'\n    ,[FechaUltimaMod] = datetime('now','localtime')\nWHERE IdPO=${msg.payload.IdPO}\n    AND Barcode = '${msg.payload.Barcode}'\n`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 488,
        "y": 1411,
        "wires": [
            [
                "7461f0a3.c0112"
            ]
        ],
        "info": "OPs locales"
    },
    {
        "id": "f3785cdc.5627c",
        "type": "http in",
        "z": "810e3309.5f05f",
        "name": "CU152_Pag5_AlambreRemovidoOrden_IU",
        "url": "/sqlite/CU152_Pag5_AlambreRemovidoOrden_IU",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 178,
        "y": 1451,
        "wires": [
            [
                "e15ef758.70a198"
            ]
        ]
    },
    {
        "id": "e15ef758.70a198",
        "type": "function",
        "z": "810e3309.5f05f",
        "name": "FnActualizaRemovido",
        "func": "\nmsg.topic = `\nUPDATE [ASWLite_TraMateriaPrima]\nSET [EsRemovido] = 1\n    ,[ClaEventoConsume] = ${msg.payload.ClaEventoRemove}\n    ,[ClaEstatusReplica] = ${msg.payload.ClaEstatusReplica}\n    ,[ClaUsuarioMod] = ${msg.payload.ClaUsuarioMod}\n    ,[NombrePcMod] = '${msg.payload.NombrePcMod}'\n    ,[FechaUltimaMod] = datetime('now','localtime')\nWHERE IdPO=${msg.payload.IdPO}\n    AND Barcode = '${msg.payload.Barcode}'\n`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 498,
        "y": 1451,
        "wires": [
            [
                "7461f0a3.c0112"
            ]
        ],
        "info": "OPs locales"
    },
    {
        "id": "dec598b4.0dbab8",
        "type": "http in",
        "z": "810e3309.5f05f",
        "name": "CU152_Pag1_PesoAlambre_IU",
        "url": "/sqlite/CU152_Pag1_PesoAlambre_IU",
        "method": "put",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 1491,
        "wires": [
            [
                "f410668d.5815e8"
            ]
        ]
    },
    {
        "id": "f410668d.5815e8",
        "type": "function",
        "z": "810e3309.5f05f",
        "name": "FnUpdatePesoAlambre",
        "func": "msg.topic=`\nUPDATE  [ASWLite_TraMateriaPrima]\nSET PesoInicial = ${msg.payload.peso}\n,peso=0\n,PesoFinal= ${msg.payload.peso}\nWHERE barcode='${msg.payload.barcode}'\n`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 508,
        "y": 1491,
        "wires": [
            [
                "7461f0a3.c0112"
            ]
        ]
    },
    {
        "id": "64a32676.d5ec18",
        "type": "http in",
        "z": "810e3309.5f05f",
        "name": "CU2_Pag1_Insert_IU",
        "url": "/sqlite/CU2_Pag1_Insert_IU",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 240,
        "wires": [
            [
                "45be9db8.410c84"
            ]
        ]
    },
    {
        "id": "f33010f5.42d53",
        "type": "http in",
        "z": "810e3309.5f05f",
        "name": "CU2_Pag1_Select_Sel",
        "url": "/sqlite/CU2_Pag1_Select_Sel",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 280,
        "wires": [
            [
                "6d4da7f6.506758"
            ]
        ]
    },
    {
        "id": "6d4da7f6.506758",
        "type": "subflow:54a4792c.863048",
        "z": "810e3309.5f05f",
        "name": "",
        "env": [],
        "x": 342,
        "y": 280,
        "wires": [
            [
                "c705fe01.7b5ec"
            ]
        ]
    },
    {
        "id": "45be9db8.410c84",
        "type": "subflow:1ae9450.7021cbb",
        "z": "810e3309.5f05f",
        "name": "",
        "env": [],
        "x": 350,
        "y": 240,
        "wires": [
            [
                "c705fe01.7b5ec"
            ]
        ]
    },
    {
        "id": "c705fe01.7b5ec",
        "type": "link out",
        "z": "810e3309.5f05f",
        "name": "",
        "links": [
            "4c899c86.2aef94",
            "cbff4ffc.ac9a2"
        ],
        "x": 520,
        "y": 260,
        "wires": []
    },
    {
        "id": "ebd4dddd.4b1ff",
        "type": "http in",
        "z": "810e3309.5f05f",
        "name": "CU401_Pag1_OrdenesLocales_Sel",
        "url": "/sqlite/CU401_Pag1_OrdenesLocales_Sel",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 160,
        "y": 2660,
        "wires": [
            [
                "80dcae60.64351"
            ]
        ]
    },
    {
        "id": "80dcae60.64351",
        "type": "function",
        "z": "810e3309.5f05f",
        "name": "FnOrdenesLocalesSel",
        "func": "\nmsg.topic = `SELECT IdPO,\n        op.ClavePO,\n        op.ClaveArticulo,\n        a.NomArticulo,\n        CASE ClaEstatus \n            WHEN 2 THEN 'Current PO' \n            ELSE 'PO' END AS Titulo,\n        ClaEstatus,\n        UnidadesProgramadas,\n        u.NomUnidad\n  FROM ASWLite_TraOrdenProduccion op\n  JOIN ASWLite_CatArticuloGeneral a\n  \tON op.ClaArticulo = a.ClaArticulo\n  LEFT JOIN ASWLite_CatUnidad u\n   \tON op.ClaUnidadProd = u.ClaUnidad\n  Where ClaEstatus in (2,3,4,5)\n  ORDER BY CASE ClaEstatus WHEN 2 THEN 1 ELSE 2 END, op.FechaUltimaMod desc\n  LIMIT 4;`\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 498,
        "y": 2660,
        "wires": [
            [
                "24228d3.929bb72"
            ]
        ],
        "info": "OPs locales"
    },
    {
        "id": "24228d3.929bb72",
        "type": "link out",
        "z": "810e3309.5f05f",
        "name": "",
        "links": [
            "4c899c86.2aef94",
            "cbff4ffc.ac9a2"
        ],
        "x": 695,
        "y": 2674,
        "wires": []
    },
    {
        "id": "b484d3b0.84ab9",
        "type": "http in",
        "z": "810e3309.5f05f",
        "name": "CU401_Pag1_Scrap_Del",
        "url": "/sqlite/CU401_Pag1_Scrap_Del",
        "method": "put",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 2700,
        "wires": [
            [
                "2cde9a6f.adb8e6"
            ]
        ]
    },
    {
        "id": "2cde9a6f.adb8e6",
        "type": "function",
        "z": "810e3309.5f05f",
        "name": "FnScrapDel",
        "func": "\nmsg.topic = `UPDATE [ASWLite_TraScrap]\n\tSET [ClaEstatusReplica] = 1\n\t\t,[BajaLogica] = 1\n\t\t,[FechaBajaLogica] = datetime('now','localtime')\n\t\t,[FechaUltimaMod] = datetime('now','localtime')\n\t\t,[NombrePcMod] = '${msg.payload.NombrePcMod}'\n\t\t,[ClaUsuarioMod] = ${msg.payload.ClaUsuarioMod}\t\n\tWHERE [IdScrap] IN (${msg.payload.IdScrap});`\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 468,
        "y": 2700,
        "wires": [
            [
                "24228d3.929bb72"
            ]
        ],
        "info": "OPs locales"
    },
    {
        "id": "4434da42.cbe644",
        "type": "http in",
        "z": "810e3309.5f05f",
        "name": "CU204_Pag1_Paro_Sel",
        "url": "/sqlite/CU204_Pag1_Paro_Sel",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 2199,
        "wires": [
            [
                "28d888c214c71a48"
            ]
        ]
    },
    {
        "id": "fc0eac67.735d6",
        "type": "link out",
        "z": "810e3309.5f05f",
        "name": "",
        "links": [
            "4c899c86.2aef94",
            "cbff4ffc.ac9a2"
        ],
        "x": 715,
        "y": 2239,
        "wires": []
    },
    {
        "id": "9ec42791.f1fab8",
        "type": "http in",
        "z": "810e3309.5f05f",
        "name": "CU204_Pag1_SeccionParo_Sel",
        "url": "/sqlite/CU204_Pag1_SeccionParo_Sel",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 2239,
        "wires": [
            [
                "db9196e4ff8ef5d9"
            ]
        ]
    },
    {
        "id": "c6dd20f0.d4943",
        "type": "http in",
        "z": "810e3309.5f05f",
        "name": "CU204_Pag1_JustificaParo_Proc",
        "url": "/sqlite/CU204_Pag1_JustificaParo_Proc",
        "method": "put",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 2380,
        "wires": [
            [
                "efa07510c20409bc"
            ]
        ]
    },
    {
        "id": "e889ac99.4a6e4",
        "type": "function",
        "z": "810e3309.5f05f",
        "name": "FnJustificaParoIgualProc",
        "func": "\nmsg.topic = `UPDATE [AswLite_BitParos]\nSET ClaSeccionParo = ${msg.payload.ClaSeccionParo || 'NULL'}\n    ,ClaUsuarioMod = ${msg.payload.ClaUsuarioMod || 'NULL'}\n    ,NombrePcMod = '${msg.payload.NombrePcMod || 'NULL'}'\n    ,FechaUltimaMod = datetime('now','localtime')\n    ,ClaEstatusReplica = 1\nWHERE abs(strftime('%s', [fechaHoraInicial]) - (SELECT strftime('%s', [fechaHoraInicial]) FROM  [AswLite_BitParos] bp WHERE bp.IdParo=${msg.payload.IdParo || 'NULL'})) < (60*5)\n\tAND abs(strftime('%s', [fechaHoraFinal]) - (SELECT strftime('%s', [fechaHoraFinal]) FROM  [AswLite_BitParos] bp WHERE bp.IdParo=${msg.payload.IdParo || 'NULL'})) < (60*5)\n    AND ClaSeccionParo IS NULL\n;`\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 490,
        "y": 2319,
        "wires": [
            [
                "fc0eac67.735d6"
            ]
        ],
        "info": "OPs locales"
    },
    {
        "id": "277c2b47.cc9084",
        "type": "http in",
        "z": "810e3309.5f05f",
        "name": "CU159_Pag1_LimiteVelocidad_Sel",
        "url": "/sqlite/CU159_Pag1_LimiteVelocidad_Sel",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 160,
        "y": 2120,
        "wires": [
            [
                "92a99bf7.3cf798"
            ]
        ]
    },
    {
        "id": "92a99bf7.3cf798",
        "type": "function",
        "z": "810e3309.5f05f",
        "name": "FnLimiteVelocidad",
        "func": "msg.topic = `SELECT [Valor1]\nFROM [ASWLite_CfgConfiguracion]\nWHERE [ClaveConfiguracion] = 'SPEED_LIMIT'`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 510,
        "y": 2120,
        "wires": [
            [
                "99825059.15f1f"
            ]
        ]
    },
    {
        "id": "99825059.15f1f",
        "type": "link out",
        "z": "810e3309.5f05f",
        "name": "",
        "links": [
            "4c899c86.2aef94",
            "cbff4ffc.ac9a2"
        ],
        "x": 715,
        "y": 2120,
        "wires": []
    },
    {
        "id": "d2e77d60.f7b7b",
        "type": "http in",
        "z": "810e3309.5f05f",
        "name": "CU999_Pag1_TipoMejora_Sel",
        "url": "/sqlite/CU999_Pag2_TipoMejora_Sel",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 2880,
        "wires": [
            [
                "cd88dea.dd1612"
            ]
        ]
    },
    {
        "id": "cd88dea.dd1612",
        "type": "function",
        "z": "810e3309.5f05f",
        "name": "FnTipoMejoraSel",
        "func": "\nmsg.topic = `\nSELECT  ClaTipoMejora\n       ,NomTipoMejora\nFROM ASWLite_CatBSCTipoMejora\nWHERE COALESCE(BajaLogica,0) = 0\n`\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 410,
        "y": 2880,
        "wires": [
            [
                "fdcbfb52.248568"
            ]
        ],
        "info": "OPs locales"
    },
    {
        "id": "fdcbfb52.248568",
        "type": "link out",
        "z": "810e3309.5f05f",
        "name": "",
        "links": [
            "4c899c86.2aef94",
            "cbff4ffc.ac9a2"
        ],
        "x": 565,
        "y": 2880,
        "wires": []
    },
    {
        "id": "55ac83e5.b8c08c",
        "type": "http in",
        "z": "810e3309.5f05f",
        "name": "CU153_Pag2_FinImediatoOp",
        "url": "/sqlite/CU153_Pag2_FinImediatoOp",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 1820,
        "wires": [
            [
                "569af89d.f319c8"
            ]
        ]
    },
    {
        "id": "569af89d.f319c8",
        "type": "subflow:554af14f.5b6cb",
        "z": "810e3309.5f05f",
        "name": "",
        "env": [],
        "x": 490,
        "y": 1820,
        "wires": []
    },
    {
        "id": "32c56f15.394a7",
        "type": "subflow:72c19d2d.532ce4",
        "z": "810e3309.5f05f",
        "name": "",
        "env": [],
        "x": 130,
        "y": 3500,
        "wires": []
    },
    {
        "id": "5ff86ab8.afceb4",
        "type": "http in",
        "z": "810e3309.5f05f",
        "name": "CU524_Pag1_ColoresAndon_Sel",
        "url": "/sqlite/CU524_Pag1_ColoresAndon_Sel",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 2820,
        "wires": [
            [
                "90ef87a9.9f49b8"
            ]
        ]
    },
    {
        "id": "90ef87a9.9f49b8",
        "type": "function",
        "z": "810e3309.5f05f",
        "name": "FnColoresAndonSel",
        "func": "msg.topic = `\n  \n WITH BitAndon AS(\n \tSELECT ClaUbicacion\n \t\t,ClaSeccionParo\n \t\t,FechaHoraFinal\n \tFROM AswLite_BitParos bp\n \tLEFT JOIN ASWLite_CatWorkUnit m\n \t\tON bp.idComponente = m.claMaquina\n\tWHERE fechaHoraFinal IS NULL\n\t\tAND m.EsMaquina = 1\n        AND fechaAdmScada = '${global.get('FechaAdm') || 'NULL'}'\n        AND ClaTurno = ${global.get('ClaTurno') || 0}\n\tUNION ALL\n \tSELECT ClaUbicacion\n \t\t,ClaSeccionParo\n \t\t,FechaHoraFinal\n \tFROM AswLite_BitAndon ba\n \tLEFT JOIN ASWLite_CatWorkUnit m\n \t\tON ba.idComponente = m.claMaquina\n\tWHERE fechaHoraFinal IS NULL\n\t\tAND m.EsMaquina = 1\n        AND fechaAdmScada = '${global.get('FechaAdm') || 'NULL'}'\n        AND ClaTurno = ${global.get('ClaTurno') || 0}\n )\n SELECT MAX(CASE WHEN Color ='BLINKINGGREEN' THEN 1 END) AS BLINKINGGREEN\n\t,MAX(CASE WHEN Color ='YELLOW' THEN 1 END) AS YELLOW\n\t,MAX(CASE WHEN Color ='WHITE' THEN 1 END) AS WHITE\n\t,MAX(CASE WHEN Color ='RED' THEN 1 END) AS RED\n\t,MAX(CASE WHEN Color ='BLUE' THEN 1 END) AS BLUE\n\t,CASE WHEN MAX(BP.ClaSeccionParo) IS NULL THEN 1 END AS GREEN--todos los paros nacen justificados\nFROM BitAndon BP\nLEFT JOIN ASWLite_RelColorSeccionParo CP\n\tON BP.ClaUbicacion = CP.ClaUbicacion\n\tAND CP.ClaArea IN (0,${global.get('ClaArea')})\n\tAND BP.ClaSeccionParo = CP.ClaSeccionParo\nWHERE fechaHoraFinal IS NULL \n`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 2820,
        "wires": [
            [
                "abbceac9.ab03f8"
            ]
        ]
    },
    {
        "id": "abbceac9.ab03f8",
        "type": "link out",
        "z": "810e3309.5f05f",
        "name": "",
        "links": [
            "4c899c86.2aef94",
            "cbff4ffc.ac9a2"
        ],
        "x": 695,
        "y": 2820,
        "wires": []
    },
    {
        "id": "e93969a4.eaf918",
        "type": "http in",
        "z": "810e3309.5f05f",
        "name": "CU506_Pag1_ColoresPerformance_Sel",
        "url": "/sqlite/CU506_Pag1_ColoresPerformance_Sel",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 2760,
        "wires": [
            [
                "e9cb7356.b3d71"
            ]
        ]
    },
    {
        "id": "e9cb7356.b3d71",
        "type": "function",
        "z": "810e3309.5f05f",
        "name": "FnColoresPerformanceSel",
        "func": "msg[\"topic\"] = `\nWITH VariablesProduccion AS(\n\tSELECT MAX(FechaAdministrativa) AS FechaAdministrativa\n\t\t,MAX(ClaTurno) AS ClaTurno\n\t\t,AVG(CajasXHora) AS CajasXHora\n\tFROM ASWLite_VariablesProduccion\n)\n,CatTurno AS (\n\tSELECT VP.ClaTurno\n--\t\t,Duracion \n\t\t,CASE \n\t\t\tWHEN HoraInicioTurno<HoraFinTurno --Turno A poplar\n\t\t\t\tTHEN DATE(FechaAdministrativa) || ' ' || TIME(horainicioturno)\n\t\t\tWHEN HoraInicioTurno>HoraFinTurno AND ProduccionDiaInicio = 1 --Turno C poplar\n\t\t\t\tTHEN DATE(FechaAdministrativa) || ' ' || TIME(horainicioturno)\n\t\t\tWHEN HoraInicioTurno>HoraFinTurno AND ProduccionDiaInicio = 0\n\t\t\t\tTHEN DATE(FechaAdministrativa, '-1 day') || ' ' || TIME(horainicioturno)\n\t\t\tEND AS FechaHoraInicio\n--\t\t,CASE \n--\t\t\tWHEN HoraInicioTurno<HoraFinTurno --Turno A poplar\n--\t\t\t\tTHEN DATE(FechaAdministrativa) || ' ' || TIME(horaFinTurno)\n--\t\t\tWHEN HoraInicioTurno>HoraFinTurno AND ProduccionDiaInicio = 1 --Turno C poplar\n--\t\t\t\tTHEN DATE(FechaAdministrativa, '+1 day') || ' ' || TIME(horaFinTurno)\n--\t\t\tWHEN HoraInicioTurno>HoraFinTurno AND ProduccionDiaInicio = 0\n--\t\t\t\tTHEN DATE(FechaAdministrativa) || ' ' || TIME(horaFinTurno)\n--\t\t\tEND AS FechaHoraFin\n\tFROM ASWLite_CatTurno T\n\tJOIN VariablesProduccion VP\n\t\tON T.ClaTurno = VP.ClaTurno\n)\n,DuracionTurno AS(\n\tSELECT ClaTurno\n\t\t,(JULIANDAY(DATETIME('now', 'localtime'))-JULIANDAY(FechaHoraInicio))*24 AS HorasTurno\n\tFROM CatTurno\n)\n,BitProduccion AS(\n\tSELECT MAX(FechaAdministrativa) AS FechaAdministrativa\n\t\t,MAX(VP.ClaTurno) AS ClaTurno\n\t\t,ClaArticulo\n\t\t,MAX(HorasTurno) AS HorasTurno\n\t\t--,STRFTIME('%H',DATETIME('now','localtime')) AS Hora\n\t\t,MAX(COALESCE(BP.CajasXHora, VP.CajasXHora)) AS CajasXHora\n\t\t,COUNT(IdCaja) AS CajasProducidas\n\t\t,ROUND(COUNT(IdCaja) / MAX(COALESCE(BP.CajasXHora, VP.CajasXHora)) / MAX(HorasTurno) * 100.0, 2) AS CumplimientoHr\n--\t\t,ROUND(COUNT(IdCaja) / MAX(CajasXHora) * 60.0 / strftime('%M','now') * 100.0, 2) AS CumplimientoMn\n\tFROM VariablesProduccion VP\n\tLEFT JOIN AswLite_BitProduccion BP\n\t\tON VP.FechaAdministrativa = BP.FechaAdm\n\t\tAND VP.ClaTurno = BP.ClaTurno\n\t\t--AND  STRFTIME('%H',fechaHoraInicio) = STRFTIME('%H',DATETIME('now','localtime')) --AND Hora = 21\n\t\tAND ClaveCorte = 'FINCAJA'\n\tLEFT JOIN DuracionTurno T\n\t\tON VP.ClaTurno = T.ClaTurno\n\tGROUP BY ClaArticulo\n)\nSELECT FechaAdministrativa\n\t\t,ClaTurno\n\t\t,HorasTurno\n\t\t--,Hora\n\t\t,AVG(CajasXHora) AS CajasXHora\n\t\t,SUM(CajasProducidas) AS CajasProducidas\n\t\t,SUM(CumplimientoHr) AS CumplimientoHr\n\t\t--,CumplimientoMn \n\t\t,CASE \n\t\t\tWHEN SUM(CumplimientoHr) >= (SELECT Valor1 FROM ASWLite_CfgConfiguracion WHERE ClaveConfiguracion = 'PERFORM_LIGHT' ) THEN 'GREEN'\n\t\t\tWHEN SUM(CumplimientoHr) >= (SELECT Valor2 FROM ASWLite_CfgConfiguracion WHERE ClaveConfiguracion = 'PERFORM_LIGHT' ) THEN 'YELLOW'\n\t\t\tWHEN SUM(CumplimientoHr) >= (SELECT Valor3 FROM ASWLite_CfgConfiguracion WHERE ClaveConfiguracion = 'PERFORM_LIGHT' ) THEN 'RED'\n\t\t\tELSE 'GRAY' END AS PerformanceLight\nFROM BitProduccion\nGROUP BY FechaAdministrativa, ClaTurno, HorasTurno\n\n`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 510,
        "y": 2760,
        "wires": [
            [
                "49f09092.bb23b"
            ]
        ]
    },
    {
        "id": "49f09092.bb23b",
        "type": "link out",
        "z": "810e3309.5f05f",
        "name": "",
        "links": [
            "4c899c86.2aef94",
            "cbff4ffc.ac9a2"
        ],
        "x": 695,
        "y": 2760,
        "wires": []
    },
    {
        "id": "d211b25c.a6058",
        "type": "link out",
        "z": "810e3309.5f05f",
        "name": "",
        "links": [
            "4c899c86.2aef94"
        ],
        "x": 755,
        "y": 3260,
        "wires": []
    },
    {
        "id": "1b4ecbf8.4b2244",
        "type": "http in",
        "z": "810e3309.5f05f",
        "name": "CU521_Pag1_AlertaAndon_Proc",
        "url": "/sqlite/CU521_Pag1_AlertaAndon_Proc",
        "method": "put",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 2960,
        "wires": [
            [
                "06b7bd1bea8a680b"
            ]
        ]
    },
    {
        "id": "27a6a89.59fd158",
        "type": "function",
        "z": "810e3309.5f05f",
        "name": "FnAlertaAndonProc",
        "func": "msg.topic = `WITH VariablesProduccion AS(\n\tSELECT MAX(IdPO) AS IdPO \n\t\t,MAX(IdUnidadCaja) AS IdUnidadCaja\n\t\t,MAX(FechaAdministrativa) AS FechaAdministrativa\n\t\t,MAX(ClaTurno) AS ClaTurno\n\tFROM ASWLite_VariablesProduccion\n)\n,CatSeccionParo AS(\n\tSELECT ClaGpoParo\n\t\t,ClaTipoParo\n\t\t,ClaSeccionParo\n\tFROM ASWLite_CatSeccionParo SP\n\tJOIN ASWLite_RelTipoParoGpoParo RTPGP\n\t\tON SP.IdTipoParoGpoParo = RTPGP.IdTipoParoGpoParo\n\t\tAND SP.ClaSeccionParo   = RTPGP.ClaTipoParo\n\tWHERE ClaSeccionParo = ${msg.payload.ClaSeccionParo || 'NULL'}\n)\nINSERT INTO [AswLite_BitAndon]\n\t(IdAndon\n\t,[ClaUbicacion]\n\t,[IdComponente]\n\t,[IdPOInicio]\n\t,[IdUnidad]\n\t,[IdUsuario]\n\t,[FechaHoraInicial]\n\t,[FechaAdmSCADA]\n\t,[ClaTurno]\n\t,[ClaGrupoParo]\n\t,[ClaTipoParo]\n\t,[ClaSeccionParo]\n\t,[ClaEventoNuevo] \n\t,[ClaEstatusReplica]\n\t,[ClaUsuarioMod]\n\t,[NombrePCMod]\n\t,[FechaUltimaMod]\n\t,[BajaLogica]\n\t,[Comentarios]\n\t,[NombreEmpleado])\nVALUES\n\t((SELECT Folio FROM AswLite_CatFolioBitacora WHERE ClaveFolioBitacora = 'FolBitAndon')\n\t,${global.get('ClaUbicacion')}\n\t,${msg.payload.Asset || 'NULL'}\n\t,(SELECT IdPO FROM VariablesProduccion)\n\t,(SELECT IdUnidadCaja FROM VariablesProduccion)\n\t,${msg.payload.ClaUsuarioMod || 'NULL'}\n\t,DATETIME('now','localtime')\n\t,(SELECT FechaAdministrativa FROM VariablesProduccion)\n\t,(SELECT ClaTurno FROM VariablesProduccion)\n\t,(SELECT ClaGpoParo FROM CatSeccionParo)\n\t,(SELECT ClaTipoParo FROM CatSeccionParo)\n\t,${msg.payload.ClaSeccionParo || 'NULL'}\n\t,1\n\t,1\n\t,${msg.payload.ClaUsuarioMod || 'NULL'}\n\t,'${msg.payload.NombrePcMod || 'NULL'}'\n\t,DATETIME('now','localtime')\n\t,0\n\t,'${msg.payload.Comentarios || 'NULL'}'\n\t,'${msg.payload.NombreEmpleado || 'NULL'}')\n;`\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 830,
        "y": 2960,
        "wires": [
            [
                "4d6f6683981ce713"
            ]
        ],
        "info": "OPs locales"
    },
    {
        "id": "970c8db.30b937",
        "type": "http in",
        "z": "810e3309.5f05f",
        "name": "CU521_Pag1_ReclasificaAndon_Proc",
        "url": "/sqlite/CU521_Pag1_ReclasificaAndon_Proc",
        "method": "put",
        "upload": false,
        "swaggerDoc": "",
        "x": 190,
        "y": 3020,
        "wires": [
            [
                "24f12821.d90af8"
            ]
        ]
    },
    {
        "id": "24f12821.d90af8",
        "type": "function",
        "z": "810e3309.5f05f",
        "name": "FnReclasificaAndonProc",
        "func": "msg.topic = `\nWITH CatSeccionParo AS(\n\tSELECT ClaGpoParo\n\t\t,ClaTipoParo\n\t\t,ClaSeccionParo\n\tFROM ASWLite_CatSeccionParo SP\n\tJOIN ASWLite_RelTipoParoGpoParo RTPGP\n\t\tON SP.IdTipoParoGpoParo = RTPGP.IdTipoParoGpoParo\n\t\tAND SP.ClaSeccionParo   = RTPGP.ClaTipoParo\n\tWHERE ClaSeccionParo = ${msg.payload.ClaSeccionParo || 'NULL'}\n)\nUPDATE [AswLite_BitAndon]\nSET ClaSeccionParo = ${msg.payload.ClaSeccionParo || 'NULL'}\n    ,ClaGrupoParo = (SELECT ClaGpoParo FROM CatSeccionParo)\n    ,ClaTipoParo = (SELECT ClaTipoParo FROM CatSeccionParo)\n    ,ClaUsuarioMod = ${msg.payload.ClaUsuarioMod || 'NULL'}\n    ,FechaHoraReasignado = datetime('now','localtime')\n    ,NombrePcMod = '${msg.payload.NombrePcMod || 'NULL'}'\n    ,FechaUltimaMod = datetime('now','localtime')\n    ,ClaEventoReasignacion = 1\n    ,ClaEstatusReplica = 1\n    ,NombreEmpleado = '${msg.payload.NombreEmpleado || 'NULL'}'\n    ,Comentarios = '${msg.payload.Comentarios || 'NULL'}'\nWHERE IdAndon = ${msg.payload.IdAndon || 'NULL'}\n;`\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 3020,
        "wires": [
            [
                "427de5b3.c6d34c"
            ]
        ],
        "info": "OPs locales"
    },
    {
        "id": "739f01f0.e1863",
        "type": "link out",
        "z": "810e3309.5f05f",
        "name": "",
        "links": [
            "b5cd4287.cb95b"
        ],
        "x": 945,
        "y": 3080,
        "wires": []
    },
    {
        "id": "2e2fa1d9.3d0d7e",
        "type": "http in",
        "z": "810e3309.5f05f",
        "name": "CU521_Pag1_SolveAndon_Proc",
        "url": "/sqlite/CU521_Pag1_SolveAndon_Proc",
        "method": "put",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 3060,
        "wires": [
            [
                "849d886.f621278"
            ]
        ]
    },
    {
        "id": "849d886.f621278",
        "type": "function",
        "z": "810e3309.5f05f",
        "name": "FnSolveAndonProc",
        "func": "msg.topic = `\nWITH VariablesProduccion AS(\n\tSELECT MAX(IdPO) AS IdPO \n\tFROM ASWLite_VariablesProduccion\n)\nUPDATE [AswLite_BitAndon]\nSET IdPOFin = (SELECT IdPO FROM VariablesProduccion)\n    ,DuracionSegundos=strftime('%s', datetime('now','localtime')) - strftime('%s', [fechaHoraInicial])\n    ,ClaUsuarioMod = ${msg.payload.ClaUsuarioMod || 'NULL'}\n    ,FechaHoraFinal = datetime('now','localtime')\n    ,NombrePcMod = '${msg.payload.NombrePcMod || 'NULL'}'\n    ,FechaUltimaMod = datetime('now','localtime')\n    ,ComentariosSolucion = '${msg.payload.ComentarioJustificacion || 'NULL'}'\n    ,ClaEventoSolucionado = 1\n    ,ClaEstatusReplica = 1\nWHERE IdAndon = ${msg.payload.IdAndon || 'NULL'}\n;`\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 3060,
        "wires": [
            [
                "427de5b3.c6d34c"
            ]
        ],
        "info": "OPs locales"
    },
    {
        "id": "87746142.9ca1f",
        "type": "http in",
        "z": "810e3309.5f05f",
        "name": "CU521_Pag1_CheckAndon_Proc",
        "url": "/sqlite/CU521_Pag1_CheckAndon_Proc",
        "method": "put",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 3160,
        "wires": [
            [
                "eda952c5.3bb02"
            ]
        ]
    },
    {
        "id": "eda952c5.3bb02",
        "type": "function",
        "z": "810e3309.5f05f",
        "name": "FnCheckAndonProc",
        "func": "\nmsg.topic = `\n\nUPDATE [AswLite_BitAndon]\nSET ClaUsuarioMod = ${msg.payload.ClaUsuarioMod || 'NULL'}\n    ,FechaHoraAtencion = datetime('now','localtime')\n    ,NombrePcMod = '${msg.payload.NombrePcMod || 'NULL'}'\n    ,FechaUltimaMod = datetime('now','localtime')\n    ,FechaHoraFinal = null\n    ,ClaEventoAtencion = 1\n    ,ClaEstatusReplica = 1\nWHERE IdAndon = ${msg.payload.IdAndon || 'NULL'}\n;`\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 3160,
        "wires": [
            [
                "d211b25c.a6058"
            ]
        ],
        "info": "OPs locales"
    },
    {
        "id": "427de5b3.c6d34c",
        "type": "sqlite",
        "z": "810e3309.5f05f",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 850,
        "y": 3020,
        "wires": [
            [
                "739f01f0.e1863",
                "552a9c14.79d914"
            ]
        ]
    },
    {
        "id": "4600f1f1.8161c",
        "type": "link in",
        "z": "810e3309.5f05f",
        "name": "switch",
        "links": [
            "552a9c14.79d914",
            "b41e811b.23f3f",
            "3fd5f95c.116d16",
            "4f2fb8981ff9478e"
        ],
        "x": 875,
        "y": 181,
        "wires": [
            [
                "511d674a.661eb8"
            ]
        ]
    },
    {
        "id": "552a9c14.79d914",
        "type": "link out",
        "z": "810e3309.5f05f",
        "name": "",
        "links": [
            "4600f1f1.8161c"
        ],
        "x": 1115,
        "y": 2980,
        "wires": []
    },
    {
        "id": "ffa41079.078fd",
        "type": "http in",
        "z": "810e3309.5f05f",
        "name": "CU521_Pag1_VerificaAndon_Proc",
        "url": "/sqlite/CU521_Pag1_VerificaAndon_Proc",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 180,
        "y": 3200,
        "wires": [
            [
                "fd2bf976.7aa898"
            ]
        ]
    },
    {
        "id": "fd2bf976.7aa898",
        "type": "function",
        "z": "810e3309.5f05f",
        "name": "FnVerificaAndonProc",
        "func": "\nmsg.topic = `\nSELECT COUNT(DISTINCT 1) AS Existe\nFROM [AswLite_BitAndon]\nWHERE IdComponente= ${msg.payload.Asset || 'NULL'}\nAND FechaHoraFinal IS NULL\n;`\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 3200,
        "wires": [
            [
                "d211b25c.a6058"
            ]
        ],
        "info": "OPs locales"
    },
    {
        "id": "c027e7ad.0d5a68",
        "type": "http in",
        "z": "810e3309.5f05f",
        "name": "CU204_Pag1_AtenderParo_Proc",
        "url": "/sqlite/CU204_Pag1_AtenderParo_Proc",
        "method": "put",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 2420,
        "wires": [
            [
                "50751e30caca8870"
            ]
        ]
    },
    {
        "id": "558eecd9.2e2c74",
        "type": "http in",
        "z": "810e3309.5f05f",
        "name": "CU204_Pag1_SolucionarParo_Proc",
        "url": "/sqlite/CU204_Pag1_SolucionarParo_Proc",
        "method": "put",
        "upload": false,
        "swaggerDoc": "",
        "x": 160,
        "y": 2500,
        "wires": [
            [
                "0093fd9accdaf74b"
            ]
        ]
    },
    {
        "id": "bb05be77.e579c",
        "type": "http in",
        "z": "810e3309.5f05f",
        "name": "CU521_Pag1_Andon_Sel",
        "url": "/sqlite/CU521_Pag1_Andon_Sel",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 3260,
        "wires": [
            [
                "1c0792b7976a9e69"
            ]
        ]
    },
    {
        "id": "332e6040.06baf",
        "type": "sqlite",
        "z": "810e3309.5f05f",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 710,
        "y": 2420,
        "wires": [
            [
                "a5cf4a6.9cf9ab8",
                "b41e811b.23f3f"
            ]
        ]
    },
    {
        "id": "a5cf4a6.9cf9ab8",
        "type": "link out",
        "z": "810e3309.5f05f",
        "name": "",
        "links": [
            "b5cd4287.cb95b"
        ],
        "x": 875,
        "y": 2420,
        "wires": []
    },
    {
        "id": "b41e811b.23f3f",
        "type": "link out",
        "z": "810e3309.5f05f",
        "name": "",
        "links": [
            "4600f1f1.8161c"
        ],
        "x": 875,
        "y": 2380,
        "wires": []
    },
    {
        "id": "63f9934c.9aa42c",
        "type": "sqlite",
        "z": "810e3309.5f05f",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 710,
        "y": 2500,
        "wires": [
            [
                "6b0de733.216de8",
                "b41e811b.23f3f"
            ]
        ]
    },
    {
        "id": "6b0de733.216de8",
        "type": "link out",
        "z": "810e3309.5f05f",
        "name": "",
        "links": [
            "b5cd4287.cb95b"
        ],
        "x": 875,
        "y": 2480,
        "wires": []
    },
    {
        "id": "a4a8871f.da6518",
        "type": "http in",
        "z": "810e3309.5f05f",
        "name": "CU703_Pag1_FailureReport_Sel",
        "url": "/sqlite/CU703_Pag1_FailureReport_Sel",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 3460,
        "wires": [
            [
                "56124224.2c7fac"
            ]
        ]
    },
    {
        "id": "56124224.2c7fac",
        "type": "function",
        "z": "810e3309.5f05f",
        "name": "FnFailureReportSel",
        "func": "\nmsg.topic = `SELECT \n\tNomEquipoCelda\n\t,NomSistema || ' - ' || NomSubSistema AS NomSistemaSubSistema\t\n\t,[FechaReporte] AS FechaReporte\n\t,[FechaReporte] AS HoraReporte\t\n\t,NomRcmFuncionFalla\nFROM [ASWLite_MtoTraReporteFalla] RF\nJOIN ASWLite_MtoCatEquipoCelda EC\n\tON RF.ClaEquipo = EC.ClaEquipo\nJOIN ASWLite_MtoCatSistema S\n\tON RF.ClaSistema = S.ClaSistema\nJOIN ASWLite_MtoCatSubSistema SS\n\tON RF.ClaSistema = SS.ClaSistema\n\tAND RF.ClaSubSistema = SS.ClaSubSistema\nJOIN ASWLite_MtoCatRcmFuncionFalla FF\n\tON RF.ClaEquipo= FF.ClaEquipo\n\tAND RF.ClaRcmFuncion = FF.ClaRcmFuncion\n\tAND RF.ClaRcmFuncionFalla = FF.ClaRcmFuncionFalla\nwhere  strftime('%s', fechaReporte) > strftime('%s', datetime('now', '-10 days'))\norder by FechaReporte DESC\n;`\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 3460,
        "wires": [
            [
                "5dee54e6.87de2c"
            ]
        ]
    },
    {
        "id": "5dee54e6.87de2c",
        "type": "link out",
        "z": "810e3309.5f05f",
        "name": "",
        "links": [
            "4c899c86.2aef94"
        ],
        "x": 675,
        "y": 3460,
        "wires": []
    },
    {
        "id": "f6299da0.634f2",
        "type": "subflow:86d5434a.cfc9c",
        "z": "810e3309.5f05f",
        "name": "",
        "env": [],
        "x": 130,
        "y": 3540,
        "wires": []
    },
    {
        "id": "6de0362a557eabc2",
        "type": "http in",
        "z": "810e3309.5f05f",
        "name": "CU521_Pag1_ObtenerComentariosAndon",
        "url": "/sqlite/CU521_Pag1_ObtenerComentariosAndon",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 200,
        "y": 3340,
        "wires": [
            [
                "f2e2bafe7269ab91"
            ]
        ]
    },
    {
        "id": "f2e2bafe7269ab91",
        "type": "function",
        "z": "810e3309.5f05f",
        "name": "FnObtenerComentarios",
        "func": "\nmsg.topic = `SELECT NombreEmpleado\n    ,Comentarios\n    ,ClaEventoReasignacion\nFROM [AswLite_BitAndon] \nWHERE IdAndon = ${msg.payload.IdAndon};`\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 3340,
        "wires": [
            [
                "d211b25c.a6058"
            ]
        ]
    },
    {
        "id": "de04701ee08b45db",
        "type": "http in",
        "z": "810e3309.5f05f",
        "name": "CU204_Pag1_ObtenerComentariosParo",
        "url": "/sqlite/CU204_Pag1_ObtenerComentariosParo",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 180,
        "y": 2540,
        "wires": [
            [
                "47358ba7058181ac"
            ]
        ]
    },
    {
        "id": "47358ba7058181ac",
        "type": "function",
        "z": "810e3309.5f05f",
        "name": "FnObtenerComentarios",
        "func": "\nmsg.topic = `SELECT NombreEmpleado\n,Comentarios\nFROM [AswLite_BitParos] \nWHERE IdParo = ${msg.payload.IdParo};`\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 2540,
        "wires": [
            [
                "63f9934c.9aa42c"
            ]
        ]
    },
    {
        "id": "8e22b538887804ef",
        "type": "http in",
        "z": "810e3309.5f05f",
        "name": "CU999_Pag5_CheckOver",
        "url": "/sqlite/CU999_Pag5_CheckOver",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 3600,
        "wires": [
            [
                "32a5a02061ac1789"
            ]
        ]
    },
    {
        "id": "6dd31ddbed1f0f4f",
        "type": "http in",
        "z": "810e3309.5f05f",
        "name": "CU521_Pag1_SeccionParo_Sel",
        "url": "/sqlite/CU521_Pag1_SeccionParo_Sel",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 3300,
        "wires": [
            [
                "19a20248aabbba97"
            ]
        ]
    },
    {
        "id": "2e844e2be63b23a5",
        "type": "http in",
        "z": "810e3309.5f05f",
        "name": "CU521_Pag1_GpoParo_Sel",
        "url": "/sqlite/CU521_Pag1_GpoParo_Sel",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 160,
        "y": 3400,
        "wires": [
            [
                "f6efa6f70165aeb4"
            ]
        ]
    },
    {
        "id": "9c47fffc718c9a27",
        "type": "http in",
        "z": "810e3309.5f05f",
        "name": "CU204_Pag1_GpoParo_Sel",
        "url": "/sqlite/CU204_Pag1_GpoParo_Sel",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 2460,
        "wires": [
            [
                "e50f3babece9d33b"
            ]
        ]
    },
    {
        "id": "2c5f37a37b35922b",
        "type": "link out",
        "z": "810e3309.5f05f",
        "name": "",
        "links": [
            "4e608993.281328",
            "af9ceae998cdaf9d"
        ],
        "x": 1055,
        "y": 2560,
        "wires": []
    },
    {
        "id": "b934c514f59f097d",
        "type": "http in",
        "z": "810e3309.5f05f",
        "name": "CU204_Pag1_ParentParo_Sel",
        "url": "/sqlite/CU204_Pag1_ParentParo_Sel",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 2280,
        "wires": [
            [
                "0be08960a7796472"
            ]
        ]
    },
    {
        "id": "efa07510c20409bc",
        "type": "function",
        "z": "810e3309.5f05f",
        "name": "FnJustificaParoProc",
        "func": "if(msg.payload.IdAgrupador){\n    msg.topic = `   UPDATE [AswLite_BitParos]\n                    SET ClaSeccionParo = ${msg.payload.ClaSeccionParo || 'NULL'}\n                        ,ClaUsuarioMod = ${msg.payload.ClaUsuarioMod || 'NULL'}\n                        ,NombrePcMod = '${msg.payload.NombrePcMod || 'NULL'}'\n                         ,NombreEmpleado = '${msg.payload.NombreEmpleado || 'NULL'}'\n                        ,Comentarios = '${msg.payload.Comentarios || 'NULL'}'\n                        ,FechaUltimaMod = datetime('now','localtime')\n                        ,ClaEstatusReplica = 1\n                        ,ClaEventoJustificacion = CASE WHEN ('${msg.payload.Estatus}' = 'MICRO' AND ${msg.payload.EsJustificado} = 0) OR ('${msg.payload.Estatus}' = 'NUEVO' AND ${msg.payload.EsJustificado} = 0) \n                                                        THEN 1\n                                                        ELSE ClaEventoJustificacion \n                                                  END\n                        ,ClaEventoReasignacion =  CASE WHEN ${msg.payload.EsJustificado} = 1 THEN 1 ELSE ClaEventoReasignacion END\n                        ,FechaHoraJustificado = CASE WHEN ('${msg.payload.Estatus}' = 'MICRO' AND ${msg.payload.EsJustificado} = 0) OR ('${msg.payload.Estatus}' = 'NUEVO' AND ${msg.payload.EsJustificado} = 0) \n                                                        THEN DATETIME('now','localtime')\n                                                    ELSE FechaHoraJustificado \n                                                END\n                        ,FechaHoraReasignado =  CASE WHEN ('${msg.payload.Estatus}' = 'MICRO' AND ${msg.payload.EsJustificado} = 1) \n                                                     OR   ('${msg.payload.Estatus}' = 'NUEVO' AND ${msg.payload.EsJustificado} = 1) \n                                                     OR   ('${msg.payload.Estatus}' = 'PROCESO' AND ${msg.payload.EsJustificado} = 1)\n                                                        THEN DATETIME('now','localtime')\n                                                    ELSE FechaHoraJustificado \n                                                END\n                        ,FechaHoraAtencion = CASE WHEN ClaSeccionParo <> ${msg.payload.ClaSeccionParo} THEN NULL ELSE FechaHoraAtencion END \n                    WHERE IdAgrupador = ${msg.payload.IdAgrupador };`\n}else{\n    msg.topic = `UPDATE [AswLite_BitParos]\nSET ClaSeccionParo = ${msg.payload.ClaSeccionParo || 'NULL'}\n    ,ClaUsuarioMod = ${msg.payload.ClaUsuarioMod || 'NULL'}\n    ,NombrePcMod = '${msg.payload.NombrePcMod || 'NULL'}'\n     ,NombreEmpleado = '${msg.payload.NombreEmpleado || 'NULL'}'\n    ,Comentarios = '${msg.payload.Comentarios || 'NULL'}'\n    ,FechaUltimaMod = datetime('now','localtime')\n    ,ClaEstatusReplica = 1\n    ,ClaEventoJustificacion = CASE WHEN ('${msg.payload.Estatus}' = 'MICRO' AND ${msg.payload.EsJustificado} = 0) OR ('${msg.payload.Estatus}' = 'NUEVO' AND ${msg.payload.EsJustificado} = 0) \n                                    THEN 1\n                                    ELSE ClaEventoJustificacion \n                              END\n    ,ClaEventoReasignacion =  CASE WHEN ${msg.payload.EsJustificado} = 1 THEN 1 ELSE ClaEventoReasignacion END\n    ,FechaHoraJustificado = CASE WHEN ('${msg.payload.Estatus}' = 'MICRO' AND ${msg.payload.EsJustificado} = 0) OR ('${msg.payload.Estatus}' = 'NUEVO' AND ${msg.payload.EsJustificado} = 0) \n                                    THEN DATETIME('now','localtime')\n                                ELSE FechaHoraJustificado \n                            END\n    ,FechaHoraReasignado =  CASE WHEN ('${msg.payload.Estatus}' = 'MICRO' AND ${msg.payload.EsJustificado} = 1) \n                                 OR   ('${msg.payload.Estatus}' = 'NUEVO' AND ${msg.payload.EsJustificado} = 1) \n                                 OR   ('${msg.payload.Estatus}' = 'PROCESO' AND ${msg.payload.EsJustificado} = 1)\n                                    THEN DATETIME('now','localtime')\n                                ELSE FechaHoraJustificado \n                            END\n    ,FechaHoraAtencion = CASE WHEN ClaSeccionParo <> ${msg.payload.ClaSeccionParo} THEN NULL ELSE FechaHoraAtencion END \nWHERE IdParo = ${msg.payload.IdParo || 'NULL'}\n;`\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 2380,
        "wires": [
            [
                "332e6040.06baf"
            ]
        ],
        "info": "OPs locales"
    },
    {
        "id": "50751e30caca8870",
        "type": "function",
        "z": "810e3309.5f05f",
        "name": "FnAtenderParoProc",
        "func": "\nif(msg.payload.IdAgrupador){\n    msg.topic = `UPDATE [AswLite_BitParos]\n    SET  ClaUsuarioMod = ${msg.payload.ClaUsuarioMod || 'NULL'}\n        ,NombrePcMod = '${msg.payload.NombrePcMod || 'NULL'}'\n        ,FechaUltimaMod = datetime('now','localtime')\n        ,ClaEstatusReplica = 1\n        ,ClaEventoAtencion = 1\n        ,FechaHoraAtencion = datetime('now','localtime')\n    WHERE IdAgrupador = ${msg.payload.IdAgrupador};`\n\n}else{\n     msg.topic = `UPDATE [AswLite_BitParos]\n    SET  ClaUsuarioMod = ${msg.payload.ClaUsuarioMod || 'NULL'}\n        ,NombrePcMod = '${msg.payload.NombrePcMod || 'NULL'}'\n        ,FechaUltimaMod = datetime('now','localtime')\n        ,ClaEstatusReplica = 1\n        ,ClaEventoAtencion = 1\n        ,FechaHoraAtencion = datetime('now','localtime')\n    WHERE IdParo = ${msg.payload.IdParo}`\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 2420,
        "wires": [
            [
                "332e6040.06baf"
            ]
        ],
        "info": "OPs locales"
    },
    {
        "id": "0093fd9accdaf74b",
        "type": "function",
        "z": "810e3309.5f05f",
        "name": "FnSolucionarParoProc",
        "func": "//ASIGNAMOS EL IDCOMPONENTE PARA PROCESAR EN BITACORA DE PAROS\nmsg.IdComponente = msg.payload.IdComponente || null;\n\nif(msg.payload.IdAgrupador){\n    msg.topic = `UPDATE [AswLite_BitParos]\n                    SET  ClaUsuarioMod = ${msg.payload.ClaUsuarioMod || 'NULL'}\n                        ,NombrePcMod = '${msg.payload.NombrePcMod || 'NULL'}'\n                        ,ComentariosSolucion = '${msg.payload.ComentarioJustificacion || 'NULL'}'\n                        ,FechaUltimaMod = datetime('now','localtime')\n                        ,ClaEstatusReplica = 1\n                        ,ClaEventoSolucionado = 1\n                        ,FechaHoraSolucion = datetime('now','localtime')\n                    WHERE IdAgrupador = ${msg.payload.IdAgrupador}` \n}\nelse{\n    msg.topic = `UPDATE [AswLite_BitParos]\n                    SET  ClaUsuarioMod = ${msg.payload.ClaUsuarioMod || 'NULL'}\n                        ,NombrePcMod = '${msg.payload.NombrePcMod || 'NULL'}'\n                        ,ComentariosSolucion = '${msg.payload.ComentarioJustificacion || 'NULL'}'\n                        ,FechaUltimaMod = datetime('now','localtime')\n                        ,ClaEstatusReplica = 1\n                        ,ClaEventoSolucionado = 1\n                        ,FechaHoraSolucion = datetime('now','localtime')\n                    WHERE IdParo = ${msg.payload.IdParo || 'NULL'};`\n}\n\n\nmsg.EsParoSolucionado = 1;\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 2500,
        "wires": [
            [
                "63f9934c.9aa42c",
                "192f3d0bd5a0f8b1"
            ]
        ],
        "info": "OPs locales"
    },
    {
        "id": "34b8874ef0a6ce05",
        "type": "function",
        "z": "810e3309.5f05f",
        "name": "FnDesagruparParo",
        "func": "let IdParo = msg.payload.IdParo ? msg.payload.IdParo : null\n\nif(!IdParo){\n    //No hacer nada si IdParo no está definido\n    return null;\n}\n\nmsg.topic = `\nUPDATE AswLite_BitParos\nSET IdAgrupador = NULL\nWHERE IdParo = ${IdParo}\n`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 2600,
        "wires": [
            [
                "63f9934c.9aa42c"
            ]
        ]
    },
    {
        "id": "fa391d336e5aa640",
        "type": "http in",
        "z": "810e3309.5f05f",
        "name": "CU204_Pag1_DesagruparParo",
        "url": "/sqlite/CU204_Pag1_DesagruparParo",
        "method": "put",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 2600,
        "wires": [
            [
                "34b8874ef0a6ce05"
            ]
        ]
    },
    {
        "id": "46cc5bfec65393e4",
        "type": "http in",
        "z": "810e3309.5f05f",
        "name": "CU999_Pag7_SugerenciaHorometros",
        "url": "/sqlite/CU999_Pag7_SugerenciaHorometros",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 190,
        "y": 3820,
        "wires": [
            [
                "64bf1835047de1bb"
            ]
        ]
    },
    {
        "id": "90ad77ccf7e4b7a0",
        "type": "link out",
        "z": "810e3309.5f05f",
        "name": "",
        "links": [
            "1d46ebd54184536d"
        ],
        "x": 805,
        "y": 3820,
        "wires": []
    },
    {
        "id": "1d46ebd54184536d",
        "type": "link in",
        "z": "810e3309.5f05f",
        "name": "",
        "links": [
            "90ad77ccf7e4b7a0",
            "af0a54e12793b988"
        ],
        "x": 1035,
        "y": 3100,
        "wires": [
            [
                "552a9c14.79d914"
            ]
        ]
    },
    {
        "id": "06b7bd1bea8a680b",
        "type": "function",
        "z": "810e3309.5f05f",
        "name": "FnActualizaFolioBitacora",
        "func": "msg.topic = `UPDATE AswLite_CatFolioBitacora\nSET Folio = Folio + 1\nWHERE ClaveFolioBitacora = 'FolBitAndon'`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 2960,
        "wires": [
            [
                "c501ab8b22b46449"
            ]
        ]
    },
    {
        "id": "4d6f6683981ce713",
        "type": "sqlite",
        "z": "810e3309.5f05f",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 1010,
        "y": 2960,
        "wires": [
            [
                "552a9c14.79d914"
            ]
        ]
    },
    {
        "id": "db526979470d5f1f",
        "type": "http in",
        "z": "810e3309.5f05f",
        "name": "CU165_Pag1_CajasTurno",
        "url": "/sqlite/CU165_Pag1_CajasTurno",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 2160,
        "wires": [
            [
                "661772b5a707885b"
            ]
        ]
    },
    {
        "id": "661772b5a707885b",
        "type": "function",
        "z": "810e3309.5f05f",
        "name": "FnObtenerCajasPorTurno",
        "func": "msg.topic=`SELECT COUNT(1) AS CajasTerminadas \n    FROM ASWLite_TraFinCajaMCSW Fin\n    JOIN ASWLite_TraOrdenProduccionDet Podet\n        ON  Fin.IdPo = Podet.IdPo\n        AND Fin.IdUnidadCaja = Podet.IdUnidad\n    WHERE Fin.ClaTurno = ${global.get('ClaTurno')}\n    and DATE(Podet.FechaFinAdm)=DATE('${global.get('FechaAdm')}');`;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 2160,
        "wires": [
            [
                "5a3d50bee46bd69b"
            ]
        ]
    },
    {
        "id": "5a3d50bee46bd69b",
        "type": "link out",
        "z": "810e3309.5f05f",
        "name": "",
        "links": [
            "4c899c86.2aef94"
        ],
        "x": 715,
        "y": 2160,
        "wires": []
    },
    {
        "id": "32a5a02061ac1789",
        "type": "subflow:a593733916e04f5f",
        "z": "810e3309.5f05f",
        "name": "",
        "x": 550,
        "y": 3600,
        "wires": [
            [
                "4f2fb8981ff9478e"
            ]
        ]
    },
    {
        "id": "dc7303feabe469ed",
        "type": "http in",
        "z": "810e3309.5f05f",
        "name": "CU999_Pag6_ObtenerUltimoCheck",
        "url": "/sqlite/CU999_Pag6_ObtenerUltimoCheck",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 180,
        "y": 3680,
        "wires": [
            [
                "21a7fca468be7565"
            ]
        ]
    },
    {
        "id": "21a7fca468be7565",
        "type": "function",
        "z": "810e3309.5f05f",
        "name": "QryGetUltimoCheck",
        "func": "msg.topic = `\nSELECT  ClaArticulo \n       ,Evento\nFROM ASWLite_TraReporteProduccion\nWHERE IdCelda = ${global.get('celda')}\nAND ClaTurno = ${global.get('ClaTurno')}\nORDER by Id DESC\nLIMIT 1`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 3680,
        "wires": [
            [
                "60ef1204315f3586"
            ]
        ]
    },
    {
        "id": "60ef1204315f3586",
        "type": "sqlite",
        "z": "810e3309.5f05f",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 630,
        "y": 3680,
        "wires": [
            [
                "4f2fb8981ff9478e"
            ]
        ]
    },
    {
        "id": "4f2fb8981ff9478e",
        "type": "link out",
        "z": "810e3309.5f05f",
        "name": "",
        "links": [
            "4600f1f1.8161c"
        ],
        "x": 775,
        "y": 3640,
        "wires": []
    },
    {
        "id": "64bf1835047de1bb",
        "type": "subflow:63ea8e21528482a0",
        "z": "810e3309.5f05f",
        "name": "",
        "env": [],
        "x": 550,
        "y": 3820,
        "wires": [
            [
                "90ad77ccf7e4b7a0"
            ]
        ]
    },
    {
        "id": "1c0792b7976a9e69",
        "type": "function",
        "z": "810e3309.5f05f",
        "name": "FnAndonSel",
        "func": "let IdAndon = msg.payload.IdAndon ? msg.payload.IdAndon : null\n\nmsg.topic = `SELECT [IdAndon]\n\t,COALESCE(cm.NomMaquina,'NO_NAME_AVAILABLE') || ' ' || COALESCE(ABCMachine,'') AS NomMaquina\n\t,[fechaHoraInicial] AS StartTime\n\t,[fechaHoraFinal] AS EndTime\n\t,COALESCE([DuracionSegundos], (strftime('%s', datetime('now','localtime')) - strftime('%s', [fechaHoraInicial]))) AS Duration\n\t,rtg.[claGpoParo]\n\t,[nomGpoParo]\n\t,rtg.ClaTipoParo\n\t,tp.NomTipoParo\n\t,sp.NomSeccionParo\n\t--,[claParo]\n\t,ba.[claSeccionParo]\n\t,COALESCE(nomGpoParo || ' - ','') || COALESCE (tp.NomTipoParo, '') as NomGpoYTipo\n\t,CASE WHEN ba.ClaSeccionParo IS NULL OR ba.ClaSeccionParo = (SELECT valor1 FROM ASWLite_CfgConfiguracion WHERE ClaveConfiguracion = 'AUTOJUSTIFICA') THEN 0 ELSE 1 END AS EsJustificado\n\t,COALESCE(nomGpoParo || ' - ','') || COALESCE (tp.NomTipoParo || ' - ', '') || NomSeccionParo AS NomJustificacion\n          ,FechaHoraReasignado\n          ,FechaHoraAtencion\n          ,FechaHoraFinal\n          ,CASE\n                WHEN (ba.FechaHoraAtencion IS NULL) THEN 'NUEVO'\n                WHEN (ba.FechaHoraAtencion IS NOT NULL AND ba.FechaHoraFinal IS NULL) THEN 'PROCESO'\n                WHEN (ba.FechaHoraFinal IS NOT NULL) THEN 'SOLUCIONADO'\n           END AS Estatus  \n    ,RCSP.Categoria\n    ,RCSP.Color\nFROM AswLite_BitAndon ba\nLEFT JOIN ASWLite_CatWorkUnit cm\n\tON ba.IdComponente = cm.claMaquina\nLEFT JOIN ASWLite_CatSeccionParo sp\n\tON ba.ClaSeccionParo = sp.ClaSeccionParo\nLEFT JOIN ASWLite_RelTipoParoGpoParo rtg\n\tON sp.IdTipoParoGpoParo=rtg.IdTipoParoGpoParo\n    and sp.ClaSeccionParo = rtg.ClaTipoParo\nLEFT JOIN ASWLite_CatTipoParo tp\n\tON rtg.ClaTipoParo = tp.ClaTipoParo\nLEFT JOIN ASWLite_CatGpoParo gp\n\tON rtg.ClaGpoParo = gp.ClaGpoParo\nLEFT JOIN ASWLite_RelColorSeccionParo RCSP\n          ON RCSP.ClaUbicacion = ba.ClaUbicacion\n          AND RCSP.ClaArea IN (0,2,${global.get('ClaArea')})\n          AND RCSP.ClaSeccionParo = ba.ClaSeccionParo\nWHERE ba.BajaLogica = 0\nAND (ba.IdAndon = ${IdAndon}\n    OR ${IdAndon} IS NULL\n        AND (ba.ClaTurno = ${msg.payload.ClaTurno || 0}\n        AND ba.FechaAdmScada = ${msg.payload.FechaAdmScada || null}\n        OR FechaHoraFinal IS NULL))\n;`\nconsole.log(msg.topic);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 3260,
        "wires": [
            [
                "d211b25c.a6058"
            ]
        ]
    },
    {
        "id": "19a20248aabbba97",
        "type": "function",
        "z": "810e3309.5f05f",
        "name": "FnSeccionParoSel",
        "func": "\nmsg.topic = `SELECT SP.ClaSeccionParo\n    ,SP.ClaveSeccionParo\n    ,SP.NomSeccionParo\nFROM ASWLite_CatSeccionParo SP\nLEFT JOIN ASWLite_RelAlertaSeccionParo RASP\n\tON SP.ClaUbicacion = RASP.ClaUbicacion\n\tAND SP.ClaArea = RASP.ClaArea\n\tAND SP.ClaSeccionParo = RASP.ClaSeccionParo\nLEFT JOIN ASWLite_RelAlertaTipoSeguimientoAlerta RATSA\n\tON RASP.ClaUbicacion = RATSA.ClaUbicacion\n\tAND RASP.ClaAlerta = RATSA.ClaAlerta\nLEFT JOIN ASWLite_CatTipoSeguimientoAlerta CTSA\n\tON RATSA.ClaUbicacion = CTSA.ClaUbicacion\n\tAND RATSA.ClaTipoSeguimientoAlerta = CTSA.ClaTipoSeguimientoAlerta\nWHERE SP.BajaLogica = 0\n    AND SP.ClaArea IN (${msg.payload.ClaArea || 0},0,2) \n    AND (COALESCE(SP.ClaveSeccionParo, '') LIKE '%${msg.payload.SearchReason}%'\n        OR COALESCE(SP.NomSeccionParo, '') LIKE '%${msg.payload.SearchReason}%')\n    AND (${msg.payload.ClaGpoParo || null} is null or SP.IdTipoParoGpoParo = ${msg.payload.ClaGpoParo || null} )\n    AND (${msg.payload.IdTipoSeguimientoAlerta} IS NULL OR ${msg.payload.IdTipoSeguimientoAlerta} = CTSA.clatiposeguimientoalerta)\n;`\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 3300,
        "wires": [
            [
                "d211b25c.a6058"
            ]
        ],
        "info": "OPs locales"
    },
    {
        "id": "f6efa6f70165aeb4",
        "type": "function",
        "z": "810e3309.5f05f",
        "name": "FnCatGpoParoSel",
        "func": "msg.topic = `\nSELECT gp.ClaUbicacion,\n       gp.ClaGpoParo,\n       gp.NomGpoParo\nFROM ASWLite_CatSeccionParo sp\nJOIN ASWLite_RelTipoParoGpoParo rtg\nON sp.IdTipoParoGpoParo=rtg.IdTipoParoGpoParo\nAND SP.ClaSeccionParo   = rtg.ClaTipoParo\nJOIN ASWLite_CatTipoParo tp\nON rtg.ClaTipoParo = tp.ClaTipoParo\nJOIN ASWLite_CatGpoParo gp\nON rtg.ClaGpoParo = gp.ClaGpoParo\nwhere ClaArea IN (${msg.payload.ClaArea || 0},0,2) \ngroup by   gp.ClaUbicacion,\n       gp.ClaGpoParo,\n       gp.NomGpoParo\n`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 3400,
        "wires": [
            [
                "d211b25c.a6058"
            ]
        ]
    },
    {
        "id": "28d888c214c71a48",
        "type": "function",
        "z": "810e3309.5f05f",
        "name": "FnDowntimesSel",
        "func": "let IdParo = msg.payload.IdParo ? msg.payload.IdParo : null\nlet IdAgrupador = msg.payload.IdAgrupador ? msg.payload.IdAgrupador : null\n\nmsg.topic = `\n    ;WITH CteTiempoMicroParo AS (\n        SELECT valor1 * 60 as TiempoMicroParo\n        FROM ASWLite_CfgConfiguracion\n        WHERE ClaveConfiguracion = 'MICROPARO'\n    )\n    SELECT [IdParo]\n\t,COALESCE(cm.NomMaquina,'NO_NAME_AVAILABLE') || ' ' || COALESCE(ABCMachine,'') AS NomMaquina\n\t,cm.ClaMaquina AS IdComponente\n\t,[fechaHoraInicial] AS StartTime\n\t,[fechaHoraFinal] AS EndTime\n\t,COALESCE([DuracionSegundos], (strftime('%s', datetime('now','localtime')) - strftime('%s', [fechaHoraInicial]))) AS Duration\n\t,rtg.[claGpoParo]\n\t,[nomGpoParo]\n\t,rtg.ClaTipoParo\n\t,tp.NomTipoParo\n\t,[claParo]\n\t,bp.[claSeccionParo]\n\t,sp.NomSeccionParo\n\t,COALESCE(nomGpoParo || ' - ','') || COALESCE (tp.NomTipoParo, '') as NomGpoYTipo\n\t,CASE WHEN bp.ClaSeccionParo IS NULL OR bp.ClaSeccionParo = (SELECT valor1 FROM ASWLite_CfgConfiguracion WHERE ClaveConfiguracion = 'AUTOJUSTIFICA') THEN 0 ELSE 1 END AS EsJustificado\n\t,COALESCE(nomGpoParo || ' - ','') || COALESCE (tp.NomTipoParo || ' - ', '') || NomSeccionParo AS NomJustificacion\n          ,FechaHoraJustificado\n          ,FechaHoraReasignado\n          ,FechaHoraAtencion\n          ,FechaHoraSolucion\n          ,CASE WHEN (bp.microParoSN = 1 OR bp.microParoSN IS NULL ) \n                     AND bp.ClaSeccionParo IS NULL \n                     AND COALESCE([DuracionSegundos], (strftime('%s', datetime('now','localtime')) - strftime('%s', [fechaHoraInicial]))) < (SELECT TiempoMicroParo FROM CteTiempoMicroParo)\n                    THEN 'MICRO'\n                WHEN (bp.FechaHoraAtencion IS NULL) \n                     THEN 'NUEVO'\n                WHEN (bp.FechaHoraAtencion IS NOT NULL AND bp.FechaHoraSolucion IS NULL) \n                     THEN 'PROCESO'\n                WHEN (bp.FechaHoraSolucion IS NOT NULL) \n                     THEN 'SOLUCIONADO'\n           END AS Estatus\n    ,RCSP.Categoria\n    ,RCSP.Color\n    ,bp.IdAgrupador\nFROM [AswLite_BitParos] bp\nLEFT JOIN ASWLite_CatWorkUnit cm\n\tON bp.IdComponente = cm.claMaquina\nLEFT JOIN ASWLite_CatSeccionParo sp\n\tON bp.ClaSeccionParo = sp.ClaSeccionParo\nLEFT JOIN ASWLite_RelTipoParoGpoParo rtg\n\tON sp.IdTipoParoGpoParo=rtg.IdTipoParoGpoParo\n\tAND SP.ClaSeccionParo   = rtg.ClaTipoParo\nLEFT JOIN ASWLite_CatTipoParo tp\n\tON rtg.ClaTipoParo = tp.ClaTipoParo\nLEFT JOIN ASWLite_CatGpoParo gp\n\tON rtg.ClaGpoParo = gp.ClaGpoParo\nLEFT JOIN ASWLite_RelColorSeccionParo RCSP\n          ON  RCSP.ClaUbicacion = bp.ClaUbicacion\n          AND RCSP.ClaArea IN (0,2,${global.get('ClaArea')})\n          AND RCSP.ClaSeccionParo = bp.ClaSeccionParo\nWHERE bp.BajaLogica = 0\nAND fechaAdmScada = '${global.get('FechaAdm') || 'NULL'}'\nAND ClaTurno = ${global.get('ClaTurno') || 0}\nAND (${IdParo} IS NULL OR bp.IdParo = ${IdParo}) \nAND ( ${IdAgrupador} IS NULL OR bp.IdAgrupador = ${IdAgrupador})\nAND (bp.microParoSN <> 1 OR bp.microParoSN IS NULL )\nAND cm.EsMaquina = 1\nOR (${msg.payload.VerTodo}=1 \n    AND ( bp.ClaSeccionParo IS NULL \n         OR bp.ClaSeccionParo = (SELECT valor1 FROM ASWLite_CfgConfiguracion WHERE ClaveConfiguracion = 'AUTOJUSTIFICA') \n        )\n    AND (bp.microParoSN <> 1 OR bp.microParoSN IS NULL )\n    )\norder by bp.ClaEventoSolucionado\n    ,bp.ClaEventoAtencion\n    ,bp.ClaEventoJustificacion\n    ,bp.microParoSn\n    ,bp.IdComponente\n    ,bp.fechaHoraInicial\n        desc\n`\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 2200,
        "wires": [
            [
                "fc0eac67.735d6"
            ]
        ],
        "info": "OPs locales"
    },
    {
        "id": "db9196e4ff8ef5d9",
        "type": "function",
        "z": "810e3309.5f05f",
        "name": "FnSeccionParoSel",
        "func": "\nmsg.topic = `\nSELECT ClaSeccionParo\n      ,ClaveSeccionParo\n      ,NomSeccionParo\nFROM [ASWLite_CatSeccionParo] \nWHERE BajaLogica = 0\n    AND ClaArea IN (${msg.payload.ClaArea || 0},0,2) \n    AND (COALESCE(ClaveSeccionParo, '') LIKE '%${msg.payload.SearchReason}%'\n        OR COALESCE(NomSeccionParo, '') LIKE '%${msg.payload.SearchReason}%')\n    AND (${msg.payload.ClaGpoParo || null} is null or IdTipoParoGpoParo = ${msg.payload.ClaGpoParo || null} )`;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 2239,
        "wires": [
            [
                "fc0eac67.735d6"
            ]
        ],
        "info": "OPs locales"
    },
    {
        "id": "e50f3babece9d33b",
        "type": "function",
        "z": "810e3309.5f05f",
        "name": "FnCatGpoParoSel",
        "func": "msg.topic = `\nSELECT gp.ClaUbicacion,\n       gp.ClaGpoParo,\n       gp.NomGpoParo\nFROM ASWLite_CatSeccionParo sp\nJOIN ASWLite_RelTipoParoGpoParo rtg\n    ON sp.IdTipoParoGpoParo=rtg.IdTipoParoGpoParo\n    AND SP.ClaSeccionParo   = rtg.ClaTipoParo\nJOIN ASWLite_CatTipoParo tp\n    ON rtg.ClaTipoParo = tp.ClaTipoParo\nJOIN ASWLite_CatGpoParo gp\n    ON rtg.ClaGpoParo = gp.ClaGpoParo\nwhere ClaArea IN (${ global.get(\"ClaArea\")|| 0},0,2) \ngroup by   gp.ClaUbicacion,\n       gp.ClaGpoParo,\n       gp.NomGpoParo\n`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 2460,
        "wires": [
            [
                "332e6040.06baf"
            ]
        ]
    },
    {
        "id": "0be08960a7796472",
        "type": "function",
        "z": "810e3309.5f05f",
        "name": "FnParentDowntimesSel",
        "func": "let IdParo = msg.payload.IdParo ? msg.payload.IdParo : null\nlet IdAgrupador = msg.payload.IdAgrupador ? msg.payload.IdAgrupador : null\nlet mostrarActivos = msg.payload.mostrarActivos ? msg.payload.mostrarActivos : null\nlet mostrarNoJustificados = msg.payload.mostrarNoJustificados ? msg.payload.mostrarNoJustificados : null\n\nmsg.topic = `\n    ;WITH CteTiempoMicroParo AS (\n        SELECT valor1 * 60 as TiempoMicroParo\n        FROM ASWLite_CfgConfiguracion\n        WHERE ClaveConfiguracion = 'MICROPARO'\n    )\nSELECT [IdParo] as IdParoParent\n\t,GROUP_CONCAT(\n\t    CASE cm.ClaTipoMaquina\n            WHEN 1 THEN 'HEADER'\n            WHEN 2 THEN 'THREADER'\n            WHEN 3 THEN 'COLLATOR'\n            WHEN 4 THEN 'CLEANER'\n            WHEN 6 THEN 'ROBOT'\n        END \n     ,'/') as NomMaquinaParent\n\t,cm.ClaMaquina AS IdComponenteParent\n\t,min([fechaHoraInicial]) AS StartTimeParent\n\t,min([fechaHoraFinal]) AS EndTimeParent\n\t,COALESCE([DuracionSegundos], (strftime('%s', datetime('now','localtime')) - strftime('%s', [fechaHoraInicial]))) AS DurationParent\n\t,rtg.[claGpoParo] as claGpoParoParent\n\t,[nomGpoParo] as nomGpoParoParent\n\t,rtg.ClaTipoParo as ClaTipoParoParent\n\t,tp.NomTipoParo as NomTipoParoParent\n\t,[claParo] as claParoParent \n\t,bp.[claSeccionParo] as claSeccionParoParent\n\t,sp.NomSeccionParo as NomSeccionParoParent\n\t,COALESCE(nomGpoParo || ' - ','') || COALESCE (tp.NomTipoParo, '') as NomGpoYTipoParent\n\t,CASE WHEN bp.ClaSeccionParo IS NULL OR bp.ClaSeccionParo = (SELECT valor1 FROM ASWLite_CfgConfiguracion WHERE ClaveConfiguracion = 'AUTOJUSTIFICA') THEN 0 ELSE 1 END AS EsJustificadoParent\n\t,COALESCE(nomGpoParo || ' - ','') || COALESCE (tp.NomTipoParo || ' - ', '') || NomSeccionParo AS NomJustificacionParent\n          ,FechaHoraJustificado as FechaHoraJustificadoParent\n          ,FechaHoraReasignado as FechaHoraReasignadoParent\n          ,FechaHoraAtencion as FechaHoraAtencionParent\n          ,FechaHoraSolucion as FechaHoraSolucionParent\n          ,CASE WHEN (bp.microParoSN = 1 OR bp.microParoSN IS NULL ) \n                     AND bp.ClaSeccionParo IS NULL \n                     AND COALESCE([DuracionSegundos], (strftime('%s', datetime('now','localtime')) - strftime('%s', [fechaHoraInicial]))) < (SELECT TiempoMicroParo FROM CteTiempoMicroParo)\n                    THEN 'MICRO'\n                WHEN (bp.FechaHoraAtencion IS NULL) \n                     THEN 'NUEVO'\n                WHEN (bp.FechaHoraAtencion IS NOT NULL AND bp.FechaHoraSolucion IS NULL) \n                     THEN 'PROCESO'\n                WHEN (bp.FechaHoraSolucion IS NOT NULL) \n                     THEN 'SOLUCIONADO'\n           END AS EstatusParent\n    ,RCSP.Categoria as CategoriaParent\n    ,RCSP.Color as ColorParent\n    ,bp.IdAgrupador as IdAgrupadorParent\n    ,ClaEventoSolucionado as ClaEventoSolucionadoParent\n    ,ClaEventoAtencion as ClaEventoAtencionParent\n    ,ClaEventoJustificacion as ClaEventoJustificacionParent\n    ,microParoSn as microParoSnParent\n    ,fechaHoraInicial as microParoSnParent\nFROM [AswLite_BitParos] bp\nLEFT JOIN ASWLite_CatWorkUnit cm\n\tON bp.IdComponente = cm.claMaquina\nLEFT JOIN ASWLite_CatSeccionParo sp\n\tON bp.ClaSeccionParo = sp.ClaSeccionParo\nLEFT JOIN ASWLite_RelTipoParoGpoParo rtg\n\tON sp.IdTipoParoGpoParo=rtg.IdTipoParoGpoParo\n\tAND SP.ClaSeccionParo   = rtg.ClaTipoParo\nLEFT JOIN ASWLite_CatTipoParo tp\n\tON rtg.ClaTipoParo = tp.ClaTipoParo\nLEFT JOIN ASWLite_CatGpoParo gp\n\tON rtg.ClaGpoParo = gp.ClaGpoParo\nLEFT JOIN ASWLite_RelColorSeccionParo RCSP\n          ON  RCSP.ClaUbicacion = bp.ClaUbicacion\n          AND RCSP.ClaArea IN (0,2,${global.get('ClaArea')})\n          AND RCSP.ClaSeccionParo = bp.ClaSeccionParo\nWHERE bp.BajaLogica = 0\nAND iDAgrupador IS NOT NULL\nAND fechaAdmScada = '${global.get('FechaAdm') || 'NULL'}'\nAND ClaTurno = ${global.get('ClaTurno') || 0}\nAND (${IdParo} IS NULL OR bp.IdParo = ${IdParo}) \nAND (${IdAgrupador} IS NULL OR bp.IdAgrupador = ${IdAgrupador})\nAND (bp.microParoSN <> 1 OR bp.microParoSN IS NULL )\nAND cm.EsMaquina = 1\nAND (${mostrarNoJustificados} is null or bp.claseccionparo = (SELECT valor1 FROM ASWLite_CfgConfiguracion WHERE ClaveConfiguracion = 'AUTOJUSTIFICA') )\nGROUP BY IdAgrupador    \nHAVING  (${mostrarActivos} is null or (${mostrarActivos} = 1 and (count(*) <> count(fechahorafinal) ) ) )\n\n\nUNION ALL\n\nSELECT [IdParo] as IdParoParent\n\t,COALESCE(cm.NomMaquina,'NO_NAME_AVAILABLE') || ' ' || COALESCE(ABCMachine,'') AS NomMaquinaParent\n\t,cm.ClaMaquina AS IdComponenteParent\n\t,[fechaHoraInicial] AS StartTimeParent\n\t,[fechaHoraFinal] AS EndTimeParent\n\t,COALESCE([DuracionSegundos], (strftime('%s', datetime('now','localtime')) - strftime('%s', [fechaHoraInicial]))) AS DurationParent\n\t,rtg.[claGpoParo] as claGpoParoParent\n\t,[nomGpoParo] as nomGpoParoParent\n\t,rtg.ClaTipoParo as ClaTipoParoParent\n\t,tp.NomTipoParo as NomTipoParoParent\n\t,[claParo] as claParoParent \n\t,bp.[claSeccionParo] as claSeccionParoParent\n\t,sp.NomSeccionParo as NomSeccionParoParent\n\t,COALESCE(nomGpoParo || ' - ','') || COALESCE (tp.NomTipoParo, '') as NomGpoYTipoParent\n\t,CASE WHEN bp.ClaSeccionParo IS NULL OR bp.ClaSeccionParo = (SELECT valor1 FROM ASWLite_CfgConfiguracion WHERE ClaveConfiguracion = 'AUTOJUSTIFICA') THEN 0 ELSE 1 END AS EsJustificadoParent\n\t,COALESCE(nomGpoParo || ' - ','') || COALESCE (tp.NomTipoParo || ' - ', '') || NomSeccionParo AS NomJustificacionParent\n          ,FechaHoraJustificado as FechaHoraJustificadoParent\n          ,FechaHoraReasignado as FechaHoraReasignadoParent\n          ,FechaHoraAtencion as FechaHoraAtencionParent\n          ,FechaHoraSolucion as FechaHoraSolucion\n          ,CASE WHEN (bp.microParoSN = 1 OR bp.microParoSN IS NULL ) \n                     AND bp.ClaSeccionParo IS NULL \n                     AND COALESCE([DuracionSegundos], (strftime('%s', datetime('now','localtime')) - strftime('%s', [fechaHoraInicial]))) < (SELECT TiempoMicroParo FROM CteTiempoMicroParo)\n                    THEN 'MICRO'\n                WHEN (bp.FechaHoraAtencion IS NULL) \n                     THEN 'NUEVO'\n                WHEN (bp.FechaHoraAtencion IS NOT NULL AND bp.FechaHoraSolucion IS NULL) \n                     THEN 'PROCESO'\n                WHEN (bp.FechaHoraSolucion IS NOT NULL) \n                     THEN 'SOLUCIONADO'\n           END AS EstatusParent\n    ,RCSP.Categoria as CategoriaParent\n    ,RCSP.Color as ColorParent\n    ,bp.IdAgrupador as IdAgrupadorParent\n    ,ClaEventoSolucionado as ClaEventoSolucionadoParent\n    ,ClaEventoAtencion as ClaEventoAtencionParent\n    ,ClaEventoJustificacion as ClaEventoJustificacionParent\n    ,microParoSn as microParoSnParent\n    ,fechaHoraInicial as microParoSnParent\nFROM [AswLite_BitParos] bp\nLEFT JOIN ASWLite_CatWorkUnit cm\n\tON bp.IdComponente = cm.claMaquina\nLEFT JOIN ASWLite_CatSeccionParo sp\n\tON bp.ClaSeccionParo = sp.ClaSeccionParo\nLEFT JOIN ASWLite_RelTipoParoGpoParo rtg\n\tON sp.IdTipoParoGpoParo=rtg.IdTipoParoGpoParo\n\tAND SP.ClaSeccionParo   = rtg.ClaTipoParo\nLEFT JOIN ASWLite_CatTipoParo tp\n\tON rtg.ClaTipoParo = tp.ClaTipoParo\nLEFT JOIN ASWLite_CatGpoParo gp\n\tON rtg.ClaGpoParo = gp.ClaGpoParo\nLEFT JOIN ASWLite_RelColorSeccionParo RCSP\n          ON  RCSP.ClaUbicacion = bp.ClaUbicacion\n           AND RCSP.ClaArea IN (0,2,${global.get('ClaArea')})\n          AND RCSP.ClaSeccionParo = bp.ClaSeccionParo\nWHERE bp.BajaLogica = 0\nAND fechaAdmScada = '${global.get('FechaAdm') || 'NULL'}'\nAND ClaTurno = ${global.get('ClaTurno') || 0}\nAND (${IdParo} IS NULL OR bp.IdParo = ${IdParo}) \nAND (${IdAgrupador} IS NULL OR bp.IdAgrupador = ${IdAgrupador})\nAND (bp.microParoSN <> 1 OR bp.microParoSN IS NULL )\nAND cm.EsMaquina = 1\nAND IdAgrupador is null\nAND (${mostrarActivos} is null or fechahorafinal is null)\nAND (${mostrarNoJustificados} is null or bp.claseccionparo = (SELECT valor1 FROM ASWLite_CfgConfiguracion WHERE ClaveConfiguracion = 'AUTOJUSTIFICA') )\norder by ClaEventoSolucionado\n    ,ClaEventoAtencion\n    ,ClaEventoJustificacion\n    ,microParoSn\n    ,IdComponenteParent\n    ,fechaHoraInicial\n        desc\n\n\n`\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 2280,
        "wires": [
            [
                "fc0eac67.735d6"
            ]
        ],
        "info": "OPs locales"
    },
    {
        "id": "c501ab8b22b46449",
        "type": "subflow:10996779f0a53f03",
        "z": "810e3309.5f05f",
        "name": "",
        "x": 660,
        "y": 2960,
        "wires": [
            [
                "27a6a89.59fd158"
            ]
        ]
    },
    {
        "id": "d6b8cc6f7357b21a",
        "type": "catch",
        "z": "810e3309.5f05f",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 100,
        "y": 3980,
        "wires": [
            [
                "421b6d0fa6696a31"
            ]
        ]
    },
    {
        "id": "421b6d0fa6696a31",
        "type": "function",
        "z": "810e3309.5f05f",
        "name": "Error Handler",
        "func": "node.warn(`ERROR NO CONTROLADO >  ${env.get(\"NAME\")} > ${JSON.stringify(msg)}`)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 3980,
        "wires": [
            []
        ]
    },
    {
        "id": "192f3d0bd5a0f8b1",
        "type": "subflow:deda2d839f7f8b3b",
        "z": "810e3309.5f05f",
        "name": "",
        "x": 840,
        "y": 2560,
        "wires": [
            [
                "2c5f37a37b35922b"
            ]
        ]
    },
    {
        "id": "e48baec7.9d2da",
        "type": "MSSQL",
        "z": "77acd0d5.a92eb",
        "mssqlCN": "955d262e.b17988",
        "name": "ASWMSSQL",
        "outField": "payload",
        "returnType": "0",
        "throwErrors": "0",
        "query": "",
        "modeOpt": "",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "msg",
        "paramsOpt": "queryParams",
        "paramsOptType": "msg",
        "rows": "",
        "rowsType": "msg",
        "params": [],
        "x": 350,
        "y": 200,
        "wires": [
            [
                "3895fa92.fae326"
            ]
        ]
    },
    {
        "id": "384f2aa1.1bec06",
        "type": "http in",
        "z": "77acd0d5.a92eb",
        "name": "execute",
        "url": "/sqlserver/execute/",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 50,
        "y": 200,
        "wires": [
            [
                "4894d1be.f331f"
            ]
        ],
        "info": "Ejecuta un SP de la base de datos\nse debe enviar el siguiente objeto:\n\n`{sp_name:'ASW_CU1_Pag1_Usuarios_Sel',\n params: {clausuario: 1, nombre:'usuario1',...}\n}`\n\nsp_name = nombre del sp en la base de datos\nparams = objeto con los parametros a enviar al sp, los nombres deben coincidir con los del sp en la base de datos. \n"
    },
    {
        "id": "4894d1be.f331f",
        "type": "function",
        "z": "77acd0d5.a92eb",
        "name": "fnExecute",
        "func": "let qry = `EXECUTE ${msg.payload[\"sp_name\"]} `;\nlet params = msg.payload[\"params\"];\n\nif(params){\n    let paramsCount = Object.keys(params).length;\n\nObject.keys(params).forEach((key,idx)=>{\n    //console.log({key})\n    \n    //SI ES STRING HAY QUE AGREGAR COMILLAS\n    switch(typeof(params[key])){\n        case 'string':\n            qry += `@${key} = \"${params[key]}\"`;\n            break;\n        default: \n            qry += `@${key} = ${params[key]}`;\n            break;\n\n    }\n    //QUITAMOS LA COMA CUANDO ES EL ULITMO PARAMETRO           \n    qry += (idx === (paramsCount - 1)) ? '' : ',';\n\n\n})\n}\n\n\nmsg.payload = qry;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 200,
        "wires": [
            [
                "e48baec7.9d2da"
            ]
        ]
    },
    {
        "id": "82321861.ad0788",
        "type": "http response",
        "z": "77acd0d5.a92eb",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1070,
        "y": 180,
        "wires": []
    },
    {
        "id": "446bb2ba.5fdd6c",
        "type": "catch",
        "z": "77acd0d5.a92eb",
        "name": "ErrSQLServer",
        "scope": null,
        "uncaught": false,
        "x": 1050,
        "y": 260,
        "wires": [
            [
                "fd1dcbe2.cced98"
            ]
        ]
    },
    {
        "id": "fd1dcbe2.cced98",
        "type": "function",
        "z": "77acd0d5.a92eb",
        "name": "fnError",
        "func": "if (msg.error.message.includes('Failed to connect')){\n    msg.statusCode = 408\n}else{\n    msg.statusCode = 500\n}\nmsg.payload = {\n    Err:\"Error al ejecutar:\" + msg.payload+\" \"+msg.error.message,\n    ErrorMessage:msg.error.message\n}\nconsole.log(msg)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1090,
        "y": 220,
        "wires": [
            [
                "82321861.ad0788"
            ]
        ]
    },
    {
        "id": "3895fa92.fae326",
        "type": "switch",
        "z": "77acd0d5.a92eb",
        "name": "sw_xml_img",
        "property": "payload[0]",
        "propertyType": "msg",
        "rules": [
            {
                "t": "null"
            },
            {
                "t": "hask",
                "v": "xml",
                "vt": "str"
            },
            {
                "t": "hask",
                "v": "imagen",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 4,
        "x": 550,
        "y": 140,
        "wires": [
            [
                "82321861.ad0788"
            ],
            [
                "c8a10521.5484e8"
            ],
            [
                "1cfa822b.0c248e"
            ],
            [
                "82321861.ad0788"
            ]
        ]
    },
    {
        "id": "e55ccc67.a3207",
        "type": "function",
        "z": "77acd0d5.a92eb",
        "name": "extraerXmlString",
        "func": "msg.payload=msg.payload[0].xml\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 930,
        "y": 60,
        "wires": [
            [
                "6c761388.b300fc"
            ]
        ]
    },
    {
        "id": "6c761388.b300fc",
        "type": "xml",
        "z": "77acd0d5.a92eb",
        "name": "",
        "property": "payload",
        "attr": "att",
        "chr": "",
        "x": 910,
        "y": 100,
        "wires": [
            [
                "82321861.ad0788"
            ]
        ]
    },
    {
        "id": "c8a10521.5484e8",
        "type": "switch",
        "z": "77acd0d5.a92eb",
        "name": "",
        "property": "payload[0].xml",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 750,
        "y": 140,
        "wires": [
            [
                "e55ccc67.a3207"
            ],
            [
                "82321861.ad0788"
            ]
        ]
    },
    {
        "id": "1cfa822b.0c248e",
        "type": "function",
        "z": "77acd0d5.a92eb",
        "name": "fnProcImagen",
        "func": "bufferImagen = new Buffer(msg.payload[0].imagen).toString('utf8');\nmsg.payload[\"imagen\"] = bufferImagen\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 840,
        "y": 200,
        "wires": [
            [
                "82321861.ad0788"
            ]
        ]
    },
    {
        "id": "0634db372d30d351",
        "type": "catch",
        "z": "77acd0d5.a92eb",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 80,
        "y": 440,
        "wires": [
            [
                "0a85b6a6f81f0840"
            ]
        ]
    },
    {
        "id": "0a85b6a6f81f0840",
        "type": "function",
        "z": "77acd0d5.a92eb",
        "name": "Error Handler",
        "func": "node.warn(`ERROR NO CONTROLADO >  ${env.get(\"NAME\")} > ${JSON.stringify(msg)}`)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "695e7a84.859c84",
        "type": "inject",
        "z": "c4ab0b6f.953d68",
        "name": "ConfVariablesLocales",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.0",
        "topic": "",
        "payloadType": "date",
        "x": 140,
        "y": 120,
        "wires": [
            [
                "22fe4ab5.334126"
            ]
        ]
    },
    {
        "id": "e82fdd53.e8ba3",
        "type": "http in",
        "z": "c4ab0b6f.953d68",
        "name": "GetConfLocal",
        "url": "/getConfLocal",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 320,
        "wires": [
            [
                "493034fd.c8f71c"
            ]
        ]
    },
    {
        "id": "493034fd.c8f71c",
        "type": "function",
        "z": "c4ab0b6f.953d68",
        "name": "ObtenerValorConfLocal",
        "func": "var nombreVariable = msg.payload.variable;\n//var idcomponente = msg.payload.idComponente;\n\nnode.warn(nombreVariable)\nmsg.payload = global.get(nombreVariable);\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 350,
        "y": 320,
        "wires": [
            [
                "92db51db.3ba16"
            ]
        ]
    },
    {
        "id": "92db51db.3ba16",
        "type": "http response",
        "z": "c4ab0b6f.953d68",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 570,
        "y": 320,
        "wires": []
    },
    {
        "id": "3dc321f1.f645fe",
        "type": "http in",
        "z": "c4ab0b6f.953d68",
        "name": "getValorTablaVariables",
        "url": "/getValorTablaVariables",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 420,
        "wires": [
            [
                "1b4b534a.bab22d"
            ]
        ]
    },
    {
        "id": "1b4b534a.bab22d",
        "type": "function",
        "z": "c4ab0b6f.953d68",
        "name": "ObtenerValorConfLocal",
        "func": "var nombreCampo = msg.payload.campo;\nvar idComponente = msg.payload.IdComponente;\n\nif(nombreCampo && nombreCampo != \"\" && idComponente){\n  msg.topic = `SELECT ${nombreCampo} \n               FROM ASWLite_VariablesProduccion\n               WHERE idComponente = ${idComponente}`  ;\n}else{\n    if(nombreCampo && nombreCampo != \"\"){\n        msg.topic = `SELECT ${nombreCampo} \n                     FROM ASWLite_VariablesProduccion\n                     LIMIT 1`  ;\n    }else{\n        msg.topic = `SELECT *\n                     FROM ASWLite_VariablesProduccion`  ;\n    }\n}\n\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 390,
        "y": 420,
        "wires": [
            [
                "41826065.c2231"
            ]
        ]
    },
    {
        "id": "852d4f47.c5302",
        "type": "http response",
        "z": "c4ab0b6f.953d68",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 790,
        "y": 420,
        "wires": []
    },
    {
        "id": "47292db3.57d424",
        "type": "comment",
        "z": "c4ab0b6f.953d68",
        "name": "ConsultarTablaVariables",
        "info": "",
        "x": 150,
        "y": 380,
        "wires": []
    },
    {
        "id": "41826065.c2231",
        "type": "sqlite",
        "z": "c4ab0b6f.953d68",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 610,
        "y": 420,
        "wires": [
            [
                "852d4f47.c5302"
            ]
        ]
    },
    {
        "id": "e4839dde.c1bb3",
        "type": "function",
        "z": "c4ab0b6f.953d68",
        "name": "SetConfLocal",
        "func": "let datos = msg.payload[0];\n\n    global.set('departamento',datos.Departamento);\n    global.set('celda',datos.IdCelda)\n    global.set('ClaUbicacion',datos.ClaUbicacion);\n    global.set('ClaUsuarioMod',datos.ClaUsuarioMod);\n    global.set('NombrePcMod',datos.NombrePcMod);\n    global.set('IpAddress',datos.IpAdress);\n    global.set('ClaArea',datos.ClaArea)\n\nmsg.payload = `Configuracion de Estacion de trabajo: \nDepartamento: ${global.get('departamento')} \nCelda: ${global.get('celda')}\nClaUbicacion: ${global.get('ClaUbicacion')}`\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2440,
        "y": 120,
        "wires": [
            [
                "989209df.529618"
            ]
        ]
    },
    {
        "id": "f0952d8a.dc075",
        "type": "function",
        "z": "c4ab0b6f.953d68",
        "name": "Format",
        "func": "let dirIp = msg.payload.internalIPv4\n\nmsg.payload = {\"sp_name\":\"AswSch.ASW_CU4_Pag2_ConfiguracionTablet_Sel\",\"params\":{\"PsDirIp\":dirIp}}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 500,
        "y": 120,
        "wires": [
            [
                "98175a31.d82a58"
            ]
        ]
    },
    {
        "id": "98175a31.d82a58",
        "type": "subflow:6271978d.4d6ac8",
        "z": "c4ab0b6f.953d68",
        "name": "",
        "env": [],
        "x": 670,
        "y": 120,
        "wires": [
            [
                "3479715b.16903e"
            ]
        ]
    },
    {
        "id": "3479715b.16903e",
        "type": "MSSQL",
        "z": "c4ab0b6f.953d68",
        "mssqlCN": "955d262e.b17988",
        "name": "ASWMSSQL",
        "outField": "payload",
        "returnType": "0",
        "throwErrors": "0",
        "query": "",
        "modeOpt": "",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "msg",
        "paramsOpt": "queryParams",
        "paramsOptType": "msg",
        "params": [],
        "x": 830,
        "y": 120,
        "wires": [
            [
                "acb1e2.74775e2"
            ]
        ]
    },
    {
        "id": "989209df.529618",
        "type": "link out",
        "z": "c4ab0b6f.953d68",
        "name": "VariablesLocalesTerminado",
        "links": [
            "97fcb02.6c86f5"
        ],
        "x": 2680,
        "y": 120,
        "wires": [],
        "l": true
    },
    {
        "id": "acb1e2.74775e2",
        "type": "function",
        "z": "c4ab0b6f.953d68",
        "name": "revisaExistenDatos",
        "func": "if(Array.isArray(msg.payload)){\n    if(msg.payload.length > 0){\n        //node.warn(\"1\")\n        if(!msg.payload[0].Error){\n            msg.topic = \"DELETE FROM AswLite_CatTablets\";\n            msg.insert = msg.payload;\n           // node.warn(\"2\")\n        }else{\n            //node.warn(\"3\")\n            node.error('Conf Local '+msg.payload[0].Error)\n            node.error(msg.payload[0].Error,msg)\n            msg.payload = 'BADCONFIG';\n            return msg;\n        }\n        \n    }else{\n        node.error(\"Sin Datos\",msg)\n    }\n}else{\n    if(msg.payload.length > 0){\n        if(msg.error){//error de conexion\n            node.error('Conf Local '+msg.error)\n            msg.payload = 'ETIMEOUT';\n            return msg;\n        }\n    }\n}\n            \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 120,
        "wires": [
            [
                "99b1e8197507bdc3"
            ]
        ]
    },
    {
        "id": "7cb8c6e.2da4638",
        "type": "sqlite",
        "z": "c4ab0b6f.953d68",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 1230,
        "y": 160,
        "wires": [
            [
                "5495c026.34724"
            ]
        ]
    },
    {
        "id": "5495c026.34724",
        "type": "change",
        "z": "c4ab0b6f.953d68",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "insert",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1380,
        "y": 160,
        "wires": [
            [
                "7a8b9fe8.3e346"
            ]
        ]
    },
    {
        "id": "7a8b9fe8.3e346",
        "type": "subflow:1ae9450.7021cbb",
        "z": "c4ab0b6f.953d68",
        "name": "",
        "env": [],
        "x": 1550,
        "y": 160,
        "wires": [
            [
                "7f10b9e0.724238"
            ]
        ]
    },
    {
        "id": "7f10b9e0.724238",
        "type": "sqlite",
        "z": "c4ab0b6f.953d68",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 1710,
        "y": 160,
        "wires": [
            [
                "f5a3f86e.776148"
            ]
        ]
    },
    {
        "id": "f5a3f86e.776148",
        "type": "function",
        "z": "c4ab0b6f.953d68",
        "name": "qryConfTablet",
        "func": "msg.topic = `SELECT ClaUbicacion,\n                    IdCelda,\n\t\t\t\t   ClaDepartamento as Departamento,\n\t\t\t\t   0 AS ClaUsuarioMod,\n\t\t\t\t   NombreTablet AS NombrePcMod,\n\t\t\t\t   DireccionIp,\n\t\t\t\t   ClaArea\n\t\t\tFROM AswLite_CatTablets`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1910,
        "y": 160,
        "wires": [
            [
                "a7bd2acc.09da68"
            ]
        ]
    },
    {
        "id": "ddd304df.982f28",
        "type": "catch",
        "z": "c4ab0b6f.953d68",
        "name": "ConsultaLocal",
        "scope": [
            "acb1e2.74775e2"
        ],
        "uncaught": false,
        "x": 1630,
        "y": 100,
        "wires": [
            [
                "f5a3f86e.776148"
            ]
        ]
    },
    {
        "id": "a7bd2acc.09da68",
        "type": "sqlite",
        "z": "c4ab0b6f.953d68",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 2070,
        "y": 160,
        "wires": [
            [
                "9c248100.0b1f8"
            ]
        ]
    },
    {
        "id": "39630889.8ed2e8",
        "type": "comment",
        "z": "c4ab0b6f.953d68",
        "name": "SE CONSULTA LA CONFIGURACION EN SQLSERVER Y SE GUARDA EN BD LOCAL",
        "info": "",
        "x": 320,
        "y": 80,
        "wires": []
    },
    {
        "id": "22fe4ab5.334126",
        "type": "ip",
        "z": "c4ab0b6f.953d68",
        "name": "ip",
        "https": false,
        "timeout": "5000",
        "internalIPv4": true,
        "internalIPv6": false,
        "publicIPv4": false,
        "publicIPv6": false,
        "x": 350,
        "y": 120,
        "wires": [
            [
                "f0952d8a.dc075"
            ]
        ]
    },
    {
        "id": "5dfa283e.d02bb8",
        "type": "http in",
        "z": "c4ab0b6f.953d68",
        "name": "getCfgConfiguracion",
        "url": "/sqlite/CfgConfiguracion/",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 580,
        "wires": [
            [
                "ae016390.b22b5"
            ]
        ]
    },
    {
        "id": "ae016390.b22b5",
        "type": "function",
        "z": "c4ab0b6f.953d68",
        "name": "qryCfgConfiguracion",
        "func": "msg.topic = `\nSELECT * \nFROM ASWLite_CfgConfiguracion\nWHERE ClaveConfiguracion = '${msg.payload.ClaveConfiguracion}'`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 580,
        "wires": [
            [
                "e058817.f1d5b8"
            ]
        ]
    },
    {
        "id": "e058817.f1d5b8",
        "type": "sqlite",
        "z": "c4ab0b6f.953d68",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 600,
        "y": 580,
        "wires": [
            [
                "ff30b2b4.9da8a"
            ]
        ]
    },
    {
        "id": "ff30b2b4.9da8a",
        "type": "http response",
        "z": "c4ab0b6f.953d68",
        "name": "Resp_CfgConfiguracion",
        "statusCode": "",
        "headers": {},
        "x": 840,
        "y": 580,
        "wires": []
    },
    {
        "id": "9c248100.0b1f8",
        "type": "switch",
        "z": "c4ab0b6f.953d68",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "empty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 2210,
        "y": 160,
        "wires": [
            [
                "e4839dde.c1bb3"
            ],
            [
                "8c97fde1.d86f"
            ]
        ]
    },
    {
        "id": "2e85b492.fca54c",
        "type": "link in",
        "z": "c4ab0b6f.953d68",
        "name": "Inicia_ConfLocal",
        "links": [
            "8b682da3.4596",
            "4dc3120e5ae62327"
        ],
        "x": 120,
        "y": 180,
        "wires": [
            [
                "a084ec7d.2a8a4"
            ]
        ],
        "l": true
    },
    {
        "id": "8c97fde1.d86f",
        "type": "function",
        "z": "c4ab0b6f.953d68",
        "name": "MsgErrorTablaSinDatos",
        "func": "node.error(\"NO HAY DATOS EN LA TABLA AswLite_CatTablets\")\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2410,
        "y": 180,
        "wires": [
            [
                "8b682da3.4596"
            ]
        ]
    },
    {
        "id": "8b682da3.4596",
        "type": "link out",
        "z": "c4ab0b6f.953d68",
        "name": "Out_IniciaConfLocal",
        "links": [
            "2e85b492.fca54c"
        ],
        "x": 2660,
        "y": 180,
        "wires": [],
        "l": true
    },
    {
        "id": "a084ec7d.2a8a4",
        "type": "delay",
        "z": "c4ab0b6f.953d68",
        "name": "",
        "pauseType": "delay",
        "timeout": "30",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "30",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "outputs": 1,
        "x": 280,
        "y": 180,
        "wires": [
            [
                "22fe4ab5.334126"
            ]
        ]
    },
    {
        "id": "99b1e8197507bdc3",
        "type": "switch",
        "z": "c4ab0b6f.953d68",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "ETIMEOUT",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "BADCONFIG",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 3,
        "x": 1190,
        "y": 100,
        "wires": [
            [
                "4dc3120e5ae62327"
            ],
            [
                "4dc3120e5ae62327"
            ],
            [
                "7cb8c6e.2da4638"
            ]
        ]
    },
    {
        "id": "4dc3120e5ae62327",
        "type": "link out",
        "z": "c4ab0b6f.953d68",
        "name": "Out_IniciaConfLocal",
        "links": [
            "2e85b492.fca54c"
        ],
        "x": 1400,
        "y": 100,
        "wires": [],
        "l": true
    },
    {
        "id": "7efd57597a4632d9",
        "type": "inject",
        "z": "c4ab0b6f.953d68",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "30",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 680,
        "wires": [
            [
                "dbea5b939944a4a7"
            ]
        ]
    },
    {
        "id": "dbea5b939944a4a7",
        "type": "function",
        "z": "c4ab0b6f.953d68",
        "name": "qryVariablesProduccion",
        "func": "msg.topic = `\nSELECT idusuario, ClaArticulo \nFROM ASWLite_VariablesProduccion`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 680,
        "wires": [
            [
                "ebf2aa7e4b4da380"
            ]
        ]
    },
    {
        "id": "ebf2aa7e4b4da380",
        "type": "sqlite",
        "z": "c4ab0b6f.953d68",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 590,
        "y": 680,
        "wires": [
            [
                "6d3dd638abdca63e"
            ]
        ]
    },
    {
        "id": "6d3dd638abdca63e",
        "type": "function",
        "z": "c4ab0b6f.953d68",
        "name": "SetGlobalIdUsuarioClaArticulo",
        "func": "if (msg.payload.length > 0){\n    global.set(\"idusuario\",msg.payload[0].idusuario);\n    global.set(\"ClaArticulo\",msg.payload[0].ClaArticulo);\n}else{\n    node.warn('No se encontro informacion de usuario y articulo en la tabla ASWLite_VariablesProduccion') \n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "1461108d954e8c1a",
        "type": "catch",
        "z": "c4ab0b6f.953d68",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 100,
        "y": 920,
        "wires": [
            [
                "63aa42bc81156d60"
            ]
        ]
    },
    {
        "id": "63aa42bc81156d60",
        "type": "function",
        "z": "c4ab0b6f.953d68",
        "name": "Error Handler",
        "func": "node.warn(`ERROR NO CONTROLADO >  ${env.get(\"NAME\")} > ${JSON.stringify(msg)}`)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 920,
        "wires": [
            []
        ]
    },
    {
        "id": "9a104668.30b7e8",
        "type": "MSSQL",
        "z": "c58c4e92.63ec8",
        "mssqlCN": "955d262e.b17988",
        "name": "ASWMSSQL",
        "outField": "payload",
        "returnType": "0",
        "throwErrors": "0",
        "query": "",
        "modeOpt": "",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "msg",
        "paramsOpt": "queryParams",
        "paramsOptType": "msg",
        "params": [],
        "x": 290,
        "y": 40,
        "wires": [
            [
                "8b089fb1.59029"
            ]
        ]
    },
    {
        "id": "7800321b.63179c",
        "type": "inject",
        "z": "c58c4e92.63ec8",
        "name": "CargaUsuarios",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "3600",
        "crontab": "",
        "once": true,
        "onceDelay": "2",
        "topic": "",
        "payload": "ASWSch.ASW_CU1_Pag2_UsuariosLogin_sel",
        "payloadType": "str",
        "x": 120,
        "y": 40,
        "wires": [
            [
                "9a104668.30b7e8"
            ]
        ]
    },
    {
        "id": "a2eaa959.8f5768",
        "type": "sqlite",
        "z": "c58c4e92.63ec8",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 1230,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "976eeb05.ed44a8",
        "type": "subflow:1ae9450.7021cbb",
        "z": "c58c4e92.63ec8",
        "name": "",
        "x": 1090,
        "y": 120,
        "wires": [
            [
                "a2eaa959.8f5768"
            ]
        ]
    },
    {
        "id": "13da3396.4de4bc",
        "type": "inject",
        "z": "c58c4e92.63ec8",
        "name": "CargaParos",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "3600",
        "crontab": "",
        "once": true,
        "onceDelay": "10",
        "topic": "",
        "payloadType": "str",
        "x": 110,
        "y": 1340,
        "wires": [
            [
                "ea5e8d52.2e472"
            ]
        ]
    },
    {
        "id": "b32d8b9b.bf5168",
        "type": "function",
        "z": "c58c4e92.63ec8",
        "name": "validarDataSet",
        "func": "context.deleteArr = context.deleteArr || [];\ncontext.insertArr = context.insertArr || [];\n\nif(msg.payload.length > 0) {\n\nlet nombreTabla = msg.payload[0].nombretabla\n\n//GUARDAMOS LAS INSTRUCCIONES DE INSERTS PARA PROCESARLOS MAS ADELANTE\nmsg.insertStatements = msg.topic;\n\n    switch (nombreTabla){\n        case 'ASWLite_CatGpoParo': \n                context.deleteArr.push(\"DELETE FROM ASWLite_CatGpoParo;\");\n                context.insertArr.push(msg.topic);\n                msg.payload = null;\n                msg.topic = null\n                msg.insertStatements = null;\n            break;\n        case 'ASWLite_CatTipoParo' : \n                context.deleteArr.push(\"DELETE FROM ASWLite_CatTipoParo\");\n                context.insertArr.push(msg.topic);\n                msg.payload = null;\n                msg.topic = null;\n                msg.insertStatements = null;\n            break;\n        case 'ASWLite_RelTipoParoGpoParo': \n               context.deleteArr.push(\"DELETE FROM ASWLite_RelTipoParoGpoParo;\");\n               context.insertArr.push(msg.topic);\n               msg.payload = null;\n               msg.topic = null;\n               msg.insertStatements = null;\n            break;\n        case 'ASWLite_CatSeccionParo': \n               context.deleteArr.push(\"DELETE FROM ASWLite_CatSeccionParo;\");\n               context.insertArr.push(msg.topic);\n               msg.payload = null;\n               msg.topic = null;\n               msg.insertStatements = null;\n            break;\n    }\n}\n\nif( context.deleteArr.length == 4 && context.deleteArr[0] && context.deleteArr[1] && context.deleteArr[2] && context.deleteArr[3] ){\n    \n    msg.payload = context.deleteArr;\n    msg.insertArr = context.insertArr;\n    \n    context.deleteArr = null;\n    context.insertArr = null;\n}else{\n    msg = null;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 1380,
        "wires": [
            [
                "23e4d417.73c7ac"
            ]
        ]
    },
    {
        "id": "ea5e8d52.2e472",
        "type": "function",
        "z": "c58c4e92.63ec8",
        "name": "ArrObjCatalogosParos",
        "func": "msg.payload = [\n   {\"sp_name\":\"AswSch.ASW_CU203_Pag1_CatGpoParo_Sel\",\"params\":{} } ,\n\n   {\"sp_name\":\"AswSch.ASW_CU203_Pag1_CatTipoParo_Sel\",\"params\":{} } ,\n\n   {\"sp_name\":\"AswSch.ASW_CU203_Pag1_RelTipoParoGpoParo_Sel\",\"params\":{} },\n\n   {\"sp_name\":\"AswSch.ASW_CU203_Pag1_CatSeccionParo_Sel\",\"params\":{} }  \n]\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 140,
        "y": 1380,
        "wires": [
            [
                "50879e53.631eb"
            ]
        ],
        "info": "Se crea un arreglo de objetos con los diferentes SP que se deben ejecutar"
    },
    {
        "id": "5ff31d43.e5f6c4",
        "type": "subflow:6271978d.4d6ac8",
        "z": "c58c4e92.63ec8",
        "name": "",
        "env": [],
        "x": 410,
        "y": 1380,
        "wires": [
            [
                "ea8e7851.ed4408"
            ]
        ]
    },
    {
        "id": "ea8e7851.ed4408",
        "type": "MSSQL",
        "z": "c58c4e92.63ec8",
        "mssqlCN": "955d262e.b17988",
        "name": "ASWMSSQL",
        "outField": "payload",
        "returnType": "0",
        "throwErrors": "0",
        "query": "",
        "modeOpt": "",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "msg",
        "paramsOpt": "queryParams",
        "paramsOptType": "msg",
        "params": [],
        "x": 410,
        "y": 1420,
        "wires": [
            [
                "1815e129888d87de"
            ]
        ]
    },
    {
        "id": "eb74d2f9.44338",
        "type": "subflow:1ae9450.7021cbb",
        "z": "c58c4e92.63ec8",
        "name": "",
        "env": [],
        "x": 410,
        "y": 1520,
        "wires": [
            [
                "b32d8b9b.bf5168"
            ]
        ]
    },
    {
        "id": "68367f49.e88b4",
        "type": "sqlite",
        "z": "c58c4e92.63ec8",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 820,
        "y": 1400,
        "wires": [
            [
                "6f8f3058.50eee"
            ]
        ]
    },
    {
        "id": "b8b16f2b.572c7",
        "type": "sqlite",
        "z": "c58c4e92.63ec8",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 1210,
        "y": 1420,
        "wires": [
            []
        ]
    },
    {
        "id": "50879e53.631eb",
        "type": "split",
        "z": "c58c4e92.63ec8",
        "name": "separarLlamadasCatalogos",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 160,
        "y": 1420,
        "wires": [
            [
                "5ff31d43.e5f6c4"
            ]
        ]
    },
    {
        "id": "23e4d417.73c7ac",
        "type": "split",
        "z": "c58c4e92.63ec8",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 600,
        "y": 1420,
        "wires": [
            [
                "9bf9e9df.b88888"
            ]
        ]
    },
    {
        "id": "9bf9e9df.b88888",
        "type": "change",
        "z": "c58c4e92.63ec8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 620,
        "y": 1460,
        "wires": [
            [
                "68367f49.e88b4"
            ]
        ]
    },
    {
        "id": "6f8f3058.50eee",
        "type": "join",
        "z": "c58c4e92.63ec8",
        "name": "",
        "mode": "auto",
        "build": "string",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 970,
        "y": 1387,
        "wires": [
            [
                "fc6c455e.60d8b8"
            ]
        ]
    },
    {
        "id": "fc6c455e.60d8b8",
        "type": "change",
        "z": "c58c4e92.63ec8",
        "name": "",
        "rules": [
            {
                "t": "delete",
                "p": "topic",
                "pt": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "insertArr",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1000,
        "y": 1427,
        "wires": [
            [
                "7d3c2a0e.3f7874"
            ]
        ]
    },
    {
        "id": "7d3c2a0e.3f7874",
        "type": "split",
        "z": "c58c4e92.63ec8",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 970,
        "y": 1467,
        "wires": [
            [
                "a87d475e.9f0898"
            ]
        ]
    },
    {
        "id": "a87d475e.9f0898",
        "type": "change",
        "z": "c58c4e92.63ec8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 990,
        "y": 1507,
        "wires": [
            [
                "b8b16f2b.572c7"
            ]
        ]
    },
    {
        "id": "e083bef7.a8c78",
        "type": "comment",
        "z": "c58c4e92.63ec8",
        "name": "Traer datos db remota",
        "info": "Ejecutar consultas",
        "x": 420,
        "y": 1340,
        "wires": []
    },
    {
        "id": "cb56ed1f.5d253",
        "type": "comment",
        "z": "c58c4e92.63ec8",
        "name": "Validar que existan datos antes de borrar",
        "info": "Se revisa que todas las tablas traigan datos,\nsi no traen datos no se ejecuta la accion, se mantienen los catalogos que existan en la tablet.",
        "x": 710,
        "y": 1340,
        "wires": []
    },
    {
        "id": "d32a7fa9.bba04",
        "type": "comment",
        "z": "c58c4e92.63ec8",
        "name": "Insertar los datos",
        "info": "",
        "x": 1000,
        "y": 1340,
        "wires": []
    },
    {
        "id": "8b089fb1.59029",
        "type": "function",
        "z": "c58c4e92.63ec8",
        "name": "revisaExistenDatos",
        "func": "\nif(msg.payload.length > 0){\n    \n    msg.topic = \"DELETE FROM ASWLite_TraUsuarios\";\n    msg.insert = msg.payload;\n}\nelse{\n    msg = null\n}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 40,
        "wires": [
            [
                "874e53ec.928fd"
            ]
        ]
    },
    {
        "id": "874e53ec.928fd",
        "type": "sqlite",
        "z": "c58c4e92.63ec8",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 650,
        "y": 40,
        "wires": [
            [
                "8b934ccb.443ec"
            ]
        ]
    },
    {
        "id": "8b934ccb.443ec",
        "type": "change",
        "z": "c58c4e92.63ec8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "insert",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 400,
        "y": 120,
        "wires": [
            [
                "162c9cc616462d33"
            ]
        ]
    },
    {
        "id": "a6958042.eb085",
        "type": "comment",
        "z": "c58c4e92.63ec8",
        "name": "Inserta todo o nada",
        "info": "",
        "x": 110,
        "y": 1280,
        "wires": []
    },
    {
        "id": "99cf8039.d9a1a",
        "type": "function",
        "z": "c58c4e92.63ec8",
        "name": "CU161_Pag1_Configuraciones_Sel",
        "func": "let dpto = global.get('departamento');\nlet idcelda = global.get('celda');\n\nmsg.payload = {\"sp_name\":\"ASWSch.ASW_CU161_Pag1_Configuraciones_Sel\",\"params\":{\"PsIdWorkCenter\":idcelda}}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 200,
        "wires": [
            [
                "5cac06d3.905b28"
            ]
        ]
    },
    {
        "id": "e6a534f2.927718",
        "type": "inject",
        "z": "c58c4e92.63ec8",
        "name": "CargaTablaConfiguraciones",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.5",
        "topic": "",
        "payload": "{\"sp_name\":\"ASWSch.ASW_CU1_Pag4_TurnosDepartamento_Sel\",\"params\":{\"PnClaDepartamento\":2}}",
        "payloadType": "json",
        "x": 140,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "30f8ca9f.f38ae6",
        "type": "inject",
        "z": "c58c4e92.63ec8",
        "name": "CargaTurnosDepartamento",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.5",
        "topic": "",
        "payload": "{\"sp_name\":\"ASWSch.ASW_CU1_Pag4_TurnosDepartamento_Sel\",\"params\":{\"PnClaDepartamento\":2}}",
        "payloadType": "json",
        "x": 140,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "d7d5d003.38b4c",
        "type": "function",
        "z": "c58c4e92.63ec8",
        "name": "CU1_Pag4_TurnosDepartamento_Sel",
        "func": "let dpto = global.get('departamento');\nlet idcelda = global.get('celda');\n\nmsg.payload = {\"sp_name\":\"ASWSch.ASW_CU1_Pag4_TurnosDepartamento_Sel\",\"params\":{\"PnClaDepartamento\":dpto}};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 260,
        "wires": [
            [
                "5cac06d3.905b28"
            ]
        ]
    },
    {
        "id": "dc271876.38bb78",
        "type": "function",
        "z": "c58c4e92.63ec8",
        "name": "CU101_Pag8_CatUnidad_Sel",
        "func": "\nmsg.payload = {\"sp_name\":\"AswSch.ASW_CU101_Pag8_CatUnidad_Sel\",\"params\":{}}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 320,
        "wires": [
            [
                "5cac06d3.905b28"
            ]
        ]
    },
    {
        "id": "3ea4346b.6f4f6c",
        "type": "inject",
        "z": "c58c4e92.63ec8",
        "name": "CargaCatUnidad",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.5",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 110,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "16f387e9.cac1e8",
        "type": "inject",
        "z": "c58c4e92.63ec8",
        "name": "CargaSetPoints",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.5",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 100,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "b16adf32.c9865",
        "type": "inject",
        "z": "c58c4e92.63ec8",
        "name": "CargaCatMaquina",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.5",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 110,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "93123c69.835c6",
        "type": "function",
        "z": "c58c4e92.63ec8",
        "name": "CU155_Pag3_CfgBSCProductionChart_Sel",
        "func": "\nmsg.payload = {\"sp_name\":\"AswSch.ASW_CU155_Pag3_CfgBSCProductionChart_Sel\",\"params\":{}}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 380,
        "wires": [
            [
                "5cac06d3.905b28"
            ]
        ]
    },
    {
        "id": "59a2eaf8.5a8e74",
        "type": "function",
        "z": "c58c4e92.63ec8",
        "name": "CU101_Pag10_CatMaquina_Sel",
        "func": "let idcelda = global.get('celda');\n\nmsg.payload = {\"sp_name\":\"AswSch.ASW_CU101_Pag10_CatMaquina_Sel\",\"params\":{\"PsIdCelda\":idcelda}}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 440,
        "wires": [
            [
                "5cac06d3.905b28"
            ]
        ]
    },
    {
        "id": "5cac06d3.905b28",
        "type": "subflow:22430c84.47da24",
        "z": "c58c4e92.63ec8",
        "name": "",
        "env": [],
        "x": 1470,
        "y": 300,
        "wires": [
            [
                "bc096806.105dd8"
            ]
        ]
    },
    {
        "id": "bc096806.105dd8",
        "type": "sqlite",
        "z": "c58c4e92.63ec8",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 1640,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "2db68009.67838",
        "type": "function",
        "z": "c58c4e92.63ec8",
        "name": "ErrorCargaInicial",
        "func": "node.error('ErrorCargaInicial '+msg.error.message)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1730,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "777dbcd6.254cc4",
        "type": "catch",
        "z": "c58c4e92.63ec8",
        "name": "Error En Carga Inicial",
        "scope": null,
        "uncaught": false,
        "x": 1500,
        "y": 460,
        "wires": [
            [
                "2db68009.67838"
            ]
        ]
    },
    {
        "id": "37585bbf.a3cd44",
        "type": "inject",
        "z": "c58c4e92.63ec8",
        "name": "CargaTipoMejora",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.5",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 110,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "818d5b3d.321398",
        "type": "function",
        "z": "c58c4e92.63ec8",
        "name": "CU999_Pag2_CatBSCTipoMejora_Sel",
        "func": "let idcelda = global.get('celda');\n\nmsg.payload = {\"sp_name\":\"AswSch.ASW_CU999_Pag2_CatBSCTipoMejora_Sel\",\"params\":{}}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 480,
        "wires": [
            [
                "5cac06d3.905b28"
            ]
        ]
    },
    {
        "id": "97fcb02.6c86f5",
        "type": "link in",
        "z": "c58c4e92.63ec8",
        "name": "",
        "links": [
            "989209df.529618",
            "632d655a.d3e94c"
        ],
        "x": 375,
        "y": 360,
        "wires": [
            [
                "99cf8039.d9a1a",
                "d7d5d003.38b4c",
                "59a2eaf8.5a8e74",
                "dc271876.38bb78",
                "93123c69.835c6",
                "818d5b3d.321398",
                "d8709f3c.b2eb6",
                "3761cc69.aac614",
                "e3482b05.a01cd8",
                "7919df48.0cd9e",
                "f4af14de.08ac38",
                "d80324ab.935078",
                "32a160aa.f5db8",
                "fa11e495.224388",
                "757cc5d8.2e4e3c",
                "a77ab8b3.473558",
                "111f6931.4b28a7",
                "30246b42.af6e14",
                "19a15c2569cb62d9",
                "ddb4ffc6b1c628a2",
                "8bdf1dd6f8805e7e"
            ]
        ]
    },
    {
        "id": "d8709f3c.b2eb6",
        "type": "function",
        "z": "c58c4e92.63ec8",
        "name": "CU505_Pag1_CatBajaEficiencia_Sel",
        "func": "let idcelda = global.get('celda');\n\nmsg.payload = {\"sp_name\":\"AswSch.ASW_CU505_Pag1_CatBajaEficiencia_Sel\",\"params\":{\"PsIdCelda\":idcelda}}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 560,
        "wires": [
            [
                "5cac06d3.905b28"
            ]
        ]
    },
    {
        "id": "3761cc69.aac614",
        "type": "function",
        "z": "c58c4e92.63ec8",
        "name": "CU502_Pag1_CfgParametrosOperacion_Sel",
        "func": "let idcelda = global.get('celda');\nlet ClaArea = global.get('ClaArea');\nlet ClaDepartamento = global.get('departamento');\nlet ClaUbicacion = global.get('ClaUbicacion');\n\nmsg.payload = {\"sp_name\":\"AswSch.ASW_CU502_Pag1_CfgParametrosOperacion_Sel\",\"params\":{PnClaUbicacion:ClaUbicacion,PnClaDepartamento:ClaDepartamento,PnClaArea:ClaArea}}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1050,
        "y": 620,
        "wires": [
            [
                "5cac06d3.905b28"
            ]
        ]
    },
    {
        "id": "e3482b05.a01cd8",
        "type": "function",
        "z": "c58c4e92.63ec8",
        "name": "CU522_Pag1_CatSeccionParoDatos_Sel",
        "func": "let idcelda = global.get('celda');\n\nmsg.payload = {\"sp_name\":\"AswSch.ASW_CU522_Pag1_CatSeccionParoDatos_Sel\",\"params\":{PsIdCelda:idcelda}}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 680,
        "wires": [
            [
                "5cac06d3.905b28"
            ]
        ]
    },
    {
        "id": "7919df48.0cd9e",
        "type": "function",
        "z": "c58c4e92.63ec8",
        "name": "CU522_Pag1_CatTipoSeguimientoAlerta_Sel",
        "func": "let idcelda = global.get('celda');\n\nmsg.payload = {\"sp_name\":\"AswSch.ASW_CU522_Pag1_CatTipoSeguimientoAlerta_Sel\",\"params\":{}}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 740,
        "wires": [
            [
                "5cac06d3.905b28"
            ]
        ]
    },
    {
        "id": "f4af14de.08ac38",
        "type": "function",
        "z": "c58c4e92.63ec8",
        "name": "CU522_Pag1_RelAlertaSeccionParo_Sel",
        "func": "let idcelda = global.get('celda');\n\nmsg.payload = {\"sp_name\":\"AswSch.ASW_CU522_Pag1_RelAlertaSeccionParo_Sel\",\"params\":{PsIdCelda:idcelda}}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 800,
        "wires": [
            [
                "5cac06d3.905b28"
            ]
        ]
    },
    {
        "id": "d80324ab.935078",
        "type": "function",
        "z": "c58c4e92.63ec8",
        "name": "CU522_Pag1_RelAlertaTipoSeguimientoAlerta_Sel",
        "func": "let idcelda = global.get('celda');\n\nmsg.payload = {\"sp_name\":\"AswSch.ASW_CU522_Pag1_RelAlertaTipoSeguimientoAlerta_Sel\",\"params\":{}}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1070,
        "y": 860,
        "wires": [
            [
                "5cac06d3.905b28"
            ]
        ]
    },
    {
        "id": "632d655a.d3e94c",
        "type": "link out",
        "z": "c58c4e92.63ec8",
        "name": "",
        "links": [
            "97fcb02.6c86f5"
        ],
        "x": 335,
        "y": 580,
        "wires": []
    },
    {
        "id": "9eb61cfc.ae626",
        "type": "switch",
        "z": "c58c4e92.63ec8",
        "name": "",
        "property": "celda",
        "propertyType": "global",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 250,
        "y": 580,
        "wires": [
            [
                "632d655a.d3e94c"
            ]
        ]
    },
    {
        "id": "90cf90db.185f9",
        "type": "inject",
        "z": "c58c4e92.63ec8",
        "name": "CargaTodos",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "3600",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 110,
        "y": 580,
        "wires": [
            [
                "9eb61cfc.ae626"
            ]
        ]
    },
    {
        "id": "32a160aa.f5db8",
        "type": "function",
        "z": "c58c4e92.63ec8",
        "name": "CU701_Pag4_CatSistema_Sel",
        "func": "let idcelda = global.get('celda');\nlet ClaUbicacion = global.get('ClaUbicacion');\n\nmsg.payload = {\"sp_name\":\"AswSch.ASW_CU701_Pag4_CatSistema_Sel\",\"params\":{PnClaUbicacion:ClaUbicacion, PsIdCelda:idcelda}}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 920,
        "wires": [
            [
                "5cac06d3.905b28"
            ]
        ]
    },
    {
        "id": "fa11e495.224388",
        "type": "function",
        "z": "c58c4e92.63ec8",
        "name": "CU701_Pag5_CatSubSistema_Sel",
        "func": "let idcelda = global.get('celda');\nlet ClaUbicacion = global.get('ClaUbicacion');\n\nmsg.payload = {\"sp_name\":\"AswSch.ASW_CU701_Pag5_CatSubSistema_Sel\",\"params\":{PnClaUbicacion:ClaUbicacion, PsIdCelda:idcelda}}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 960,
        "wires": [
            [
                "5cac06d3.905b28"
            ]
        ]
    },
    {
        "id": "757cc5d8.2e4e3c",
        "type": "function",
        "z": "c58c4e92.63ec8",
        "name": "CU701_Pag6_CatRcmFuncion_Sel",
        "func": "let idcelda = global.get('celda');\nlet ClaUbicacion = global.get('ClaUbicacion');\n\nmsg.payload = {\"sp_name\":\"AswSch.ASW_CU701_Pag6_CatRcmFuncion_Sel\",\"params\":{PnClaUbicacion:ClaUbicacion, PsIdCelda:idcelda}}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 1000,
        "wires": [
            [
                "5cac06d3.905b28"
            ]
        ]
    },
    {
        "id": "a77ab8b3.473558",
        "type": "function",
        "z": "c58c4e92.63ec8",
        "name": "CU701_Pag7_CatRcmFuncionFalla_Sel",
        "func": "let idcelda = global.get('celda');\nlet ClaUbicacion = global.get('ClaUbicacion');\n\nmsg.payload = {\"sp_name\":\"AswSch.ASW_CU701_Pag7_CatRcmFuncionFalla_Sel\",\"params\":{PnClaUbicacion:ClaUbicacion, PsIdCelda:idcelda}}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 1040,
        "wires": [
            [
                "5cac06d3.905b28"
            ]
        ]
    },
    {
        "id": "111f6931.4b28a7",
        "type": "function",
        "z": "c58c4e92.63ec8",
        "name": "CU701_Pag8_TraRcmModoFalla_Sel",
        "func": "let idcelda = global.get('celda');\nlet ClaUbicacion = global.get('ClaUbicacion');\n\nmsg.payload = {\"sp_name\":\"AswSch.ASW_CU701_Pag8_TraRcmModoFalla_Sel\",\"params\":{PnClaUbicacion:ClaUbicacion, PsIdCelda:idcelda}}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 1080,
        "wires": [
            [
                "5cac06d3.905b28"
            ]
        ]
    },
    {
        "id": "30246b42.af6e14",
        "type": "function",
        "z": "c58c4e92.63ec8",
        "name": "CU701_Pag10_CatEquipoCelda_Sel",
        "func": "let idcelda = global.get('celda');\nlet ClaUbicacion = global.get('ClaUbicacion');\n\nmsg.payload = {\"sp_name\":\"AswSch.ASW_CU701_Pag10_CatEquipoCelda_Sel\",\"params\":{PnClaUbicacion:ClaUbicacion, PsIdCelda:idcelda}}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 1120,
        "wires": [
            [
                "5cac06d3.905b28"
            ]
        ]
    },
    {
        "id": "7e6f07c7.261708",
        "type": "comment",
        "z": "c58c4e92.63ec8",
        "name": "Mantenimiento autonomo",
        "info": "Mantenimiento autonomo se actualiza ",
        "x": 170,
        "y": 2100,
        "wires": []
    },
    {
        "id": "932599fc.769548",
        "type": "function",
        "z": "c58c4e92.63ec8",
        "name": "ASW_CU706_Pag1_MtoTraOt_Sel",
        "func": "let idcelda = global.get('celda');\nlet ClaUbicacion = global.get('ClaUbicacion');\n\nmsg.payload = {\"sp_name\":\"AswSch.ASW_CU706_Pag1_MtoTraOt_Sel\",\"params\":{PnClaUbicacion:ClaUbicacion, PsIdCelda:idcelda}}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 427,
        "y": 2140,
        "wires": [
            [
                "a74592bc.5c954"
            ]
        ]
    },
    {
        "id": "74e0133f.153cac",
        "type": "function",
        "z": "c58c4e92.63ec8",
        "name": "ver si existe",
        "func": "//guardo el payload en el mensaje\nmsg.record = msg.payload\nlet condicion = {}\n\nmsg.record.keys.split(\",\").forEach((key, idx) => {\n    condicion[key] = msg.record[key] \n})\n\nmsg.payload = {\n                nombreTabla: msg.record.nombretabla,\n                ifExists: 1,\n                condicion\n            }\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1269,
        "y": 2140,
        "wires": [
            [
                "4c18e4c.35f261c"
            ]
        ]
    },
    {
        "id": "a2546ec6.c29fc",
        "type": "subflow:1ae9450.7021cbb",
        "z": "c58c4e92.63ec8",
        "name": "",
        "env": [],
        "x": 1429,
        "y": 2280,
        "wires": [
            [
                "31dfd517.8bd55a"
            ]
        ]
    },
    {
        "id": "965f1cd8.f5768",
        "type": "sqlite",
        "z": "c58c4e92.63ec8",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 1589,
        "y": 2140,
        "wires": [
            [
                "4ca090ed.56e4a"
            ]
        ]
    },
    {
        "id": "966b9746.593988",
        "type": "split",
        "z": "c58c4e92.63ec8",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1129,
        "y": 2140,
        "wires": [
            [
                "74e0133f.153cac"
            ]
        ]
    },
    {
        "id": "f560d9d8.fa2398",
        "type": "inject",
        "z": "c58c4e92.63ec8",
        "name": "",
        "repeat": "3600",
        "crontab": "",
        "once": true,
        "onceDelay": "60",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 134,
        "y": 2140,
        "wires": [
            [
                "932599fc.769548",
                "d8cb7b52.58ec58",
                "81cc2e2c.16576",
                "46c8df32.32478"
            ]
        ]
    },
    {
        "id": "a74592bc.5c954",
        "type": "subflow:6271978d.4d6ac8",
        "z": "c58c4e92.63ec8",
        "name": "",
        "env": [],
        "x": 829,
        "y": 2140,
        "wires": [
            [
                "d5f59455.0a2bd8"
            ]
        ]
    },
    {
        "id": "d5f59455.0a2bd8",
        "type": "MSSQL",
        "z": "c58c4e92.63ec8",
        "mssqlCN": "955d262e.b17988",
        "name": "ASWMSSQL",
        "outField": "payload",
        "returnType": "0",
        "throwErrors": "0",
        "query": "",
        "modeOpt": "",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "msg",
        "paramsOpt": "queryParams",
        "paramsOptType": "msg",
        "params": [],
        "x": 989,
        "y": 2140,
        "wires": [
            [
                "966b9746.593988"
            ]
        ]
    },
    {
        "id": "72143198.074e3",
        "type": "function",
        "z": "c58c4e92.63ec8",
        "name": "crear payload",
        "func": "msg.payload = msg.record\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1259,
        "y": 2220,
        "wires": [
            [
                "563e03a4.fd794c"
            ]
        ]
    },
    {
        "id": "4c18e4c.35f261c",
        "type": "subflow:54a4792c.863048",
        "z": "c58c4e92.63ec8",
        "name": "",
        "env": [],
        "x": 1439,
        "y": 2140,
        "wires": [
            [
                "965f1cd8.f5768"
            ]
        ]
    },
    {
        "id": "4ca090ed.56e4a",
        "type": "switch",
        "z": "c58c4e92.63ec8",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "empty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1029,
        "y": 2240,
        "wires": [
            [
                "72143198.074e3"
            ],
            [
                "82faf11d.c5155"
            ]
        ]
    },
    {
        "id": "82faf11d.c5155",
        "type": "function",
        "z": "c58c4e92.63ec8",
        "name": "crear payload",
        "func": "delete msg.record.keys;\nmsg.payload = [msg.record]\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1259,
        "y": 2280,
        "wires": [
            [
                "a2546ec6.c29fc"
            ]
        ]
    },
    {
        "id": "31dfd517.8bd55a",
        "type": "sqlite",
        "z": "c58c4e92.63ec8",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 1569,
        "y": 2280,
        "wires": [
            []
        ]
    },
    {
        "id": "943f68c8.542fb8",
        "type": "sqlite",
        "z": "c58c4e92.63ec8",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 1589,
        "y": 2220,
        "wires": [
            []
        ]
    },
    {
        "id": "d8cb7b52.58ec58",
        "type": "function",
        "z": "c58c4e92.63ec8",
        "name": "ASW_CU706_Pag1_MtoTraOtActividad_Sel",
        "func": "let idcelda = global.get('celda');\nlet ClaUbicacion = global.get('ClaUbicacion');\n\nmsg.payload = {\"sp_name\":\"AswSch.ASW_CU706_Pag1_MtoTraOtActividad_Sel\",\"params\":{PnClaUbicacion:ClaUbicacion, PsIdCelda:idcelda}}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 457,
        "y": 2180,
        "wires": [
            [
                "a74592bc.5c954"
            ]
        ]
    },
    {
        "id": "81cc2e2c.16576",
        "type": "function",
        "z": "c58c4e92.63ec8",
        "name": "ASW_CU706_Pag1_MtoTraOtActividadPaso_Sel",
        "func": "let idcelda = global.get('celda');\nlet ClaUbicacion = global.get('ClaUbicacion');\n\nmsg.payload = {\"sp_name\":\"AswSch.ASW_CU706_Pag1_MtoTraOtActividadPaso_Sel\",\"params\":{PnClaUbicacion:ClaUbicacion, PsIdCelda:idcelda}}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 476,
        "y": 2220,
        "wires": [
            [
                "a74592bc.5c954"
            ]
        ]
    },
    {
        "id": "46c8df32.32478",
        "type": "function",
        "z": "c58c4e92.63ec8",
        "name": "ASW_CU706_Pag1_MtoTraOtActividadVariable_Sel",
        "func": "let idcelda = global.get('celda');\nlet ClaUbicacion = global.get('ClaUbicacion');\n\nmsg.payload = {\"sp_name\":\"AswSch.ASW_CU706_Pag1_MtoTraOtActividadVariable_Sel\",\"params\":{PnClaUbicacion:ClaUbicacion, PsIdCelda:idcelda}}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 487,
        "y": 2260,
        "wires": [
            [
                "a74592bc.5c954"
            ]
        ]
    },
    {
        "id": "598259988df36e94",
        "type": "inject",
        "z": "c58c4e92.63ec8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 2440,
        "wires": [
            [
                "30b8e54140d5109d"
            ]
        ]
    },
    {
        "id": "30b8e54140d5109d",
        "type": "function",
        "z": "c58c4e92.63ec8",
        "name": "Delete all",
        "func": "msg[\"topic\"] = \n'BEGIN;DELETE FROM AswLite_BitAndon;'+\n'DELETE FROM ASWLite_BitBajaEficiencia;'+\n'DELETE FROM AswLite_BitParos;'+\n'DELETE FROM AswLite_BitProduccion;'+\n'DELETE FROM ASWLite_CatArticuloCaracteristicas;'+\n'DELETE FROM ASWLite_CatArticuloComposicion;'+\n'DELETE FROM ASWLite_CatArticuloGeneral;'+\n'DELETE FROM ASWLite_CatBajaEficiencia;'+\n'DELETE FROM ASWLite_CatBSCTipoMejora;'+\n'DELETE FROM ASWLite_CatGpoParo;'+\n'DELETE FROM ASWLite_CatWorkUnit;'+\n'DELETE FROM ASWLite_CatSeccionParo;'+\n'DELETE FROM ASWLite_CatSeccionParoDatos;'+\n'DELETE FROM AswLite_CatTablets;'+\n'DELETE FROM ASWLite_CatTipoCorte;'+\n'DELETE FROM ASWLite_CatTipoParo;'+\n'DELETE FROM ASWLite_CatTipoSeguimientoAlerta;'+\n'DELETE FROM ASWLite_CatTurno;'+\n'DELETE FROM ASWLite_CatUnidad;'+\n'DELETE FROM ASWLite_CfgBSCProductionChart;'+\n'DELETE FROM ASWLite_CfgConfiguracion;'+\n'DELETE FROM AswLite_CfgParametrosOperacion;'+\n'DELETE FROM ASWLite_MtoCatEquipoCelda;'+\n'DELETE FROM ASWLite_MtoCatRcmFuncion;'+\n'DELETE FROM ASWLite_MtoCatRcmFuncionFalla;'+\n'DELETE FROM ASWLite_MtoCatSistema;'+\n'DELETE FROM ASWLite_MtoCatSubSistema;'+\n'DELETE FROM ASWLite_MtoTraOT;'+\n'DELETE FROM ASWLite_MtoTraOTActividad;'+\n'DELETE FROM ASWLite_MtoTraOTActividadPaso;'+\n'DELETE FROM ASWLite_MtoTraOTActividadVariable;'+\n'DELETE FROM ASWLite_MtoTraRcmModoFalla;'+\n'DELETE FROM ASWLite_MtoTraReporteFalla;'+\n'DELETE FROM ASWLite_RelAlertaSeccionParo;'+\n'DELETE FROM ASWLite_RelAlertaTipoSeguimientoAlerta;'+\n'DELETE FROM ASWLite_RelTipoParoGpoParo;'+\n'DELETE FROM ASWLite_TraFinCajaMCSW;'+\n'DELETE FROM ASWLite_TraGraficaProduccion;'+\n'DELETE FROM AswLite_TraGraficaVelocidad;'+\n'DELETE FROM ASWLite_TraIndicadorOEE;'+\n'DELETE FROM ASWLite_TraIndicadorOEEDet;'+\n'DELETE FROM ASWLite_TraMateriaPrima;'+\n'DELETE FROM ASWLite_TraMejora;'+\n'DELETE FROM ASWLite_TraOrdenProduccion;'+\n'DELETE FROM ASWLite_TraOrdenProduccionDet;'+\n'DELETE FROM ASWLite_TraParoMantenimiento;'+\n'DELETE FROM ASWLite_TraProductBluePrint;'+\n'DELETE FROM ASWLite_TraReporteProduccion;'+\n'DELETE FROM ASWLite_TraScrap;'+\n'DELETE FROM ASWLite_TraUsuarios;'+\n'DELETE FROM ASWLite_VariablesProduccion;'+\n'COMMIT;';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 2440,
        "wires": [
            [
                "b8ae4643ad04a342"
            ]
        ]
    },
    {
        "id": "b8ae4643ad04a342",
        "type": "sqlite",
        "z": "c58c4e92.63ec8",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "batch",
        "sql": "",
        "name": "SQLite",
        "x": 490,
        "y": 2440,
        "wires": [
            []
        ]
    },
    {
        "id": "dd1e6ba860774670",
        "type": "comment",
        "z": "c58c4e92.63ec8",
        "name": "Script para borrar tablas",
        "info": "",
        "x": 1340,
        "y": 2380,
        "wires": []
    },
    {
        "id": "3efe88286e39139a",
        "type": "inject",
        "z": "c58c4e92.63ec8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 120,
        "y": 2500,
        "wires": [
            [
                "253351230c131db4"
            ]
        ]
    },
    {
        "id": "253351230c131db4",
        "type": "function",
        "z": "c58c4e92.63ec8",
        "name": "AswLite_CatTablets",
        "func": "msg[\"topic\"] = \n'SELECT * FROM AswLite_CatTablets';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 2500,
        "wires": [
            [
                "e1626c16b2d8259c"
            ]
        ]
    },
    {
        "id": "e1626c16b2d8259c",
        "type": "sqlite",
        "z": "c58c4e92.63ec8",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 610,
        "y": 2500,
        "wires": [
            [
                "10fc61743356b33e"
            ]
        ]
    },
    {
        "id": "6ef469357cd094c9",
        "type": "inject",
        "z": "c58c4e92.63ec8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 120,
        "y": 2540,
        "wires": [
            [
                "9f6d282a5d5139a3"
            ]
        ]
    },
    {
        "id": "9f6d282a5d5139a3",
        "type": "function",
        "z": "c58c4e92.63ec8",
        "name": "ASWLite_CatMaquina",
        "func": "msg[\"topic\"] = \n'SELECT * FROM ASWLite_CatWorkUnit;';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 2540,
        "wires": [
            [
                "42b9b29329770683"
            ]
        ]
    },
    {
        "id": "42b9b29329770683",
        "type": "sqlite",
        "z": "c58c4e92.63ec8",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 610,
        "y": 2540,
        "wires": [
            [
                "6f7cbb832c16b111"
            ]
        ]
    },
    {
        "id": "74afaa332a081213",
        "type": "inject",
        "z": "c58c4e92.63ec8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 120,
        "y": 2580,
        "wires": [
            [
                "3ea1a7d5820510f9"
            ]
        ]
    },
    {
        "id": "3ea1a7d5820510f9",
        "type": "function",
        "z": "c58c4e92.63ec8",
        "name": "ASWLite_CatTurno",
        "func": "msg[\"topic\"] = \n'SELECT * FROM ASWLite_CatTurno';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 2580,
        "wires": [
            [
                "fbfb7a25dea83e28"
            ]
        ]
    },
    {
        "id": "fbfb7a25dea83e28",
        "type": "sqlite",
        "z": "c58c4e92.63ec8",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 610,
        "y": 2580,
        "wires": [
            [
                "f054131129d10572"
            ]
        ]
    },
    {
        "id": "b1caa8bd98d8719d",
        "type": "inject",
        "z": "c58c4e92.63ec8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 120,
        "y": 2620,
        "wires": [
            [
                "fc66f8d34b155483"
            ]
        ]
    },
    {
        "id": "fc66f8d34b155483",
        "type": "function",
        "z": "c58c4e92.63ec8",
        "name": "ASWLite_VariablesProduccion",
        "func": "msg[\"topic\"] = \n'SELECT * FROM ASWLite_VariablesProduccion';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 2620,
        "wires": [
            [
                "605eb8250430f7d7"
            ]
        ]
    },
    {
        "id": "605eb8250430f7d7",
        "type": "sqlite",
        "z": "c58c4e92.63ec8",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 610,
        "y": 2620,
        "wires": [
            [
                "ebff7eb4e3c655c5"
            ]
        ]
    },
    {
        "id": "8ef7d25a7a74bf21",
        "type": "inject",
        "z": "c58c4e92.63ec8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 120,
        "y": 2660,
        "wires": [
            [
                "31d83210fca8bb6b"
            ]
        ]
    },
    {
        "id": "31d83210fca8bb6b",
        "type": "function",
        "z": "c58c4e92.63ec8",
        "name": "ASWLite_TraUsuarios",
        "func": "msg[\"topic\"] = \n'SELECT * FROM ASWLite_TraUsuarios'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 2660,
        "wires": [
            [
                "9d18c1c10d7f44ff"
            ]
        ]
    },
    {
        "id": "9d18c1c10d7f44ff",
        "type": "sqlite",
        "z": "c58c4e92.63ec8",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 610,
        "y": 2660,
        "wires": [
            [
                "91a8c304a4300eef"
            ]
        ]
    },
    {
        "id": "c19dd18b374e33c2",
        "type": "bcrypt",
        "z": "c58c4e92.63ec8",
        "name": "",
        "action": "encrypt",
        "field": "payload.passwd",
        "hash": "payload.passwd",
        "rounds": 10,
        "x": 810,
        "y": 80,
        "wires": [
            [
                "1b08a29844664886"
            ]
        ]
    },
    {
        "id": "162c9cc616462d33",
        "type": "split",
        "z": "c58c4e92.63ec8",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 550,
        "y": 120,
        "wires": [
            [
                "084ac1690b2ca21f"
            ]
        ]
    },
    {
        "id": "1b08a29844664886",
        "type": "join",
        "z": "c58c4e92.63ec8",
        "name": "",
        "mode": "auto",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": true,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 950,
        "y": 120,
        "wires": [
            [
                "976eeb05.ed44a8"
            ]
        ]
    },
    {
        "id": "084ac1690b2ca21f",
        "type": "switch",
        "z": "c58c4e92.63ec8",
        "name": "",
        "property": "payload.passwd",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 670,
        "y": 120,
        "wires": [
            [
                "c19dd18b374e33c2"
            ],
            [
                "1b08a29844664886"
            ]
        ]
    },
    {
        "id": "6c8cdf9de0001d96",
        "type": "inject",
        "z": "c58c4e92.63ec8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 120,
        "y": 2700,
        "wires": [
            [
                "d72675546b8ca5a0"
            ]
        ]
    },
    {
        "id": "d72675546b8ca5a0",
        "type": "function",
        "z": "c58c4e92.63ec8",
        "name": "AswLite_BitAndon",
        "func": "msg[\"topic\"] = \n'SELECT * FROM AswLite_BitAndon'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 2700,
        "wires": [
            [
                "321b406200785ec9"
            ]
        ]
    },
    {
        "id": "321b406200785ec9",
        "type": "sqlite",
        "z": "c58c4e92.63ec8",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 610,
        "y": 2700,
        "wires": [
            []
        ]
    },
    {
        "id": "90ae14d04d146faf",
        "type": "inject",
        "z": "c58c4e92.63ec8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 120,
        "y": 2740,
        "wires": [
            [
                "4d1df89140872cac"
            ]
        ]
    },
    {
        "id": "4d1df89140872cac",
        "type": "function",
        "z": "c58c4e92.63ec8",
        "name": "AswLite_BitParos",
        "func": "msg[\"topic\"] = \n'SELECT * FROM AswLite_BitParos'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 2740,
        "wires": [
            [
                "ceed3c03572a5ba2"
            ]
        ]
    },
    {
        "id": "ceed3c03572a5ba2",
        "type": "sqlite",
        "z": "c58c4e92.63ec8",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 610,
        "y": 2740,
        "wires": [
            []
        ]
    },
    {
        "id": "cb6c3f124f9a13c5",
        "type": "inject",
        "z": "c58c4e92.63ec8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 120,
        "y": 2780,
        "wires": [
            [
                "0bcb5e52116273fb"
            ]
        ]
    },
    {
        "id": "0bcb5e52116273fb",
        "type": "function",
        "z": "c58c4e92.63ec8",
        "name": "ASWLite_BitBajaEficiencia",
        "func": "msg[\"topic\"] = \n'SELECT * FROM ASWLite_BitBajaEficiencia'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 2780,
        "wires": [
            [
                "8ddfa6b57df73a06"
            ]
        ]
    },
    {
        "id": "8ddfa6b57df73a06",
        "type": "sqlite",
        "z": "c58c4e92.63ec8",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 610,
        "y": 2780,
        "wires": [
            []
        ]
    },
    {
        "id": "d955acd5fb59687c",
        "type": "inject",
        "z": "c58c4e92.63ec8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 120,
        "y": 2820,
        "wires": [
            [
                "29e5345d3a66483a"
            ]
        ]
    },
    {
        "id": "29e5345d3a66483a",
        "type": "function",
        "z": "c58c4e92.63ec8",
        "name": "AswLite_BitProduccion",
        "func": "msg[\"topic\"] = \n'SELECT * FROM AswLite_BitProduccion'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 2820,
        "wires": [
            [
                "ff64059b95df6de7"
            ]
        ]
    },
    {
        "id": "ff64059b95df6de7",
        "type": "sqlite",
        "z": "c58c4e92.63ec8",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 610,
        "y": 2820,
        "wires": [
            []
        ]
    },
    {
        "id": "05d248616c052e81",
        "type": "inject",
        "z": "c58c4e92.63ec8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 120,
        "y": 2860,
        "wires": [
            [
                "b9f4896959dc9f3b"
            ]
        ]
    },
    {
        "id": "b9f4896959dc9f3b",
        "type": "function",
        "z": "c58c4e92.63ec8",
        "name": "ASWLite_CatArticuloCaracteristicas",
        "func": "msg[\"topic\"] = \n'SELECT * FROM ASWLite_CatArticuloCaracteristicas'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 2860,
        "wires": [
            [
                "ad8f19aca8457a7c"
            ]
        ]
    },
    {
        "id": "ad8f19aca8457a7c",
        "type": "sqlite",
        "z": "c58c4e92.63ec8",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 610,
        "y": 2860,
        "wires": [
            []
        ]
    },
    {
        "id": "798fae8641c29765",
        "type": "inject",
        "z": "c58c4e92.63ec8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 120,
        "y": 2900,
        "wires": [
            [
                "a97a75d63ee56fa7"
            ]
        ]
    },
    {
        "id": "a97a75d63ee56fa7",
        "type": "function",
        "z": "c58c4e92.63ec8",
        "name": "ASWLite_CatArticuloComposicion",
        "func": "msg[\"topic\"] = \n'SELECT * FROM ASWLite_CatArticuloComposicion'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 2900,
        "wires": [
            [
                "48bb271fb5d157ef"
            ]
        ]
    },
    {
        "id": "48bb271fb5d157ef",
        "type": "sqlite",
        "z": "c58c4e92.63ec8",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 610,
        "y": 2900,
        "wires": [
            []
        ]
    },
    {
        "id": "48734ebfe562c5b1",
        "type": "inject",
        "z": "c58c4e92.63ec8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 120,
        "y": 2940,
        "wires": [
            [
                "283eef193191737f"
            ]
        ]
    },
    {
        "id": "283eef193191737f",
        "type": "function",
        "z": "c58c4e92.63ec8",
        "name": "ASWLite_CatBajaEficiencia",
        "func": "msg[\"topic\"] = \n'SELECT * FROM ASWLite_CatBajaEficiencia'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 2940,
        "wires": [
            [
                "3f371b1f6ae79cc1"
            ]
        ]
    },
    {
        "id": "3f371b1f6ae79cc1",
        "type": "sqlite",
        "z": "c58c4e92.63ec8",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 610,
        "y": 2940,
        "wires": [
            []
        ]
    },
    {
        "id": "fd87563dc13559ea",
        "type": "inject",
        "z": "c58c4e92.63ec8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 120,
        "y": 2980,
        "wires": [
            [
                "c49435bfdc3a40bb"
            ]
        ]
    },
    {
        "id": "c49435bfdc3a40bb",
        "type": "function",
        "z": "c58c4e92.63ec8",
        "name": "ASWLite_CatBSCTipoMejora",
        "func": "msg[\"topic\"] = \n'SELECT * FROM ASWLite_CatBSCTipoMejora '\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 2980,
        "wires": [
            [
                "70507128d53d06ad"
            ]
        ]
    },
    {
        "id": "70507128d53d06ad",
        "type": "sqlite",
        "z": "c58c4e92.63ec8",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 610,
        "y": 2980,
        "wires": [
            []
        ]
    },
    {
        "id": "f64b2b1795708a8e",
        "type": "inject",
        "z": "c58c4e92.63ec8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 120,
        "y": 3020,
        "wires": [
            [
                "528997d7669de6bb"
            ]
        ]
    },
    {
        "id": "528997d7669de6bb",
        "type": "function",
        "z": "c58c4e92.63ec8",
        "name": "ASWLite_CatGpoParo",
        "func": "msg[\"topic\"] = \n'SELECT * FROM ASWLite_CatGpoParo'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 3020,
        "wires": [
            [
                "632db255d8089316"
            ]
        ]
    },
    {
        "id": "632db255d8089316",
        "type": "sqlite",
        "z": "c58c4e92.63ec8",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 610,
        "y": 3020,
        "wires": [
            []
        ]
    },
    {
        "id": "7546e39e99241480",
        "type": "inject",
        "z": "c58c4e92.63ec8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 120,
        "y": 3060,
        "wires": [
            [
                "c28dc5c659334ec3"
            ]
        ]
    },
    {
        "id": "c28dc5c659334ec3",
        "type": "function",
        "z": "c58c4e92.63ec8",
        "name": "ASWLite_CatSeccionParo",
        "func": "msg[\"topic\"] = \n'SELECT * FROM ASWLite_CatSeccionParo'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 3060,
        "wires": [
            [
                "8a7c6a719675e65c"
            ]
        ]
    },
    {
        "id": "8a7c6a719675e65c",
        "type": "sqlite",
        "z": "c58c4e92.63ec8",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 610,
        "y": 3060,
        "wires": [
            []
        ]
    },
    {
        "id": "118a789bb4e7b7a3",
        "type": "inject",
        "z": "c58c4e92.63ec8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 120,
        "y": 3100,
        "wires": [
            [
                "1a55860e4f482b1f"
            ]
        ]
    },
    {
        "id": "1a55860e4f482b1f",
        "type": "function",
        "z": "c58c4e92.63ec8",
        "name": "ASWLite_CatSeccionParoDatos",
        "func": "msg[\"topic\"] = \n'SELECT * FROM ASWLite_CatSeccionParoDatos'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 3100,
        "wires": [
            [
                "cf91d01c5529ae4c"
            ]
        ]
    },
    {
        "id": "cf91d01c5529ae4c",
        "type": "sqlite",
        "z": "c58c4e92.63ec8",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 610,
        "y": 3100,
        "wires": [
            []
        ]
    },
    {
        "id": "75fd524180943acc",
        "type": "inject",
        "z": "c58c4e92.63ec8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 120,
        "y": 3160,
        "wires": [
            [
                "f673c3b3aa1dfcea"
            ]
        ]
    },
    {
        "id": "f673c3b3aa1dfcea",
        "type": "function",
        "z": "c58c4e92.63ec8",
        "name": "ASWLite_CatTipoCorte",
        "func": "msg[\"topic\"] = \n'SELECT * FROM ASWLite_CatTipoCorte'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 3160,
        "wires": [
            [
                "18b7f1915feae4e7"
            ]
        ]
    },
    {
        "id": "18b7f1915feae4e7",
        "type": "sqlite",
        "z": "c58c4e92.63ec8",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 610,
        "y": 3160,
        "wires": [
            []
        ]
    },
    {
        "id": "cd4a72ec490ae449",
        "type": "inject",
        "z": "c58c4e92.63ec8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 120,
        "y": 3220,
        "wires": [
            [
                "8ac61ff110531ac7"
            ]
        ]
    },
    {
        "id": "8ac61ff110531ac7",
        "type": "function",
        "z": "c58c4e92.63ec8",
        "name": "ASWLite_CatTipoParo",
        "func": "msg[\"topic\"] = \n'SELECT * FROM ASWLite_CatTipoParo'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 3220,
        "wires": [
            [
                "a9cdcd9fdf2504be"
            ]
        ]
    },
    {
        "id": "a9cdcd9fdf2504be",
        "type": "sqlite",
        "z": "c58c4e92.63ec8",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 610,
        "y": 3220,
        "wires": [
            []
        ]
    },
    {
        "id": "5c80bdcbe8bad3d2",
        "type": "inject",
        "z": "c58c4e92.63ec8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 980,
        "y": 2500,
        "wires": [
            [
                "eb8d4a70fde1955a"
            ]
        ]
    },
    {
        "id": "eb8d4a70fde1955a",
        "type": "function",
        "z": "c58c4e92.63ec8",
        "name": "ASWLite_CatTipoSeguimientoAlerta",
        "func": "msg[\"topic\"] = \n'SELECT * FROM ASWLite_CatTipoSeguimientoAlerta'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1230,
        "y": 2500,
        "wires": [
            [
                "eaee5bb651cb2f2e"
            ]
        ]
    },
    {
        "id": "eaee5bb651cb2f2e",
        "type": "sqlite",
        "z": "c58c4e92.63ec8",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 1470,
        "y": 2500,
        "wires": [
            []
        ]
    },
    {
        "id": "d71ee3c46a5e215f",
        "type": "inject",
        "z": "c58c4e92.63ec8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 980,
        "y": 2540,
        "wires": [
            [
                "fab66974ddaeac1a"
            ]
        ]
    },
    {
        "id": "fab66974ddaeac1a",
        "type": "function",
        "z": "c58c4e92.63ec8",
        "name": "ASWLite_CfgBSCProductionChart",
        "func": "msg[\"topic\"] = \n'SELECT * FROM ASWLite_CfgBSCProductionChart'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1220,
        "y": 2540,
        "wires": [
            [
                "e24d48ade1eba5fa"
            ]
        ]
    },
    {
        "id": "e24d48ade1eba5fa",
        "type": "sqlite",
        "z": "c58c4e92.63ec8",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 1470,
        "y": 2540,
        "wires": [
            []
        ]
    },
    {
        "id": "ef8b29abac23cf31",
        "type": "inject",
        "z": "c58c4e92.63ec8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 980,
        "y": 2580,
        "wires": [
            [
                "688872b7c0ccf8f1"
            ]
        ]
    },
    {
        "id": "688872b7c0ccf8f1",
        "type": "function",
        "z": "c58c4e92.63ec8",
        "name": "AswLite_CatFolioBitacora ",
        "func": "msg[\"topic\"] = \n'SELECT * FROM AswLite_CatFolioBitacora  '\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 2580,
        "wires": [
            [
                "6a0d4ebaadb3f0b9"
            ]
        ]
    },
    {
        "id": "6a0d4ebaadb3f0b9",
        "type": "sqlite",
        "z": "c58c4e92.63ec8",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 1470,
        "y": 2580,
        "wires": [
            [
                "80b3d8251223fcd3"
            ]
        ]
    },
    {
        "id": "39af519aefb9febe",
        "type": "inject",
        "z": "c58c4e92.63ec8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 980,
        "y": 2620,
        "wires": [
            [
                "c85dadf6b0803aaa"
            ]
        ]
    },
    {
        "id": "c85dadf6b0803aaa",
        "type": "function",
        "z": "c58c4e92.63ec8",
        "name": "AswLite_CfgParametrosOperacion",
        "func": "msg[\"topic\"] = \n'SELECT * FROM AswLite_CfgParametrosOperacion '\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1220,
        "y": 2620,
        "wires": [
            [
                "c51057a62af5e93c"
            ]
        ]
    },
    {
        "id": "c51057a62af5e93c",
        "type": "sqlite",
        "z": "c58c4e92.63ec8",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 1470,
        "y": 2620,
        "wires": [
            [
                "19111731526484eb"
            ]
        ]
    },
    {
        "id": "b8f69985f1362b3a",
        "type": "inject",
        "z": "c58c4e92.63ec8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 980,
        "y": 2660,
        "wires": [
            [
                "2b188d5cce8130e0"
            ]
        ]
    },
    {
        "id": "2b188d5cce8130e0",
        "type": "function",
        "z": "c58c4e92.63ec8",
        "name": "ASWLite_CfgConfiguracion",
        "func": "msg[\"topic\"] = \n'SELECT * FROM ASWLite_CfgConfiguracion'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 2660,
        "wires": [
            [
                "4f46e2ef7e894cb3"
            ]
        ]
    },
    {
        "id": "4f46e2ef7e894cb3",
        "type": "sqlite",
        "z": "c58c4e92.63ec8",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 1470,
        "y": 2660,
        "wires": [
            [
                "2831ca8ea7318614"
            ]
        ]
    },
    {
        "id": "f54f355427b12866",
        "type": "inject",
        "z": "c58c4e92.63ec8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 980,
        "y": 2700,
        "wires": [
            [
                "b1555756fec2bf77"
            ]
        ]
    },
    {
        "id": "b1555756fec2bf77",
        "type": "function",
        "z": "c58c4e92.63ec8",
        "name": "AswLite_CfgParametrosOperacion",
        "func": "msg[\"topic\"] = \n'SELECT * FROM AswLite_CfgParametrosOperacion'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1220,
        "y": 2700,
        "wires": [
            [
                "45ae6422b54bbfbd"
            ]
        ]
    },
    {
        "id": "45ae6422b54bbfbd",
        "type": "sqlite",
        "z": "c58c4e92.63ec8",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 1470,
        "y": 2700,
        "wires": [
            []
        ]
    },
    {
        "id": "386b13933b1cec90",
        "type": "inject",
        "z": "c58c4e92.63ec8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 980,
        "y": 2740,
        "wires": [
            [
                "cfd6fe79f7659fb9"
            ]
        ]
    },
    {
        "id": "cfd6fe79f7659fb9",
        "type": "function",
        "z": "c58c4e92.63ec8",
        "name": " ASWLite_MtoCatEquipoCelda",
        "func": "msg[\"topic\"] = \n'SELECT * FROM ASWLite_MtoCatEquipoCelda'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1210,
        "y": 2740,
        "wires": [
            [
                "9c476bf34a5bc173"
            ]
        ]
    },
    {
        "id": "9c476bf34a5bc173",
        "type": "sqlite",
        "z": "c58c4e92.63ec8",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 1470,
        "y": 2740,
        "wires": [
            []
        ]
    },
    {
        "id": "db66e9f52b16f73c",
        "type": "inject",
        "z": "c58c4e92.63ec8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 980,
        "y": 2780,
        "wires": [
            [
                "c214c8f15d173e55"
            ]
        ]
    },
    {
        "id": "c214c8f15d173e55",
        "type": "function",
        "z": "c58c4e92.63ec8",
        "name": "ASWLite_MtoCatRcmFuncion",
        "func": "msg[\"topic\"] = \n'SELECT * FROM ASWLite_MtoCatRcmFuncion'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1210,
        "y": 2780,
        "wires": [
            [
                "ac32c3416e4d4e14"
            ]
        ]
    },
    {
        "id": "ac32c3416e4d4e14",
        "type": "sqlite",
        "z": "c58c4e92.63ec8",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 1470,
        "y": 2780,
        "wires": [
            []
        ]
    },
    {
        "id": "461979779663de31",
        "type": "inject",
        "z": "c58c4e92.63ec8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 980,
        "y": 2820,
        "wires": [
            [
                "cbd05f5b3b1ad12b"
            ]
        ]
    },
    {
        "id": "cbd05f5b3b1ad12b",
        "type": "function",
        "z": "c58c4e92.63ec8",
        "name": "ASWLite_MtoCatRcmFuncionFalla",
        "func": "msg[\"topic\"] = \n'SELECT * FROM ASWLite_MtoCatRcmFuncionFalla'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1220,
        "y": 2820,
        "wires": [
            [
                "96037695762c3db6"
            ]
        ]
    },
    {
        "id": "96037695762c3db6",
        "type": "sqlite",
        "z": "c58c4e92.63ec8",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 1470,
        "y": 2820,
        "wires": [
            []
        ]
    },
    {
        "id": "a239317895185224",
        "type": "inject",
        "z": "c58c4e92.63ec8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 980,
        "y": 2860,
        "wires": [
            [
                "f0c881b987110ba1"
            ]
        ]
    },
    {
        "id": "f0c881b987110ba1",
        "type": "function",
        "z": "c58c4e92.63ec8",
        "name": " ASWLite_MtoCatSistema",
        "func": "msg[\"topic\"] = \n'SELECT * FROM  ASWLite_MtoCatSistema'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 2860,
        "wires": [
            [
                "f04774792e2c6f96"
            ]
        ]
    },
    {
        "id": "f04774792e2c6f96",
        "type": "sqlite",
        "z": "c58c4e92.63ec8",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 1470,
        "y": 2860,
        "wires": [
            []
        ]
    },
    {
        "id": "cca7cc66cd4498e6",
        "type": "inject",
        "z": "c58c4e92.63ec8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 980,
        "y": 2900,
        "wires": [
            [
                "be4e499f621a47c8"
            ]
        ]
    },
    {
        "id": "be4e499f621a47c8",
        "type": "function",
        "z": "c58c4e92.63ec8",
        "name": "ASWLite_MtoCatSubSistema",
        "func": "msg[\"topic\"] = \n'SELECT * FROM ASWLite_MtoCatSubSistema'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 2900,
        "wires": [
            [
                "07c4eefbf703401f"
            ]
        ]
    },
    {
        "id": "07c4eefbf703401f",
        "type": "sqlite",
        "z": "c58c4e92.63ec8",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 1470,
        "y": 2900,
        "wires": [
            []
        ]
    },
    {
        "id": "302859444dd7a6d2",
        "type": "inject",
        "z": "c58c4e92.63ec8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 980,
        "y": 2940,
        "wires": [
            [
                "dc4e97abd46f0d79"
            ]
        ]
    },
    {
        "id": "dc4e97abd46f0d79",
        "type": "function",
        "z": "c58c4e92.63ec8",
        "name": " ASWLite_MtoCatEquipoCelda",
        "func": "msg[\"topic\"] = \n'SELECT * FROM ASWLite_MtoCatEquipoCelda'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1210,
        "y": 2940,
        "wires": [
            [
                "54b417a2e1548906"
            ]
        ]
    },
    {
        "id": "54b417a2e1548906",
        "type": "sqlite",
        "z": "c58c4e92.63ec8",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 1470,
        "y": 2940,
        "wires": [
            []
        ]
    },
    {
        "id": "a02e81e1e61a34ec",
        "type": "inject",
        "z": "c58c4e92.63ec8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 980,
        "y": 2980,
        "wires": [
            [
                "30515b5b8fc55a47"
            ]
        ]
    },
    {
        "id": "30515b5b8fc55a47",
        "type": "function",
        "z": "c58c4e92.63ec8",
        "name": "ASWLite_MtoTraOT",
        "func": "msg[\"topic\"] = \n'SELECT * FROM ASWLite_MtoTraOT'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1180,
        "y": 2980,
        "wires": [
            [
                "8fef675a0768ba27"
            ]
        ]
    },
    {
        "id": "8fef675a0768ba27",
        "type": "sqlite",
        "z": "c58c4e92.63ec8",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 1470,
        "y": 2980,
        "wires": [
            []
        ]
    },
    {
        "id": "c340567f790e6e0c",
        "type": "inject",
        "z": "c58c4e92.63ec8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 980,
        "y": 3020,
        "wires": [
            [
                "e360032e0b44656c"
            ]
        ]
    },
    {
        "id": "e360032e0b44656c",
        "type": "function",
        "z": "c58c4e92.63ec8",
        "name": "ASWLite_MtoTraOTActividad",
        "func": "msg[\"topic\"] = \n'SELECT * FROM ASWLite_MtoTraOTActividad'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 3020,
        "wires": [
            [
                "251437ec970751d3"
            ]
        ]
    },
    {
        "id": "251437ec970751d3",
        "type": "sqlite",
        "z": "c58c4e92.63ec8",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 1470,
        "y": 3020,
        "wires": [
            []
        ]
    },
    {
        "id": "d4a4d34185399198",
        "type": "inject",
        "z": "c58c4e92.63ec8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 980,
        "y": 3060,
        "wires": [
            [
                "fe3cef7f18ce67a5"
            ]
        ]
    },
    {
        "id": "fe3cef7f18ce67a5",
        "type": "function",
        "z": "c58c4e92.63ec8",
        "name": " ASWLite_MtoTraOTActividadPaso",
        "func": "msg[\"topic\"] = \n'SELECT * FROM ASWLite_MtoTraOTActividadPaso'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1220,
        "y": 3060,
        "wires": [
            [
                "a202062d7425b34e"
            ]
        ]
    },
    {
        "id": "a202062d7425b34e",
        "type": "sqlite",
        "z": "c58c4e92.63ec8",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 1470,
        "y": 3060,
        "wires": [
            []
        ]
    },
    {
        "id": "ba24ce9399919f34",
        "type": "inject",
        "z": "c58c4e92.63ec8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 980,
        "y": 3100,
        "wires": [
            [
                "c6d2fff370244419"
            ]
        ]
    },
    {
        "id": "c6d2fff370244419",
        "type": "function",
        "z": "c58c4e92.63ec8",
        "name": "ASWLite_MtoTraOTActividadVariable",
        "func": "msg[\"topic\"] = \n'SELECT * FROM ASWLite_MtoTraOTActividadVariable'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1230,
        "y": 3100,
        "wires": [
            [
                "c93a608ee571c9e3"
            ]
        ]
    },
    {
        "id": "c93a608ee571c9e3",
        "type": "sqlite",
        "z": "c58c4e92.63ec8",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 1470,
        "y": 3100,
        "wires": [
            []
        ]
    },
    {
        "id": "3083d1507eda13fe",
        "type": "inject",
        "z": "c58c4e92.63ec8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 980,
        "y": 3140,
        "wires": [
            [
                "206acfe933180b30"
            ]
        ]
    },
    {
        "id": "206acfe933180b30",
        "type": "function",
        "z": "c58c4e92.63ec8",
        "name": "ASWLite_MtoTraRcmModoFalla",
        "func": "msg[\"topic\"] = \n'SELECT * FROM ASWLite_MtoTraRcmModoFalla'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1210,
        "y": 3140,
        "wires": [
            [
                "78151c33ffbf16c7"
            ]
        ]
    },
    {
        "id": "78151c33ffbf16c7",
        "type": "sqlite",
        "z": "c58c4e92.63ec8",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 1470,
        "y": 3140,
        "wires": [
            []
        ]
    },
    {
        "id": "41810ad1b4316d49",
        "type": "inject",
        "z": "c58c4e92.63ec8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 980,
        "y": 3180,
        "wires": [
            [
                "1cede61144cb3262"
            ]
        ]
    },
    {
        "id": "1cede61144cb3262",
        "type": "function",
        "z": "c58c4e92.63ec8",
        "name": "SWLite_MtoTraReporteFalla",
        "func": "msg[\"topic\"] = \n'SELECT * FROM ASWLite_MtoTraReporteFalla'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 3180,
        "wires": [
            [
                "090f816c88f635d9"
            ]
        ]
    },
    {
        "id": "090f816c88f635d9",
        "type": "sqlite",
        "z": "c58c4e92.63ec8",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 1470,
        "y": 3180,
        "wires": [
            []
        ]
    },
    {
        "id": "58d64a6d93bc7aa4",
        "type": "inject",
        "z": "c58c4e92.63ec8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 980,
        "y": 3220,
        "wires": [
            [
                "fc83388fb72ef7cc"
            ]
        ]
    },
    {
        "id": "fc83388fb72ef7cc",
        "type": "function",
        "z": "c58c4e92.63ec8",
        "name": "ASWLite_RelAlertaSeccionParo",
        "func": "msg[\"topic\"] = \n'SELECT * FROM ASWLite_RelAlertaSeccionParo_'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 3220,
        "wires": [
            [
                "3373486ef59a2112"
            ]
        ]
    },
    {
        "id": "3373486ef59a2112",
        "type": "sqlite",
        "z": "c58c4e92.63ec8",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 1470,
        "y": 3220,
        "wires": [
            []
        ]
    },
    {
        "id": "e877c1a13faac0f7",
        "type": "inject",
        "z": "c58c4e92.63ec8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 980,
        "y": 3260,
        "wires": [
            [
                "6b457b99bee8855b"
            ]
        ]
    },
    {
        "id": "6b457b99bee8855b",
        "type": "function",
        "z": "c58c4e92.63ec8",
        "name": "ASWLite_RelAlertaSeccionParo",
        "func": "msg[\"topic\"] = \n'SELECT * FROM ASWLite_RelAlertaSeccionParo'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1220,
        "y": 3260,
        "wires": [
            [
                "66933e48102e7330"
            ]
        ]
    },
    {
        "id": "66933e48102e7330",
        "type": "sqlite",
        "z": "c58c4e92.63ec8",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 1430,
        "y": 3260,
        "wires": [
            []
        ]
    },
    {
        "id": "da3d46517997b8af",
        "type": "inject",
        "z": "c58c4e92.63ec8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 980,
        "y": 3300,
        "wires": [
            [
                "2827e4f8aa849b24"
            ]
        ]
    },
    {
        "id": "2827e4f8aa849b24",
        "type": "function",
        "z": "c58c4e92.63ec8",
        "name": "ASWLite_RelAlertaTipoSeguimientoAlerta",
        "func": "msg[\"topic\"] = \n'SELECT * FROM ASWLite_RelAlertaTipoSeguimientoAlerta'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1230,
        "y": 3300,
        "wires": [
            [
                "bf071c35246c77e7"
            ]
        ]
    },
    {
        "id": "bf071c35246c77e7",
        "type": "sqlite",
        "z": "c58c4e92.63ec8",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 1470,
        "y": 3300,
        "wires": [
            []
        ]
    },
    {
        "id": "3228d64c2a05e3e6",
        "type": "inject",
        "z": "c58c4e92.63ec8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 980,
        "y": 3340,
        "wires": [
            [
                "fda5fe7ec662140e"
            ]
        ]
    },
    {
        "id": "fda5fe7ec662140e",
        "type": "function",
        "z": "c58c4e92.63ec8",
        "name": "ASWLite_RelAlertaSeccionParo",
        "func": "msg[\"topic\"] = \n'SELECT * FROM ASWLite_RelAlertaSeccionParo'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1220,
        "y": 3340,
        "wires": [
            [
                "8bedae5c72f755bb"
            ]
        ]
    },
    {
        "id": "8bedae5c72f755bb",
        "type": "sqlite",
        "z": "c58c4e92.63ec8",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 1430,
        "y": 3340,
        "wires": [
            []
        ]
    },
    {
        "id": "190a62cc5936fe09",
        "type": "inject",
        "z": "c58c4e92.63ec8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 980,
        "y": 3380,
        "wires": [
            [
                "d3719e53f88a773d"
            ]
        ]
    },
    {
        "id": "d3719e53f88a773d",
        "type": "function",
        "z": "c58c4e92.63ec8",
        "name": "ASWLite_RelAlertaTipoSeguimientoAlerta",
        "func": "msg[\"topic\"] = \n'SELECT * FROM ASWLite_RelAlertaTipoSeguimientoAlerta'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1250,
        "y": 3380,
        "wires": [
            [
                "979f16291ffc7739"
            ]
        ]
    },
    {
        "id": "979f16291ffc7739",
        "type": "sqlite",
        "z": "c58c4e92.63ec8",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 1490,
        "y": 3380,
        "wires": [
            []
        ]
    },
    {
        "id": "468539c069c7b98a",
        "type": "inject",
        "z": "c58c4e92.63ec8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 980,
        "y": 3420,
        "wires": [
            [
                "7936ec9209cc74b3"
            ]
        ]
    },
    {
        "id": "7936ec9209cc74b3",
        "type": "function",
        "z": "c58c4e92.63ec8",
        "name": "ASWLite_RelTipoParoGpoParo",
        "func": "msg[\"topic\"] = \n'SELECT * FROM ASWLite_RelTipoParoGpoParo'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1220,
        "y": 3420,
        "wires": [
            [
                "f69d32a914c3ddc1"
            ]
        ]
    },
    {
        "id": "f69d32a914c3ddc1",
        "type": "sqlite",
        "z": "c58c4e92.63ec8",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 1430,
        "y": 3420,
        "wires": [
            []
        ]
    },
    {
        "id": "1033a6580fa83f62",
        "type": "inject",
        "z": "c58c4e92.63ec8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 980,
        "y": 3460,
        "wires": [
            [
                "3a18cb49c1af0d91"
            ]
        ]
    },
    {
        "id": "3a18cb49c1af0d91",
        "type": "function",
        "z": "c58c4e92.63ec8",
        "name": "ASWLite_TraFinCajaMCSW",
        "func": "msg[\"topic\"] = \n'SELECT * FROM ASWLite_TraFinCajaMCSW;';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1210,
        "y": 3460,
        "wires": [
            [
                "ab92893948c2c21c"
            ]
        ]
    },
    {
        "id": "ab92893948c2c21c",
        "type": "sqlite",
        "z": "c58c4e92.63ec8",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 1430,
        "y": 3460,
        "wires": [
            []
        ]
    },
    {
        "id": "1b4f99582aca69b4",
        "type": "inject",
        "z": "c58c4e92.63ec8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 980,
        "y": 3500,
        "wires": [
            [
                "3d83b639aa1510fb"
            ]
        ]
    },
    {
        "id": "3d83b639aa1510fb",
        "type": "function",
        "z": "c58c4e92.63ec8",
        "name": "ASWLite_TraGraficaProduccion",
        "func": "msg[\"topic\"] = \n'SELECT * FROM ASWLite_TraGraficaProduccion'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1220,
        "y": 3500,
        "wires": [
            [
                "282ad038b2921c4c"
            ]
        ]
    },
    {
        "id": "282ad038b2921c4c",
        "type": "sqlite",
        "z": "c58c4e92.63ec8",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 1430,
        "y": 3500,
        "wires": [
            []
        ]
    },
    {
        "id": "d018c662517fe4b3",
        "type": "inject",
        "z": "c58c4e92.63ec8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 980,
        "y": 3540,
        "wires": [
            [
                "d0592a55177122a6"
            ]
        ]
    },
    {
        "id": "d0592a55177122a6",
        "type": "function",
        "z": "c58c4e92.63ec8",
        "name": "AswLite_TraGraficaVelocidad",
        "func": "msg[\"topic\"] = \n'SELECT * FROM AswLite_TraGraficaVelocidad'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1210,
        "y": 3540,
        "wires": [
            [
                "94e85d24d6790101"
            ]
        ]
    },
    {
        "id": "94e85d24d6790101",
        "type": "sqlite",
        "z": "c58c4e92.63ec8",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 1430,
        "y": 3540,
        "wires": [
            []
        ]
    },
    {
        "id": "1f5e91b9e3fa0f37",
        "type": "inject",
        "z": "c58c4e92.63ec8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 980,
        "y": 3580,
        "wires": [
            [
                "86d8f5a8f38a9de5"
            ]
        ]
    },
    {
        "id": "86d8f5a8f38a9de5",
        "type": "function",
        "z": "c58c4e92.63ec8",
        "name": "ASWLite_TraIndicadorOEE",
        "func": "msg[\"topic\"] = \n'SELECT * FROM ASWLite_TraIndicadorOEE'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1210,
        "y": 3580,
        "wires": [
            [
                "7c5cba6f21d4d651"
            ]
        ]
    },
    {
        "id": "7c5cba6f21d4d651",
        "type": "sqlite",
        "z": "c58c4e92.63ec8",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 1430,
        "y": 3580,
        "wires": [
            []
        ]
    },
    {
        "id": "e23f973a4a46bef7",
        "type": "inject",
        "z": "c58c4e92.63ec8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 3280,
        "wires": [
            [
                "e6c435847eb2f453"
            ]
        ]
    },
    {
        "id": "e6c435847eb2f453",
        "type": "function",
        "z": "c58c4e92.63ec8",
        "name": " ASWLite_TraIndicadorOEEDet",
        "func": "msg[\"topic\"] = \n'SELECT * FROM ASWLite_TraIndicadorOEEDet'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 3280,
        "wires": [
            [
                "1c4a9bba8fca0b1d"
            ]
        ]
    },
    {
        "id": "1c4a9bba8fca0b1d",
        "type": "sqlite",
        "z": "c58c4e92.63ec8",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 590,
        "y": 3280,
        "wires": [
            []
        ]
    },
    {
        "id": "7767d1080c0f9b9a",
        "type": "inject",
        "z": "c58c4e92.63ec8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 3320,
        "wires": [
            [
                "552befed804c456b"
            ]
        ]
    },
    {
        "id": "552befed804c456b",
        "type": "function",
        "z": "c58c4e92.63ec8",
        "name": "ASWLite_RelAlertaSeccionParo",
        "func": "msg[\"topic\"] = \n'SELECT * FROM ASWLite_RelAlertaSeccionParo'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 3320,
        "wires": [
            [
                "242e17478424921a"
            ]
        ]
    },
    {
        "id": "242e17478424921a",
        "type": "sqlite",
        "z": "c58c4e92.63ec8",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 590,
        "y": 3320,
        "wires": [
            []
        ]
    },
    {
        "id": "10df917c570ebb5b",
        "type": "inject",
        "z": "c58c4e92.63ec8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 3360,
        "wires": [
            [
                "3c27577817e492d0"
            ]
        ]
    },
    {
        "id": "3c27577817e492d0",
        "type": "function",
        "z": "c58c4e92.63ec8",
        "name": "ASWLite_TraMateriaPrima",
        "func": "msg[\"topic\"] = \n'SELECT * FROM ASWLite_TraMateriaPrima'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 3360,
        "wires": [
            [
                "8770d54aefd08694"
            ]
        ]
    },
    {
        "id": "8770d54aefd08694",
        "type": "sqlite",
        "z": "c58c4e92.63ec8",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 590,
        "y": 3360,
        "wires": [
            [
                "a81e08ada02d66e0"
            ]
        ]
    },
    {
        "id": "091775ecf59c5719",
        "type": "inject",
        "z": "c58c4e92.63ec8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 3400,
        "wires": [
            [
                "c8d49a222ebb893c"
            ]
        ]
    },
    {
        "id": "c8d49a222ebb893c",
        "type": "function",
        "z": "c58c4e92.63ec8",
        "name": "ASWLite_RelAlertaSeccionParo",
        "func": "msg[\"topic\"] = \n'SELECT * FROM ASWLite_RelAlertaSeccionParo'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 3400,
        "wires": [
            [
                "d7fea515a6a96c0f"
            ]
        ]
    },
    {
        "id": "d7fea515a6a96c0f",
        "type": "sqlite",
        "z": "c58c4e92.63ec8",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 590,
        "y": 3400,
        "wires": [
            []
        ]
    },
    {
        "id": "834d65f707bda640",
        "type": "inject",
        "z": "c58c4e92.63ec8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 3440,
        "wires": [
            [
                "8580269f74559403"
            ]
        ]
    },
    {
        "id": "8580269f74559403",
        "type": "function",
        "z": "c58c4e92.63ec8",
        "name": "ASWLite_TraMejora",
        "func": "msg[\"topic\"] = \n'SELECT * FROM ASWLite_TraMejora'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 3440,
        "wires": [
            [
                "4c6f668146cc36be"
            ]
        ]
    },
    {
        "id": "4c6f668146cc36be",
        "type": "sqlite",
        "z": "c58c4e92.63ec8",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 590,
        "y": 3440,
        "wires": [
            []
        ]
    },
    {
        "id": "60d19cf25c6867f0",
        "type": "inject",
        "z": "c58c4e92.63ec8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 3480,
        "wires": [
            [
                "8a934eb4b237b237"
            ]
        ]
    },
    {
        "id": "8a934eb4b237b237",
        "type": "function",
        "z": "c58c4e92.63ec8",
        "name": "ASWLite_RelAlertaSeccionParo",
        "func": "msg[\"topic\"] = \n'SELECT * FROM ASWLite_RelAlertaSeccionParo'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 3480,
        "wires": [
            [
                "e4097667b4b35836"
            ]
        ]
    },
    {
        "id": "e4097667b4b35836",
        "type": "sqlite",
        "z": "c58c4e92.63ec8",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 590,
        "y": 3480,
        "wires": [
            []
        ]
    },
    {
        "id": "756704754915de3f",
        "type": "inject",
        "z": "c58c4e92.63ec8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 3520,
        "wires": [
            [
                "26a218257409e327"
            ]
        ]
    },
    {
        "id": "26a218257409e327",
        "type": "function",
        "z": "c58c4e92.63ec8",
        "name": "ASWLite_TraOrdenProduccion",
        "func": "msg[\"topic\"] = \n'SELECT * FROM ASWLite_TraOrdenProduccion;';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 3520,
        "wires": [
            [
                "ab4691b35994a596"
            ]
        ]
    },
    {
        "id": "ab4691b35994a596",
        "type": "sqlite",
        "z": "c58c4e92.63ec8",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 590,
        "y": 3520,
        "wires": [
            []
        ]
    },
    {
        "id": "623cddc17d62587d",
        "type": "inject",
        "z": "c58c4e92.63ec8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 3560,
        "wires": [
            [
                "d586baa3a65c7b67"
            ]
        ]
    },
    {
        "id": "d586baa3a65c7b67",
        "type": "function",
        "z": "c58c4e92.63ec8",
        "name": "ASWLite_RelAlertaSeccionParo",
        "func": "msg[\"topic\"] = \n'SELECT * FROM ASWLite_RelAlertaSeccionParo'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 3560,
        "wires": [
            [
                "91514761a653c47b"
            ]
        ]
    },
    {
        "id": "91514761a653c47b",
        "type": "sqlite",
        "z": "c58c4e92.63ec8",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 590,
        "y": 3560,
        "wires": [
            []
        ]
    },
    {
        "id": "5584d62d5c16c327",
        "type": "inject",
        "z": "c58c4e92.63ec8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 3600,
        "wires": [
            [
                "c4b0d56193f87f81"
            ]
        ]
    },
    {
        "id": "c4b0d56193f87f81",
        "type": "function",
        "z": "c58c4e92.63ec8",
        "name": "ASWLite_TraOrdenProduccionDet",
        "func": "msg[\"topic\"] = \n'SELECT * FROM ASWLite_TraOrdenProduccionDet;';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 3600,
        "wires": [
            [
                "b518b53ea4ceecc7"
            ]
        ]
    },
    {
        "id": "b518b53ea4ceecc7",
        "type": "sqlite",
        "z": "c58c4e92.63ec8",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 590,
        "y": 3600,
        "wires": [
            []
        ]
    },
    {
        "id": "a4d8d83433395ab7",
        "type": "inject",
        "z": "c58c4e92.63ec8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 3640,
        "wires": [
            [
                "e2b270e0b1f706e2"
            ]
        ]
    },
    {
        "id": "e2b270e0b1f706e2",
        "type": "function",
        "z": "c58c4e92.63ec8",
        "name": "ASWLite_TraParoMantenimiento",
        "func": "msg[\"topic\"] = \n'SELECT * FROM ASWLite_TraParoMantenimiento'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 3640,
        "wires": [
            [
                "f2c76a88aa782afa"
            ]
        ]
    },
    {
        "id": "f2c76a88aa782afa",
        "type": "sqlite",
        "z": "c58c4e92.63ec8",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 590,
        "y": 3640,
        "wires": [
            []
        ]
    },
    {
        "id": "8a7ffb2d3d22948d",
        "type": "inject",
        "z": "c58c4e92.63ec8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 3680,
        "wires": [
            [
                "8c1946cf3ee92ba7"
            ]
        ]
    },
    {
        "id": "8c1946cf3ee92ba7",
        "type": "function",
        "z": "c58c4e92.63ec8",
        "name": "ASWLite_TraProductBluePrint",
        "func": "msg[\"topic\"] = \n'SELECT * FROM ASWLite_TraProductBluePrint'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 3680,
        "wires": [
            [
                "49b1f13f7713d4a1"
            ]
        ]
    },
    {
        "id": "49b1f13f7713d4a1",
        "type": "sqlite",
        "z": "c58c4e92.63ec8",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 590,
        "y": 3680,
        "wires": [
            []
        ]
    },
    {
        "id": "241ac4f092bf1132",
        "type": "inject",
        "z": "c58c4e92.63ec8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 3720,
        "wires": [
            [
                "2ac047681560b1e3"
            ]
        ]
    },
    {
        "id": "2ac047681560b1e3",
        "type": "function",
        "z": "c58c4e92.63ec8",
        "name": "ASWLite_TraReporteProduccion",
        "func": "msg[\"topic\"] = \n'SELECT * FROM ASWLite_TraReporteProduccion'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 3720,
        "wires": [
            [
                "bf01b31bb9b973be"
            ]
        ]
    },
    {
        "id": "bf01b31bb9b973be",
        "type": "sqlite",
        "z": "c58c4e92.63ec8",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 590,
        "y": 3720,
        "wires": [
            []
        ]
    },
    {
        "id": "3cc0b84a4b4fbaf3",
        "type": "inject",
        "z": "c58c4e92.63ec8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 3760,
        "wires": [
            [
                "b047e4bf6647b881"
            ]
        ]
    },
    {
        "id": "b047e4bf6647b881",
        "type": "function",
        "z": "c58c4e92.63ec8",
        "name": " ASWLite_TraScrap",
        "func": "msg[\"topic\"] = \n'SELECT * FROM ASWLite_TraScrap'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 3760,
        "wires": [
            [
                "718b9315351c3fad"
            ]
        ]
    },
    {
        "id": "718b9315351c3fad",
        "type": "sqlite",
        "z": "c58c4e92.63ec8",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 590,
        "y": 3760,
        "wires": [
            []
        ]
    },
    {
        "id": "563e03a4.fd794c",
        "type": "subflow:e4f0e9b3.dbf928",
        "z": "c58c4e92.63ec8",
        "name": "",
        "env": [],
        "x": 1450,
        "y": 2220,
        "wires": [
            [
                "943f68c8.542fb8"
            ]
        ]
    },
    {
        "id": "5836af8166f74793",
        "type": "inject",
        "z": "c58c4e92.63ec8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 980,
        "y": 3660,
        "wires": [
            [
                "dd46661ff03ba53e"
            ]
        ]
    },
    {
        "id": "dd46661ff03ba53e",
        "type": "function",
        "z": "c58c4e92.63ec8",
        "name": "ASWLite_CatArticuloGeneral",
        "func": "msg[\"topic\"] = \n'SELECT * FROM ASWLite_CatArticuloGeneral'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1210,
        "y": 3660,
        "wires": [
            [
                "106d71a3615432aa"
            ]
        ]
    },
    {
        "id": "106d71a3615432aa",
        "type": "sqlite",
        "z": "c58c4e92.63ec8",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 1470,
        "y": 3660,
        "wires": [
            []
        ]
    },
    {
        "id": "69449980.5d7af8",
        "type": "inject",
        "z": "c58c4e92.63ec8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "3600",
        "crontab": "",
        "once": true,
        "onceDelay": "0.1",
        "topic": "",
        "payloadType": "date",
        "x": 130,
        "y": 1620,
        "wires": [
            [
                "9f460a61.81bea8"
            ]
        ]
    },
    {
        "id": "9f460a61.81bea8",
        "type": "function",
        "z": "c58c4e92.63ec8",
        "name": "FnMaquinaSel",
        "func": "\nmsg.topic = `\nSELECT ClaMaquina AS IdComponente\n    ,ClaveMaquina\n    ,M.ClaTipoMaquina\n    ,CASE M.ClaTipoMaquina\n        WHEN 1 THEN 'HEADER'\n        WHEN 2 THEN 'THREADER'\n        WHEN 3 THEN 'COLLATOR'\n        WHEN 4 THEN 'CLEANER'\n        WHEN 6 THEN 'ROBOT'\n        ELSE NomMaquina \n        END AS NomTipoMaquina\n    ,NomMaquina\n    ,PullyArms\n\t,PulleyRevs\n\t,NailsPerRev\n\t,RobotBrand\n\t,EsGralProduccion\n\t,EsGralParos\n\t,EsMaquina\n    ,TipoSeñal\n    ,CASE WHEN ClaMaquinaReporta IS NULL\n    \tTHEN ClaMaquina\n    \tELSE ClaMaquinaReporta\n    \tEND AS ClaMaquinaReporta\n    ,GPIO \t\n\t,Pin\t \n\t,Entrada\t\n\t,Dispositivo\t\n\t,Origen \t\n\t,Posicion\nFROM ASWLite_CatWorkUnit M\nWHERE BajaLogica = 0\nORDER BY EsMAquina DESC, M.ClaTipoMaquina, ClaveMaquina`\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 1620,
        "wires": [
            [
                "8ffd7af4.6f2818"
            ]
        ]
    },
    {
        "id": "8ffd7af4.6f2818",
        "type": "sqlite",
        "z": "c58c4e92.63ec8",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 460,
        "y": 1620,
        "wires": [
            [
                "1361bc08.a22814",
                "1b80703296ecd93d",
                "88ef5e98a4cca732"
            ]
        ]
    },
    {
        "id": "1361bc08.a22814",
        "type": "function",
        "z": "c58c4e92.63ec8",
        "name": "FnSetMaquinasCelda",
        "func": "if (msg.payload.length > 0){\n    global.set(\"MaquinasCelda\", msg.payload)\n}\nelse{\n    global.set(\"MaquinasCelda\", undefined)\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 1620,
        "wires": [
            [
                "c915c6ab.498658"
            ]
        ]
    },
    {
        "id": "c915c6ab.498658",
        "type": "switch",
        "z": "c58c4e92.63ec8",
        "name": "",
        "property": "MaquinasCelda",
        "propertyType": "global",
        "rules": [
            {
                "t": "null"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 830,
        "y": 1620,
        "wires": [
            [
                "80f14cb5.89c4d"
            ]
        ]
    },
    {
        "id": "80f14cb5.89c4d",
        "type": "delay",
        "z": "c58c4e92.63ec8",
        "name": "",
        "pauseType": "delay",
        "timeout": "30",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 960,
        "y": 1620,
        "wires": [
            [
                "9f460a61.81bea8"
            ]
        ]
    },
    {
        "id": "e8fde142.49a13",
        "type": "comment",
        "z": "c58c4e92.63ec8",
        "name": "Crea variable global MaquinasCelda",
        "info": "MaquinasCelda se usa para determinar el IdComponente de las entradas GPIO",
        "x": 180,
        "y": 1580,
        "wires": []
    },
    {
        "id": "97b15492.bfa8b8",
        "type": "function",
        "z": "c58c4e92.63ec8",
        "name": "GetClavosCaja",
        "func": "msg.topic=`\nSELECT NomValorCaractIngles AS ClavosCaja\nFROM ASWLite_VariablesProduccion VP\nJOIN  ASWLite_CatArticuloCaracteristicas AC\n\tON VP.ClaArticulo = AC.ClaArticulo\nWHERE ClaCaracteristica=(SELECT Valor1 FROM ASWLite_CfgConfiguracion WHERE ClaveConfiguracion ='CLA_NAILS_BOX')\nLIMIT 1\t\n`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 1860,
        "wires": [
            [
                "79375e69.64a0b"
            ]
        ]
    },
    {
        "id": "79375e69.64a0b",
        "type": "sqlite",
        "z": "c58c4e92.63ec8",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 450,
        "y": 1860,
        "wires": [
            [
                "a4c53e94.e1c12"
            ]
        ]
    },
    {
        "id": "a4c53e94.e1c12",
        "type": "function",
        "z": "c58c4e92.63ec8",
        "name": "InfoCapacidadCaja",
        "func": "if (msg.payload[0])\n{\n    var regex = /^[0-9]+/;\n    var text = msg.payload[0].ClavosCaja;\n    var newstr = regex.exec(text)[0];\n    \n    msg.payload=newstr;\n\n}\nelse\n{\n   msg.payload = null;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 1860,
        "wires": [
            [
                "9992afd9.4e17f"
            ]
        ]
    },
    {
        "id": "6964c651.ab4ce8",
        "type": "inject",
        "z": "c58c4e92.63ec8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "3600",
        "crontab": "",
        "once": true,
        "onceDelay": "0.1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 110,
        "y": 1860,
        "wires": [
            [
                "97b15492.bfa8b8"
            ]
        ]
    },
    {
        "id": "9992afd9.4e17f",
        "type": "function",
        "z": "c58c4e92.63ec8",
        "name": "FnSetClavosCaja",
        "func": "if (msg.payload>0){\n    global.set(\"NailsBox\", msg.payload)\n}\nelse{\n    global.set(\"NailsBox\", undefined)\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 1860,
        "wires": [
            [
                "b4888762.8a26e8"
            ]
        ]
    },
    {
        "id": "b4888762.8a26e8",
        "type": "switch",
        "z": "c58c4e92.63ec8",
        "name": "",
        "property": "NailsBox",
        "propertyType": "global",
        "rules": [
            {
                "t": "null"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 970,
        "y": 1860,
        "wires": [
            [
                "1fc2c968.99aaa7"
            ]
        ]
    },
    {
        "id": "1fc2c968.99aaa7",
        "type": "delay",
        "z": "c58c4e92.63ec8",
        "name": "",
        "pauseType": "delay",
        "timeout": "30",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 1100,
        "y": 1860,
        "wires": [
            [
                "97b15492.bfa8b8"
            ]
        ]
    },
    {
        "id": "80fbca57.e2a818",
        "type": "comment",
        "z": "c58c4e92.63ec8",
        "name": "Crea variable global NailsBox",
        "info": "NailsBox se usa para determinar el numero de clavos por minuto a partir del conteo de cajas producidas",
        "x": 160,
        "y": 1820,
        "wires": []
    },
    {
        "id": "1b80703296ecd93d",
        "type": "function",
        "z": "c58c4e92.63ec8",
        "name": "FnNombreMaquinas",
        "func": "let nombreMaquinas = [\"HEADER\",\"THREADER\",\"COLLATOR\",\"VISION_STRIP_COUNT\",\"VISION_REJECTED\",\"ROBOT_BOXCOUNTER\",\"SPARE1\",\"SPARE2\"];\n//let puertos = [7,29,31,26,24,21];\nlet puertos = [7,11,13,15,29,31,33,35];\n//let portClass = [\"port7\",\"port29\",\"port31\",\"port26\",\"port24\",\"port21\"];\nlet portClass = [\"port7\",\"port11\",\"port13\",\"port15\",\"port29\",\"port31\",\"port33\",\"port35\"];\n/*for (let i = 0; i < msg.payload.length; i++) {\n \n    nombreMaquinas[i] = msg.payload[i].NomTipoMaquina;\n  \n}*/\n//nombreMaquinas = nombreMaquinas.filter(e => e !== 'ROBOT'); // will return ['A', 'C']\nmsg.payload = nombreMaquinas;\nglobal.set(\"NombreMaquinas\", nombreMaquinas);\nglobal.set(\"Puertos\", puertos);\nglobal.set(\"PortClass\",portClass);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 1680,
        "wires": [
            []
        ]
    },
    {
        "id": "4e2e98778c514d09",
        "type": "link out",
        "z": "c58c4e92.63ec8",
        "name": "OUT_InicializaObjVarPlc",
        "links": [
            "a7e7550367056516"
        ],
        "x": 1030,
        "y": 1560,
        "wires": [],
        "l": true
    },
    {
        "id": "88ef5e98a4cca732",
        "type": "split",
        "z": "c58c4e92.63ec8",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 590,
        "y": 1560,
        "wires": [
            [
                "d6257847653a2e0e"
            ]
        ]
    },
    {
        "id": "d6257847653a2e0e",
        "type": "change",
        "z": "c58c4e92.63ec8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "IdComponente",
                "pt": "msg",
                "to": "payload.IdComponente",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "Gpio",
                "pt": "msg",
                "to": "payload.GPIO",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 740,
        "y": 1560,
        "wires": [
            [
                "4e2e98778c514d09"
            ]
        ]
    },
    {
        "id": "35ebed52e92bbfe2",
        "type": "inject",
        "z": "c58c4e92.63ec8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 120,
        "y": 2380,
        "wires": [
            [
                "2b6b900c2c90f9bb"
            ]
        ]
    },
    {
        "id": "2b6b900c2c90f9bb",
        "type": "function",
        "z": "c58c4e92.63ec8",
        "name": "DROP",
        "func": "msg[\"topic\"] = \n'DROP TABLE ASWLite_CatTipoParo';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 2380,
        "wires": [
            [
                "c788d6443f313bbe"
            ]
        ]
    },
    {
        "id": "c788d6443f313bbe",
        "type": "sqlite",
        "z": "c58c4e92.63ec8",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 450,
        "y": 2380,
        "wires": [
            [
                "bc0948241973658d"
            ]
        ]
    },
    {
        "id": "bc0948241973658d",
        "type": "debug",
        "z": "c58c4e92.63ec8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 650,
        "y": 2380,
        "wires": []
    },
    {
        "id": "a22aad1370f1fbbd",
        "type": "inject",
        "z": "c58c4e92.63ec8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 120,
        "y": 2340,
        "wires": [
            [
                "5d5ae0c91d2179f3"
            ]
        ]
    },
    {
        "id": "5d5ae0c91d2179f3",
        "type": "function",
        "z": "c58c4e92.63ec8",
        "name": "CREATE",
        "func": "msg[\"topic\"] = \n'CREATE TABLE ASWLite_CatTipoParo ('+\n    'ClaUbicacion    INT           NOT NULL,'+\n    'ClaTipoParo     INT           NOT NULL,'+\n    'NomTipoParo     VARCHAR (255) NOT NULL,'+\n    'BajaLogica      TINYINT       NOT NULL,'+\n    'FechaBajaLogica DATETIME,'+\n    'FechaUltimaMod  DATETIME      NOT NULL,'+\n    'NombrePcMod     VARCHAR (64)  NOT NULL,'+\n    'ClaUsuarioMod   INT           NULL,'+\n\t'PRIMARY KEY (ClaTipoParo,ClaUbicacion))';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 2340,
        "wires": [
            [
                "fd0a3e978ad3457e"
            ]
        ]
    },
    {
        "id": "fd0a3e978ad3457e",
        "type": "sqlite",
        "z": "c58c4e92.63ec8",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 450,
        "y": 2340,
        "wires": [
            [
                "f59bc95f782d0ec1"
            ]
        ]
    },
    {
        "id": "f59bc95f782d0ec1",
        "type": "debug",
        "z": "c58c4e92.63ec8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 650,
        "y": 2340,
        "wires": []
    },
    {
        "id": "19a15c2569cb62d9",
        "type": "subflow:1b4307314ea43f2e",
        "z": "c58c4e92.63ec8",
        "name": "",
        "x": 1000,
        "y": 1160,
        "wires": [
            [
                "5cac06d3.905b28"
            ]
        ]
    },
    {
        "id": "10fc61743356b33e",
        "type": "debug",
        "z": "c58c4e92.63ec8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 750,
        "y": 2500,
        "wires": []
    },
    {
        "id": "6f7cbb832c16b111",
        "type": "debug",
        "z": "c58c4e92.63ec8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 750,
        "y": 2540,
        "wires": []
    },
    {
        "id": "f054131129d10572",
        "type": "debug",
        "z": "c58c4e92.63ec8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 750,
        "y": 2580,
        "wires": []
    },
    {
        "id": "ebff7eb4e3c655c5",
        "type": "debug",
        "z": "c58c4e92.63ec8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 750,
        "y": 2620,
        "wires": []
    },
    {
        "id": "91a8c304a4300eef",
        "type": "debug",
        "z": "c58c4e92.63ec8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 750,
        "y": 2660,
        "wires": []
    },
    {
        "id": "a81e08ada02d66e0",
        "type": "debug",
        "z": "c58c4e92.63ec8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 730,
        "y": 3360,
        "wires": []
    },
    {
        "id": "2831ca8ea7318614",
        "type": "debug",
        "z": "c58c4e92.63ec8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1610,
        "y": 2660,
        "wires": []
    },
    {
        "id": "19111731526484eb",
        "type": "debug",
        "z": "c58c4e92.63ec8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1610,
        "y": 2620,
        "wires": []
    },
    {
        "id": "80b3d8251223fcd3",
        "type": "debug",
        "z": "c58c4e92.63ec8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1610,
        "y": 2580,
        "wires": []
    },
    {
        "id": "ddb4ffc6b1c628a2",
        "type": "function",
        "z": "c58c4e92.63ec8",
        "name": "CU401_Pag1_CatClaScrapReason_Sel",
        "func": "msg.payload = {\"sp_name\":\"AswSch.ASW_CU401_Pag1_CatClaReasonScrap_Sel\",\"params\":{}}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 520,
        "wires": [
            [
                "5cac06d3.905b28"
            ]
        ]
    },
    {
        "id": "d53d4d78bfb65491",
        "type": "catch",
        "z": "c58c4e92.63ec8",
        "d": true,
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 100,
        "y": 4280,
        "wires": [
            [
                "2337245429169db1"
            ]
        ]
    },
    {
        "id": "2337245429169db1",
        "type": "function",
        "z": "c58c4e92.63ec8",
        "name": "Error Handler",
        "func": "node.warn(`ERROR NO CONTROLADO >  ${env.get(\"NAME\")} > ${JSON.stringify(msg)}`)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 4280,
        "wires": [
            []
        ]
    },
    {
        "id": "1815e129888d87de",
        "type": "switch",
        "z": "c58c4e92.63ec8",
        "name": "payload is not empty",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 380,
        "y": 1480,
        "wires": [
            [
                "eb74d2f9.44338"
            ]
        ]
    },
    {
        "id": "8bdf1dd6f8805e7e",
        "type": "subflow:6b0d45cf53597d13",
        "z": "c58c4e92.63ec8",
        "name": "ValidacionCargaArticulo",
        "x": 720,
        "y": 1200,
        "wires": [
            [
                "f35c6fc610d108b5",
                "617b801ae9727cf5",
                "e697d4b14165705e"
            ]
        ]
    },
    {
        "id": "f35c6fc610d108b5",
        "type": "function",
        "z": "c58c4e92.63ec8",
        "name": "CU101_Pag2_CatArticuloGeneral_Sel",
        "func": "let idcelda = global.get('celda');\n\nmsg.payload = {\"sp_name\":\"AswSch.ASW_CU101_Pag2_CatArticuloGeneral_Sel\",\"params\":{'PsIdCelda':idcelda}}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 1200,
        "wires": [
            [
                "5cac06d3.905b28"
            ]
        ]
    },
    {
        "id": "617b801ae9727cf5",
        "type": "function",
        "z": "c58c4e92.63ec8",
        "name": "CU101_Pag2_CatArticuloCaracteristicas_Sel",
        "func": "let idcelda = global.get('celda');\n\nmsg.payload = {\"sp_name\":\"AswSch.ASW_CU101_Pag2_CatArticuloCaracteristicas_Sel\",\"params\":{'PsIdCelda':idcelda}}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 1240,
        "wires": [
            [
                "5cac06d3.905b28"
            ]
        ]
    },
    {
        "id": "e697d4b14165705e",
        "type": "function",
        "z": "c58c4e92.63ec8",
        "name": "CU101_Pag2_CatArticuloComposicion_Sel",
        "func": "let idcelda = global.get('celda');\n\nmsg.payload = {\"sp_name\":\"AswSch.ASW_CU101_Pag2_CatArticuloComposicion_Sel\",\"params\":{'PsIdCelda':idcelda}}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 1280,
        "wires": [
            [
                "5cac06d3.905b28"
            ]
        ]
    },
    {
        "id": "e5fb0f28.c5292",
        "type": "inject",
        "z": "2a221ba6.391554",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 80,
        "y": 140,
        "wires": [
            [
                "5d48e505.3ee8fc"
            ]
        ]
    },
    {
        "id": "5d48e505.3ee8fc",
        "type": "websocket out",
        "z": "2a221ba6.391554",
        "name": "WS_CU151_Pag1_RefreshPO",
        "server": "41f56a3b.0f2a14",
        "client": "",
        "x": 590,
        "y": 100,
        "wires": []
    },
    {
        "id": "b66ae451.79f498",
        "type": "websocket out",
        "z": "2a221ba6.391554",
        "name": "WS_CU154_Pag1_AvisoFinPO",
        "server": "c550d915.c86fa8",
        "client": "",
        "x": 777,
        "y": 280,
        "wires": []
    },
    {
        "id": "6f12d742.310c18",
        "type": "http request",
        "z": "2a221ba6.391554",
        "name": "CU154_Pag1_RevisaFinOrden_Sel",
        "method": "GET",
        "ret": "txt",
        "paytoqs": false,
        "url": "http://localhost:18800/sqlite/CU154_Pag1_RevisaFinOrden_Sel",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 407,
        "y": 280,
        "wires": [
            [
                "b66ae451.79f498"
            ]
        ]
    },
    {
        "id": "92b457dd.7443e8",
        "type": "inject",
        "z": "2a221ba6.391554",
        "name": "RevisandoFinDeOrden",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "RevisandoFinDeOrden",
        "payloadType": "str",
        "x": 127,
        "y": 280,
        "wires": [
            [
                "6f12d742.310c18"
            ]
        ]
    },
    {
        "id": "e4d04281.57b1c",
        "type": "link in",
        "z": "2a221ba6.391554",
        "name": "",
        "links": [
            "3f8dc717.86ef78",
            "19c7650b.babd8b"
        ],
        "x": 135,
        "y": 100,
        "wires": [
            [
                "5d48e505.3ee8fc"
            ]
        ]
    },
    {
        "id": "87bb2f49.89ab2",
        "type": "comment",
        "z": "2a221ba6.391554",
        "name": "Se ejecuta cuando una caja se termina",
        "info": "",
        "x": 170,
        "y": 40,
        "wires": []
    },
    {
        "id": "ce7b5c79.4ba4f",
        "type": "websocket out",
        "z": "2a221ba6.391554",
        "name": "CU152_Pag2_ErrorSyncMP_Proc",
        "server": "e0616b50.907e48",
        "client": "",
        "x": 400,
        "y": 380,
        "wires": []
    },
    {
        "id": "c6e22fb5.eda99",
        "type": "link in",
        "z": "2a221ba6.391554",
        "name": "OnMateriaPrimaSyncError",
        "links": [
            "2f84cee8.dfc8c2",
            "14b56d7d.d677b3"
        ],
        "x": 135,
        "y": 380,
        "wires": [
            [
                "ce7b5c79.4ba4f"
            ]
        ]
    },
    {
        "id": "4b7b53ab.9988bc",
        "type": "websocket out",
        "z": "2a221ba6.391554",
        "name": "WS_CU155_Pag2_CambioTurno",
        "server": "84b7e28b.f067f",
        "client": "",
        "x": 460,
        "y": 420,
        "wires": []
    },
    {
        "id": "dc450caa.2b077",
        "type": "link in",
        "z": "2a221ba6.391554",
        "name": "",
        "links": [
            "75642367.ebba2c",
            "7c90d645.09e578"
        ],
        "x": 175,
        "y": 420,
        "wires": [
            [
                "4b7b53ab.9988bc"
            ]
        ]
    },
    {
        "id": "117c2cb4.f2d9b3",
        "type": "comment",
        "z": "2a221ba6.391554",
        "name": "Envia Señal para desplegar aviso de fin de orden",
        "info": "",
        "x": 180,
        "y": 220,
        "wires": []
    },
    {
        "id": "28b35a7d.342396",
        "type": "comment",
        "z": "2a221ba6.391554",
        "name": "Envia el turno actual cada que hay un cambio",
        "info": "",
        "x": 170,
        "y": 380,
        "wires": []
    },
    {
        "id": "ba7322b8.7c53d",
        "type": "inject",
        "z": "2a221ba6.391554",
        "d": true,
        "name": "RevisaBajaVelocidad",
        "repeat": "5",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 663,
        "wires": [
            [
                "888d9fcd.1707e"
            ]
        ]
    },
    {
        "id": "ccd4973b.fc23a8",
        "type": "http request",
        "z": "2a221ba6.391554",
        "name": "CU2_Pag3_ConsultaVariable",
        "method": "GET",
        "ret": "txt",
        "paytoqs": true,
        "url": "http://localhost:18800/plc/CU2_Pag3_ConsultaVariable",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 665,
        "y": 663,
        "wires": [
            [
                "1cc6c11.5341b3f"
            ]
        ]
    },
    {
        "id": "ab8d7cea.3954",
        "type": "join",
        "z": "2a221ba6.391554",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "15",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "num",
        "reduceFixup": "",
        "x": 1055,
        "y": 663,
        "wires": [
            [
                "dc7c1954.5b5708"
            ]
        ]
    },
    {
        "id": "e50f92f1.5efc3",
        "type": "http request",
        "z": "2a221ba6.391554",
        "name": "CU159_Pag1_LimiteVelocidad_Sel",
        "method": "GET",
        "ret": "txt",
        "paytoqs": false,
        "url": "http://localhost:18800/sqlite/CU159_Pag1_LimiteVelocidad_Sel",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 685,
        "y": 703,
        "wires": [
            [
                "2afcf05f.fca93"
            ]
        ]
    },
    {
        "id": "1cc6c11.5341b3f",
        "type": "function",
        "z": "2a221ba6.391554",
        "name": "",
        "func": "msg.payload = JSON.parse(msg.payload);\n\nmsg.topic = 'valor'\nmsg.payload = msg.payload.valor\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 895,
        "y": 663,
        "wires": [
            [
                "ab8d7cea.3954"
            ]
        ]
    },
    {
        "id": "2afcf05f.fca93",
        "type": "function",
        "z": "2a221ba6.391554",
        "name": "",
        "func": "msg.payload = JSON.parse(msg.payload);\n\nmsg.topic = 'limite'\nmsg.payload = msg.payload[0].Valor1\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 895,
        "y": 703,
        "wires": [
            [
                "ab8d7cea.3954"
            ]
        ]
    },
    {
        "id": "64d2173e.f10bd8",
        "type": "catch",
        "z": "2a221ba6.391554",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 920,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "dc7c1954.5b5708",
        "type": "switch",
        "z": "2a221ba6.391554",
        "name": "",
        "property": "payload.valor",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lte",
                "v": "payload.limite",
                "vt": "msg"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1195,
        "y": 663,
        "wires": [
            [
                "9e47d13c.dd4c7",
                "7db16c63.8e3dd4"
            ]
        ]
    },
    {
        "id": "9e47d13c.dd4c7",
        "type": "websocket out",
        "z": "2a221ba6.391554",
        "name": "CU159_Pag1_AvisoBajaVelocidad",
        "server": "1d5ffd59.5c2643",
        "client": "",
        "x": 1445,
        "y": 663,
        "wires": []
    },
    {
        "id": "888d9fcd.1707e",
        "type": "function",
        "z": "2a221ba6.391554",
        "name": "FnSetTimers",
        "func": "msg.timestamp=msg.payload-(1000 * 60 * 1);\nmsg.lastSent=flow.get('lastSent') || 0\nmsg.payload = {\"idComponente\":\"general\",\"variable\":\"SPEED\"}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 331,
        "y": 664,
        "wires": [
            [
                "97ff5a54.edbae8"
            ]
        ]
    },
    {
        "id": "7db16c63.8e3dd4",
        "type": "function",
        "z": "2a221ba6.391554",
        "name": "FnSetLastSent",
        "func": "flow.set('lastSent',Date.now());\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1380,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "97ff5a54.edbae8",
        "type": "switch",
        "z": "2a221ba6.391554",
        "name": "",
        "property": "timestamp",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "lastSent",
                "vt": "msg"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 471,
        "y": 664,
        "wires": [
            [
                "ccd4973b.fc23a8",
                "e50f92f1.5efc3"
            ]
        ]
    },
    {
        "id": "b5cd4287.cb95b",
        "type": "link in",
        "z": "2a221ba6.391554",
        "name": "CU524_Pag1",
        "links": [
            "a60b4024.5e758",
            "739f01f0.e1863",
            "a5cf4a6.9cf9ab8",
            "7fadfe5c.f14cf",
            "6b0de733.216de8"
        ],
        "x": 175,
        "y": 880,
        "wires": [
            [
                "a793d388.59cf8"
            ]
        ]
    },
    {
        "id": "a1d0c61f.27bed8",
        "type": "comment",
        "z": "2a221ba6.391554",
        "name": "Obtener colores ANDON app",
        "info": "",
        "x": 160,
        "y": 840,
        "wires": []
    },
    {
        "id": "a793d388.59cf8",
        "type": "http request",
        "z": "2a221ba6.391554",
        "name": "CU524_Pag1_ColoresAndon_Sel",
        "method": "GET",
        "ret": "txt",
        "paytoqs": false,
        "url": "http://localhost:18800/sqlite/CU524_Pag1_ColoresAndon_Sel",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 378,
        "y": 880,
        "wires": [
            [
                "5c20a8c6.6d11b8"
            ]
        ]
    },
    {
        "id": "5c20a8c6.6d11b8",
        "type": "websocket out",
        "z": "2a221ba6.391554",
        "name": "WS_CU524_Pag1_ColoresAndon",
        "server": "471b1d6d.e22694",
        "client": "",
        "x": 720,
        "y": 880,
        "wires": []
    },
    {
        "id": "34d32660.03392a",
        "type": "comment",
        "z": "2a221ba6.391554",
        "name": "Obtener colores performance app",
        "info": "",
        "x": 170,
        "y": 980,
        "wires": []
    },
    {
        "id": "618f2825.05d628",
        "type": "http request",
        "z": "2a221ba6.391554",
        "name": "CU506_Pag1_ColoresPerformance_Sel",
        "method": "GET",
        "ret": "txt",
        "paytoqs": false,
        "url": "http://localhost:18800/sqlite/CU506_Pag1_ColoresPerformance_Sel",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 380,
        "y": 1020,
        "wires": [
            [
                "6f8c7c4e.effcf4"
            ]
        ]
    },
    {
        "id": "3c3aaa18.200526",
        "type": "websocket out",
        "z": "2a221ba6.391554",
        "name": "WS_CU506_Pag1_ColoresPerformance",
        "server": "c24395de.c40a18",
        "client": "",
        "x": 1140,
        "y": 1020,
        "wires": []
    },
    {
        "id": "16b272fa.10256d",
        "type": "inject",
        "z": "2a221ba6.391554",
        "name": "",
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 1020,
        "wires": [
            [
                "618f2825.05d628"
            ]
        ]
    },
    {
        "id": "2a595c02.78c9f4",
        "type": "inject",
        "z": "2a221ba6.391554",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 920,
        "wires": [
            [
                "a793d388.59cf8"
            ]
        ]
    },
    {
        "id": "62fac0bc.c0e5b",
        "type": "rbe",
        "z": "2a221ba6.391554",
        "name": "PerformanceLight",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "property": "payload.PerformanceLight",
        "x": 850,
        "y": 1020,
        "wires": [
            [
                "3c3aaa18.200526"
            ]
        ]
    },
    {
        "id": "6f8c7c4e.effcf4",
        "type": "function",
        "z": "2a221ba6.391554",
        "name": "FnStrToObj",
        "func": "msg.payload = JSON.parse(msg.payload);\nif (msg.payload && msg.payload.length>0){\n    msg.payload = msg.payload[0]\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 650,
        "y": 1020,
        "wires": [
            [
                "62fac0bc.c0e5b"
            ]
        ]
    },
    {
        "id": "985165587d1a9106",
        "type": "function",
        "z": "2a221ba6.391554",
        "name": "FnObtenerCajasPorTurno",
        "func": "/*msg.topic=`SELECT COUNT(1) AS CajasTerminadas \n        FROM ASWLite_TraFinCajaMCSW \n        WHERE ClaTurno = ${global.get('ClaTurno')} \n            AND DATE(FechaFinReal)=DATE('${global.get('FechaAdm')}');`;*/\n            \nmsg.topic=`SELECT COUNT(1) AS CajasTerminadas \n    FROM ASWLite_TraFinCajaMCSW Fin\n    JOIN ASWLite_TraOrdenProduccionDet Podet\n        ON  Fin.IdPo = Podet.IdPo\n        AND Fin.IdUnidadCaja = Podet.IdUnidad\n    WHERE Fin.ClaTurno = ${global.get('ClaTurno')}\n    and DATE(Podet.FechaFinAdm)=DATE('${global.get('FechaAdm')}');`\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 160,
        "wires": [
            [
                "811069f62251068a"
            ]
        ]
    },
    {
        "id": "811069f62251068a",
        "type": "sqlite",
        "z": "2a221ba6.391554",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 550,
        "y": 160,
        "wires": [
            [
                "e718e91ee6251d99"
            ]
        ]
    },
    {
        "id": "e718e91ee6251d99",
        "type": "websocket out",
        "z": "2a221ba6.391554",
        "name": "WS_CU165_Pag1_CajasTurno",
        "server": "112dfb4fc50ebef5",
        "client": "",
        "x": 770,
        "y": 160,
        "wires": []
    },
    {
        "id": "db304468260bcce4",
        "type": "link in",
        "z": "2a221ba6.391554",
        "name": "WebSocketCajasTurno",
        "links": [
            "05fb448cba469628",
            "74d7125fbe45e1fc",
            "7c90d645.09e578"
        ],
        "x": 155,
        "y": 180,
        "wires": [
            [
                "985165587d1a9106"
            ]
        ]
    },
    {
        "id": "301294cfbd6fb1f8",
        "type": "catch",
        "z": "2a221ba6.391554",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 100,
        "y": 1260,
        "wires": [
            [
                "1038fcd83d7a182d"
            ]
        ]
    },
    {
        "id": "1038fcd83d7a182d",
        "type": "function",
        "z": "2a221ba6.391554",
        "name": "Error Handler",
        "func": "node.warn(`ERROR NO CONTROLADO >  ${env.get(\"NAME\")} > ${JSON.stringify(msg)}`)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 1260,
        "wires": [
            []
        ]
    },
    {
        "id": "3dea8cb0.c976f4",
        "type": "http in",
        "z": "5aa1551.3cbbcac",
        "name": "ValidaPasswdSqlite",
        "url": "/sqlite/ValidaPasswdSqlite",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 80,
        "wires": [
            [
                "9404cbab.658fc8"
            ]
        ]
    },
    {
        "id": "678aacca.c3aae4",
        "type": "bcrypt",
        "z": "5aa1551.3cbbcac",
        "name": "",
        "action": "verify",
        "field": "passwdEntrada",
        "hash": "bdPass",
        "rounds": 10,
        "x": 610,
        "y": 120,
        "wires": [
            [
                "700fe93f.c54468"
            ]
        ]
    },
    {
        "id": "9404cbab.658fc8",
        "type": "function",
        "z": "5aa1551.3cbbcac",
        "name": "FnUsuarioPasswdSel",
        "func": "let idUsuario= msg.payload.idUsuario;\nlet passwdEntrada = msg.payload.passwd;\n\nmsg.topic = `SELECT usr.passwd\n  FROM ASWLite_TraUsuarios usr\n  WHERE usr.idUsuario =${idUsuario}`;\n\nmsg.idUsuario = idUsuario;\nmsg.passwdEntrada = passwdEntrada;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 200,
        "y": 120,
        "wires": [
            [
                "630086bc.6edf08"
            ]
        ],
        "info": "REVISAR SI HAY O NO ORDENES DE PRODUCCION EN LA RASPBERRY.\n\n - SI NO HAY SE DEBEN TRAER TODAS LAS ORDENES QUE SE REQUIEREN PRODUCIR Y SE GUARDAN SIN PROCESAR\n   \n - SI EXISTEN SE DEBEN PROCESAR PARA DETERMINAR SI EXISTEN CAMBIOS O NO"
    },
    {
        "id": "630086bc.6edf08",
        "type": "sqlite",
        "z": "5aa1551.3cbbcac",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 370,
        "y": 120,
        "wires": [
            [
                "3fc0400a.b861f"
            ]
        ]
    },
    {
        "id": "3fc0400a.b861f",
        "type": "function",
        "z": "5aa1551.3cbbcac",
        "name": "",
        "func": "let bdPass = msg.payload[0].passwd || '' ;\nmsg.payload = null;\nmsg.bdPass = bdPass;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 490,
        "y": 120,
        "wires": [
            [
                "678aacca.c3aae4"
            ]
        ]
    },
    {
        "id": "cb8a4ba0.402388",
        "type": "http response",
        "z": "5aa1551.3cbbcac",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 930,
        "y": 120,
        "wires": []
    },
    {
        "id": "700fe93f.c54468",
        "type": "function",
        "z": "5aa1551.3cbbcac",
        "name": "",
        "func": "msg.payload = { \"valido\": msg.match}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 730,
        "y": 120,
        "wires": [
            [
                "cb8a4ba0.402388"
            ]
        ]
    },
    {
        "id": "ac9ec5ee.4c6378",
        "type": "catch",
        "z": "5aa1551.3cbbcac",
        "name": "ErrSQLite",
        "scope": [
            "630086bc.6edf08"
        ],
        "uncaught": false,
        "x": 560,
        "y": 200,
        "wires": [
            [
                "69310b49.45c354"
            ]
        ]
    },
    {
        "id": "69310b49.45c354",
        "type": "function",
        "z": "5aa1551.3cbbcac",
        "name": "",
        "func": "msg.statusCode = 500\nmsg.payload = {Err:\"Error al ejecutar:\" +msg.error.message}\nconsole.log(msg)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 690,
        "y": 200,
        "wires": [
            [
                "cb8a4ba0.402388"
            ]
        ]
    },
    {
        "id": "13a0468eef418356",
        "type": "catch",
        "z": "5aa1551.3cbbcac",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 80,
        "y": 380,
        "wires": [
            [
                "1d23119bfd148443"
            ]
        ]
    },
    {
        "id": "1d23119bfd148443",
        "type": "function",
        "z": "5aa1551.3cbbcac",
        "name": "Error Handler",
        "func": "node.warn(`ERROR NO CONTROLADO >  ${env.get(\"NAME\")} > ${JSON.stringify(msg)}`)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "8cc992b1.8c257",
        "type": "function",
        "z": "1293646e.b28ebc",
        "name": "GabarArchivo",
        "func": "if(Object.keys(msg.payload).length > 0){\n    buffer =  new Buffer(msg.payload.buffer)\n    let idusuario = msg.payload.idusuario\n    msg.filename = msg.payload.path \n    \n    msg.payload = buffer\n}else{\n    msg.statusCode =404\n    throw 'User Image Not Found' \n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 380,
        "y": 100,
        "wires": [
            [
                "dc56ea.d925e918"
            ]
        ]
    },
    {
        "id": "dc56ea.d925e918",
        "type": "file",
        "z": "1293646e.b28ebc",
        "name": "guardaArchivo",
        "filename": "",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 620,
        "y": 100,
        "wires": [
            [
                "81a86acf.0b3408"
            ]
        ]
    },
    {
        "id": "7171722c.b612ac",
        "type": "http in",
        "z": "1293646e.b28ebc",
        "name": "guardaArchivoLocal",
        "url": "/guardaArchivoLocal/",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 100,
        "wires": [
            [
                "8cc992b1.8c257"
            ]
        ]
    },
    {
        "id": "7d54b409.a8b60c",
        "type": "http response",
        "z": "1293646e.b28ebc",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 930,
        "y": 100,
        "wires": []
    },
    {
        "id": "3f70ba57.6302e6",
        "type": "catch",
        "z": "1293646e.b28ebc",
        "name": "ErrGuardarArchivo",
        "scope": [
            "dc56ea.d925e918"
        ],
        "uncaught": false,
        "x": 550,
        "y": 300,
        "wires": [
            [
                "126aee9c.1b64b1"
            ]
        ]
    },
    {
        "id": "126aee9c.1b64b1",
        "type": "function",
        "z": "1293646e.b28ebc",
        "name": "fnError",
        "func": "if(msg.statusCode === 404){\n    msg.payload = {Err:\"User Image not Found\"}\n}\nelse{\nmsg.statusCode = 500\nmsg.payload = {Err:\"Error al ejecutar: guardar \"+msg.filename+\" \" + msg.payload+\" \"+msg.error.message}\n}\n\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 300,
        "wires": [
            [
                "7d54b409.a8b60c"
            ]
        ]
    },
    {
        "id": "81a86acf.0b3408",
        "type": "function",
        "z": "1293646e.b28ebc",
        "name": "fnError",
        "func": "msg.statusCode = 200\n\nmsg.payload = {success:`Archivo ${msg.filename} Generado`}\nconsole.log(msg)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 790,
        "y": 60,
        "wires": [
            [
                "7d54b409.a8b60c"
            ]
        ]
    },
    {
        "id": "8f877d0ece3a9ddc",
        "type": "catch",
        "z": "1293646e.b28ebc",
        "name": "",
        "scope": [
            "8cc992b1.8c257",
            "dc56ea.d925e918",
            "7171722c.b612ac",
            "7d54b409.a8b60c",
            "81a86acf.0b3408"
        ],
        "uncaught": false,
        "x": 70,
        "y": 460,
        "wires": [
            [
                "d49339efac6481f1"
            ]
        ]
    },
    {
        "id": "d49339efac6481f1",
        "type": "function",
        "z": "1293646e.b28ebc",
        "name": "Error Handler",
        "func": "node.warn(`ERROR NO CONTROLADO >  ${env.get(\"NAME\")} > ${JSON.stringify(msg)}`)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "2e618c04.54efa4",
        "type": "sqlite",
        "z": "99758b54.d258a8",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 1053,
        "y": 200,
        "wires": [
            [
                "6dd130bc.12cc2"
            ]
        ]
    },
    {
        "id": "6596b069.ecb7e",
        "type": "function",
        "z": "99758b54.d258a8",
        "name": "FN_CU102_Pag2_CambiosOP_Sel",
        "func": "msg[\"topic\"] = `SELECT ClaUbicacion\n\t,IdPO\n\t,Orden\n\t,ClaEstatus\n\t,UnidadesProducidas\n\t,ClaUsuarioMod\n\t,NombrePcMod\n\t,FechaUltimaMod\nFROM ASWLite_TraOrdenProduccion op\nWHERE ClaEstatusReplica=1\nLIMIT 100;`;\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 823,
        "y": 180,
        "wires": [
            [
                "2e618c04.54efa4"
            ]
        ]
    },
    {
        "id": "4bb146c.d546eb8",
        "type": "inject",
        "z": "99758b54.d258a8",
        "name": "",
        "props": [
            {
                "p": "payload",
                "v": "",
                "vt": "date"
            },
            {
                "p": "topic",
                "v": "",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 90,
        "y": 200,
        "wires": [
            [
                "82f042bf.da6d1"
            ]
        ]
    },
    {
        "id": "97e2bd81.3aa5f",
        "type": "function",
        "z": "99758b54.d258a8",
        "name": "Format",
        "func": "msg.payload = {\n    ActualizaPo: {\n        Enc: msg.payload[0].map((item) => ({\n            \"PO\": item\n        })),\n        \n        Det: msg.payload[1].map((item) => ({\n            \"POD\": item\n        }))\n    }\n};\n\n  \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1314,
        "y": 200,
        "wires": [
            [
                "1d95249a.be397b"
            ]
        ]
    },
    {
        "id": "1d95249a.be397b",
        "type": "xml",
        "z": "99758b54.d258a8",
        "name": "",
        "property": "payload",
        "attr": "",
        "chr": "",
        "x": 1444,
        "y": 200,
        "wires": [
            [
                "b2662c0d.1e74d"
            ]
        ]
    },
    {
        "id": "c1e8221a.d76a1",
        "type": "function",
        "z": "99758b54.d258a8",
        "name": "FN_CU102_Pag2_CambiosOPDet_Sel",
        "func": "msg[\"topic\"] = `SELECT ClaUbicacion\n\t,IdComponente\n\t,IdPO\n\t,IdUnidad\n\t,EsTerminado\n\t,EsAdicional\n\t,FechaInicioReal\n\t,DATE(FechaInicioAdm) AS FechaInicioAdm\n\t,FechaFinReal\n\t,FechaFinAdm\n\t,IdTrazabilidad\n\t,ClaUsuarioMod\n\t,NombrePcMod\n\t,FechaUltimaMod\n\t,ClaTurno\nFROM ASWLite_TraOrdenProduccionDet op\nWHERE ClaEstatusReplica=1\nLIMIT 1500;`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 813,
        "y": 220,
        "wires": [
            [
                "2e618c04.54efa4"
            ]
        ]
    },
    {
        "id": "f6f16cbd.53a05",
        "type": "debug",
        "z": "99758b54.d258a8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 2524,
        "y": 200,
        "wires": []
    },
    {
        "id": "6dd130bc.12cc2",
        "type": "join",
        "z": "99758b54.d258a8",
        "name": "",
        "mode": "auto",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "15",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1183,
        "y": 200,
        "wires": [
            [
                "97e2bd81.3aa5f"
            ]
        ]
    },
    {
        "id": "b2662c0d.1e74d",
        "type": "function",
        "z": "99758b54.d258a8",
        "name": "Query",
        "func": "\nmsg.payload = {\"sp_name\":\"AswSch.ASW_CU102_Pag2_ActualizaPO_Proc\",\"params\":{\"xml\":msg.payload}}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1564,
        "y": 200,
        "wires": [
            [
                "de4019c6.4a5278"
            ]
        ]
    },
    {
        "id": "de4019c6.4a5278",
        "type": "subflow:6271978d.4d6ac8",
        "z": "99758b54.d258a8",
        "name": "",
        "env": [],
        "x": 1704,
        "y": 200,
        "wires": [
            [
                "ad7d1f83.08bbb"
            ]
        ]
    },
    {
        "id": "ad7d1f83.08bbb",
        "type": "MSSQL",
        "z": "99758b54.d258a8",
        "mssqlCN": "955d262e.b17988",
        "name": "ASWMSSQL",
        "outField": "payload",
        "returnType": "1",
        "throwErrors": "0",
        "query": "",
        "modeOpt": "",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "msg",
        "paramsOpt": "queryParams",
        "paramsOptType": "msg",
        "params": [],
        "x": 1864,
        "y": 200,
        "wires": [
            [
                "e14c77a4.8fc8f8"
            ]
        ]
    },
    {
        "id": "18c147ab.9a52a8",
        "type": "function",
        "z": "99758b54.d258a8",
        "name": "Topic",
        "func": "msg[\"topic\"] = msg.payload[0].QueryUpdPO || msg.payload[0].QueryUpdPODet ;\nmsg.payload = undefined;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 2264,
        "y": 200,
        "wires": [
            [
                "d3846dc8.9521b"
            ]
        ]
    },
    {
        "id": "d3846dc8.9521b",
        "type": "sqlite",
        "z": "99758b54.d258a8",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 2384,
        "y": 200,
        "wires": [
            [
                "f6f16cbd.53a05"
            ]
        ]
    },
    {
        "id": "eca4c735.f75858",
        "type": "split",
        "z": "99758b54.d258a8",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "topic",
        "x": 2144,
        "y": 200,
        "wires": [
            [
                "18c147ab.9a52a8"
            ]
        ]
    },
    {
        "id": "e14c77a4.8fc8f8",
        "type": "function",
        "z": "99758b54.d258a8",
        "name": "DataSets",
        "func": "msg.query = undefined;\nmsg[\"payload\"] = msg.payload.recordsets;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 2014,
        "y": 200,
        "wires": [
            [
                "eca4c735.f75858"
            ]
        ]
    },
    {
        "id": "5992f45d.ddad7c",
        "type": "catch",
        "z": "99758b54.d258a8",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 1260,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "3dcebab6.725f46",
        "type": "inject",
        "z": "99758b54.d258a8",
        "name": "",
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 110,
        "y": 340,
        "wires": [
            [
                "2c3274a8.ef6a0c"
            ]
        ]
    },
    {
        "id": "2c3274a8.ef6a0c",
        "type": "function",
        "z": "99758b54.d258a8",
        "name": "FN_CU152_Pag2_CambiosMP_Sel",
        "func": "msg[\"topic\"] = `SELECT [IdBarcode]\n\t,[IdPO]\n\t,[IdCelda]\n\t,[Barcode]\n\t,[Codigo]\n\t,[Referencia]\n\t,[NomAlambre]\n\t,[NomProvedor]\n\t,[Colada]\n\t,[PesoInicial]\n\t,[PesoFinal]\n\t,[Peso]\n\t,[EsEnUso]\n\t,[EsConsumido]\n\t,[EsRemovido]\n\t,[ClaEventoAdd]\n\t,[ClaEventoUse]\n\t,[ClaEventoConsume]\n\t,[ClaEventoRemove]\n\t,[ClaEstatusReplica]\n\t,[ClaEstatusMCSW]\n\t,[NomEstatusMCSW]\n\t,[BajaLogica]\n\t,[FechaBajaLogica]\n\t,[FechaUltimaMod]\n\t,[NombrePcMod]\n\t,[ClaUsuarioMod]\nFROM [ASWLite_TraMateriaPrima]\nWHERE ClaEstatusReplica = 1\n    --OR (1 IN ([ClaEventoAdd],[ClaEventoUse],[ClaEventoConsume],[ClaEventoRemove])\n    --    AND datetime([FechaUltimaMod],'+30 minutes')<datetime('now', 'localtime'))\nLIMIT 100\n;`;\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 340,
        "wires": [
            [
                "952e2b0a.10ad98"
            ]
        ]
    },
    {
        "id": "952e2b0a.10ad98",
        "type": "sqlite",
        "z": "99758b54.d258a8",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 586,
        "y": 340,
        "wires": [
            [
                "2d0e778.96f8088"
            ]
        ]
    },
    {
        "id": "2d0e778.96f8088",
        "type": "function",
        "z": "99758b54.d258a8",
        "name": "Format",
        "func": "msg.payload = {\n    ActualizaMP: msg.payload.map((item) => ({\n            \"Barcode\": item\n        }))\n    \n};\n\n  \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 728,
        "y": 340,
        "wires": [
            [
                "d719b281.f7505"
            ]
        ]
    },
    {
        "id": "d719b281.f7505",
        "type": "xml",
        "z": "99758b54.d258a8",
        "name": "",
        "property": "payload",
        "attr": "",
        "chr": "",
        "x": 858,
        "y": 340,
        "wires": [
            [
                "312d51ca.97b07e"
            ]
        ]
    },
    {
        "id": "312d51ca.97b07e",
        "type": "function",
        "z": "99758b54.d258a8",
        "name": "Query",
        "func": "\nmsg.payload = {\"sp_name\":\"AswSch.ASW_CU152_Pag2_ActualizaMP_Proc\",\"params\":{\"xml\":msg.payload}}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 978,
        "y": 340,
        "wires": [
            [
                "e272f608.aa59a8"
            ]
        ]
    },
    {
        "id": "e272f608.aa59a8",
        "type": "subflow:6271978d.4d6ac8",
        "z": "99758b54.d258a8",
        "name": "",
        "env": [],
        "x": 1118,
        "y": 340,
        "wires": [
            [
                "31fcda1.7ce8126"
            ]
        ]
    },
    {
        "id": "31fcda1.7ce8126",
        "type": "MSSQL",
        "z": "99758b54.d258a8",
        "mssqlCN": "955d262e.b17988",
        "name": "ASWMSSQL",
        "outField": "payload",
        "returnType": "0",
        "throwErrors": "0",
        "query": "",
        "modeOpt": "",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "msg",
        "paramsOpt": "queryParams",
        "paramsOptType": "msg",
        "params": [],
        "x": 1278,
        "y": 340,
        "wires": [
            [
                "77f7b749.cce4c8",
                "6768a10b.4f7f"
            ]
        ]
    },
    {
        "id": "2f84cee8.dfc8c2",
        "type": "link out",
        "z": "99758b54.d258a8",
        "name": "OnMateriaPrimaSyncError",
        "links": [
            "c6e22fb5.eda99"
        ],
        "x": 1886,
        "y": 340,
        "wires": []
    },
    {
        "id": "77f7b749.cce4c8",
        "type": "split",
        "z": "99758b54.d258a8",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1441,
        "y": 380,
        "wires": [
            [
                "a652a12.d98456"
            ]
        ]
    },
    {
        "id": "a652a12.d98456",
        "type": "function",
        "z": "99758b54.d258a8",
        "name": "ActualizaBdLocal",
        "func": "let qry = \"\"\nlet resultado = msg.payload;\n\nqry = 'UPDATE ASWLite_TraMateriaPrima SET'\n\n\n\nfor (const columna in resultado) {\n    if (resultado[columna] != null  && columna != 'IdBarcode' && columna != 'IdPO') {\n\n        qry += ` ${columna} = ${(typeof(resultado[columna]) === 'string') ? \"'\"+resultado[columna]+\"'\":resultado[columna]},`;\n    }\n}\n\nqry += ' ClaEstatusReplica = 2'\n\nqry += ` WHERE IdBarcode = ${resultado.IdBarcode} AND IdPO = ${resultado.IdPO};`;\n\nmsg.topic=qry\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1621,
        "y": 380,
        "wires": [
            [
                "235763e4.8c45dc"
            ]
        ]
    },
    {
        "id": "6768a10b.4f7f",
        "type": "function",
        "z": "99758b54.d258a8",
        "name": "EnviaErrorWS",
        "func": "let ITError\nlet UserError\nlet resultados = msg.payload\nlet data = {}\nlet hasData=0\n\ndata[\"UserError\"]='';\n\nresultados.forEach(resultado=>{\n    if (resultado.ClaEstatusMCSW !== 0) {\n        hasData=1;\n        \n        UserError = resultado.NomEstatusMCSW\n        \n        data[\"UserError\"] += UserError+'</br>'\n        data[\"ITError\"] = 'If tag is added/loaded, remove it'\n    }\n});\n\nif (hasData){\n    msg.payload = data;\n}\nelse{\n    msg.payload = null\n} \n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1611,
        "y": 340,
        "wires": [
            [
                "2b9328ca.cc8778"
            ]
        ]
    },
    {
        "id": "2b9328ca.cc8778",
        "type": "switch",
        "z": "99758b54.d258a8",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1781,
        "y": 340,
        "wires": [
            [
                "2f84cee8.dfc8c2"
            ]
        ]
    },
    {
        "id": "235763e4.8c45dc",
        "type": "sqlite",
        "z": "99758b54.d258a8",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 1781,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "910908a5.05a758",
        "type": "inject",
        "z": "99758b54.d258a8",
        "name": "",
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 110,
        "y": 480,
        "wires": [
            [
                "7dc58137.7de3e"
            ]
        ]
    },
    {
        "id": "7dc58137.7de3e",
        "type": "function",
        "z": "99758b54.d258a8",
        "name": "FN_CU204_Pag1_CambiosParos_Sel",
        "func": "msg[\"topic\"] = `SELECT [ClaUbicacion]\n\t,[IdComponente]\n\t,[IdParo]\n\t,[IdPOInicio]\n\t,[IdPOFin]\n\t,[idUnidad]\n\t,[idUsuario]\n\t,[fechaHoraInicial]\n\t,[fechaHoraFinal]\n\t,[microParoSN]\n\t,[DuracionSegundos]\n\t,[fechaAdmSCADA]\n\t,[ClaTurno]\n\t,[claGrupoParo]\n\t,[claParo]\n\t,[claSeccionParo]\n\t,[ClaEstatusReplica]\n\t,ClaEventoParo\n\t,ClaEventoJustificacion\n\t,ClaEventoReasignacion\n\t,ClaEventoAtencion\n\t,ClaEventoSolucionado\n\t,IdParoProgramado\n    ,FechaHoraJustificado\n    ,FechaHoraReasignado\n    ,FechaHoraAtencion\n    ,FechaHoraSolucion\n    ,IdAgrupador\n\t,[ClaUsuarioMod]\n\t,[NombrePcMod]\n\t,[FechaUltimaMod]\n\t,[BajaLogica]\n\t,[NombreEmpleado]\n\t,[Comentarios]\n\t,[ComentariosSolucion]\n\t,[ClaEventoCierre]\nFROM [AswLite_BitParos]\nWHERE ClaEstatusReplica = 1\nLIMIT 100\n;`;\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 355,
        "y": 480,
        "wires": [
            [
                "26c7b994.efc536"
            ]
        ]
    },
    {
        "id": "26c7b994.efc536",
        "type": "sqlite",
        "z": "99758b54.d258a8",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 586,
        "y": 480,
        "wires": [
            [
                "789c7a47.c44254"
            ]
        ]
    },
    {
        "id": "789c7a47.c44254",
        "type": "function",
        "z": "99758b54.d258a8",
        "name": "Format",
        "func": "msg.payload = {\n    ActualizaParos: msg.payload.map((item) => ({\n            \"Paro\": item\n        }))\n    \n};\n\n  \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 728,
        "y": 480,
        "wires": [
            [
                "1c3df285.affecd"
            ]
        ]
    },
    {
        "id": "1c3df285.affecd",
        "type": "xml",
        "z": "99758b54.d258a8",
        "name": "",
        "property": "payload",
        "attr": "",
        "chr": "",
        "x": 858,
        "y": 480,
        "wires": [
            [
                "60850c6.4dcc4f4"
            ]
        ]
    },
    {
        "id": "60850c6.4dcc4f4",
        "type": "function",
        "z": "99758b54.d258a8",
        "name": "Query",
        "func": "\nmsg.payload = {\"sp_name\":\"AswSch.ASW_CU204_Pag1_ActualizaParos_Proc\",\"params\":{\"xml\":msg.payload}}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 978,
        "y": 480,
        "wires": [
            [
                "f8ec87c5.b964a8"
            ]
        ]
    },
    {
        "id": "f8ec87c5.b964a8",
        "type": "subflow:6271978d.4d6ac8",
        "z": "99758b54.d258a8",
        "name": "",
        "env": [],
        "x": 1118,
        "y": 480,
        "wires": [
            [
                "522c295a.3ed5f8"
            ]
        ]
    },
    {
        "id": "522c295a.3ed5f8",
        "type": "MSSQL",
        "z": "99758b54.d258a8",
        "mssqlCN": "955d262e.b17988",
        "name": "ASWMSSQL",
        "outField": "payload",
        "returnType": "0",
        "throwErrors": "0",
        "query": "",
        "modeOpt": "",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "msg",
        "paramsOpt": "queryParams",
        "paramsOptType": "msg",
        "params": [],
        "x": 1278,
        "y": 480,
        "wires": [
            [
                "7b2d467b.ed14d8"
            ]
        ]
    },
    {
        "id": "7b2d467b.ed14d8",
        "type": "split",
        "z": "99758b54.d258a8",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1441,
        "y": 480,
        "wires": [
            [
                "a52e95503bbd96bc"
            ]
        ]
    },
    {
        "id": "7632f003.fd416",
        "type": "sqlite",
        "z": "99758b54.d258a8",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 1791,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "45537dd9.e7ac04",
        "type": "inject",
        "z": "99758b54.d258a8",
        "name": "",
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 90,
        "y": 580,
        "wires": [
            [
                "2b9fa14.5484a5e"
            ]
        ]
    },
    {
        "id": "2b9fa14.5484a5e",
        "type": "function",
        "z": "99758b54.d258a8",
        "name": "FN_CU401_Pag1_CambiosScrap_Sel",
        "func": "msg[\"topic\"] = `SELECT [IdScrap]\n,[IdPO]\n,[IdCelda]\n,[ClaTurno]\n,[FechaAdmScada]\n,[Peso]\n,[TipoScrapCelda]\n,[MotivoScrap]\n,[ClaScrapReason]\n,[ClaEstatusReplica]\n,[BajaLogica]\n,[FechaBajaLogica]\n,[FechaUltimaMod]\n,[NombrePcMod]\n,[ClaUsuarioMod]\nFROM [ASWLite_TraScrap]\nWHERE ClaEstatusReplica = 1\nLIMIT 100\n;`;\n\n\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 355,
        "y": 600,
        "wires": [
            [
                "40aef40f.47f16c"
            ]
        ]
    },
    {
        "id": "40aef40f.47f16c",
        "type": "sqlite",
        "z": "99758b54.d258a8",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 586,
        "y": 600,
        "wires": [
            [
                "fcddff7d.98c2f"
            ]
        ]
    },
    {
        "id": "fcddff7d.98c2f",
        "type": "function",
        "z": "99758b54.d258a8",
        "name": "Format",
        "func": "msg.payload = {\n    ActualizaScrap: msg.payload.map((item) => ({\n            \"Scrap\": item\n        }))\n    \n};\n\n  \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 728,
        "y": 600,
        "wires": [
            [
                "640e77b1.963708"
            ]
        ]
    },
    {
        "id": "640e77b1.963708",
        "type": "xml",
        "z": "99758b54.d258a8",
        "name": "",
        "property": "payload",
        "attr": "",
        "chr": "",
        "x": 858,
        "y": 600,
        "wires": [
            [
                "5399d797.408c78"
            ]
        ]
    },
    {
        "id": "5399d797.408c78",
        "type": "function",
        "z": "99758b54.d258a8",
        "name": "Query",
        "func": "\nmsg.payload = {\"sp_name\":\"AswSch.ASW_CU401_Pag1_ActualizaScrap_Proc\",\"params\":{\"xml\":msg.payload}}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 978,
        "y": 600,
        "wires": [
            [
                "6fd90eb1.2d918"
            ]
        ]
    },
    {
        "id": "6fd90eb1.2d918",
        "type": "subflow:6271978d.4d6ac8",
        "z": "99758b54.d258a8",
        "name": "",
        "env": [],
        "x": 1118,
        "y": 600,
        "wires": [
            [
                "db7e07ce.a20398"
            ]
        ]
    },
    {
        "id": "db7e07ce.a20398",
        "type": "MSSQL",
        "z": "99758b54.d258a8",
        "mssqlCN": "955d262e.b17988",
        "name": "ASWMSSQL",
        "outField": "payload",
        "query": "",
        "x": 1278,
        "y": 600,
        "wires": [
            [
                "fa43e09d.cf232"
            ]
        ]
    },
    {
        "id": "fa43e09d.cf232",
        "type": "split",
        "z": "99758b54.d258a8",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1441,
        "y": 600,
        "wires": [
            [
                "2d0443.21ba5bbe"
            ]
        ]
    },
    {
        "id": "2d0443.21ba5bbe",
        "type": "function",
        "z": "99758b54.d258a8",
        "name": "ActualizaBdLocal",
        "func": "let qry = \"\"\nlet resultado = msg.payload;\n\nqry = 'UPDATE ASWLite_TraScrap SET'\n\n\n\nfor (const columna in resultado) {\n    if (resultado[columna] !== null  && columna != 'IdScrap' && columna != 'IdPO' ) {\n\n        qry += ` ${columna} = ${(typeof(resultado[columna]) === 'string') ? \"'\"+resultado[columna]+\"'\":resultado[columna]},`;\n    }\n}\n\nqry += ' ClaEstatusReplica = 2'\n\nqry += ` WHERE IdScrap = ${resultado.IdScrap} AND IdPO = ${resultado.IdPO} ;`;\n\nmsg.topic=qry\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1621,
        "y": 600,
        "wires": [
            [
                "442d437d.4387dc"
            ]
        ]
    },
    {
        "id": "442d437d.4387dc",
        "type": "sqlite",
        "z": "99758b54.d258a8",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 1791,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "2a6d4e27.d67342",
        "type": "inject",
        "z": "99758b54.d258a8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 90,
        "y": 700,
        "wires": [
            [
                "79ad74f4.595c4c"
            ]
        ]
    },
    {
        "id": "79ad74f4.595c4c",
        "type": "function",
        "z": "99758b54.d258a8",
        "name": "FN_CU165_Pag1_CheckInOut_Sel",
        "func": "msg[\"topic\"] = `SELECT [Id]\n\t,[IdCelda]\n\t,[FechaAdmScada]\n\t,[ClaTurno]\n\t,[TiempoTurno]\n\t,[FechaHoraInicioProd]\n\t,[FechaHoraFinProd]\n\t,[OrdenesTurno]\n\t,[IdComponente1]\n\t,[TiempoParo1]\n\t,[IdComponente2]\n\t,[TiempoParo2]\n\t,[IdComponente3]\n\t,[TiempoParo3]\n\t,[IdComponente4]\n\t,[TiempoParo4]\n\t,[IdComponente5]\n\t,[TiempoParo5]\n\t,[IdComponente6]\n\t,[TiempoParo6]\n\t,[IdComponente7]\n\t,[TiempoParo7]\n\t,[IdComponente8]\n\t,[TiempoParo8]\n\t,[IdComponente9]\n\t,[TiempoParo9]\n\t,[IdComponente10]\n\t,[TiempoParo10]\n\t,[CajasProducidas]\n\t,[CajasSkid]\n\t,[ClaArticulo]\n\t,[PesoScrap]\n\t,[ClaTipoRegistro]\n\t,[ClaEstatusReplica]\n\t,[Evento]\n\t,[FechaUltimaMod]\n\t,[NombrePcMod]\n\t,[ClaUsuarioMod]\n\t,[EsManual]\n\t,[Comentario]\nFROM [ASWLite_TraReporteProduccion]\nWHERE ClaEstatusReplica = 1\nORDER BY ClaTipoRegistro, FechaUltimaMod DESC LIMIT 100\n;`\n\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 700,
        "wires": [
            [
                "8a4c03b3.8dd53"
            ]
        ]
    },
    {
        "id": "8a4c03b3.8dd53",
        "type": "sqlite",
        "z": "99758b54.d258a8",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 550,
        "y": 700,
        "wires": [
            [
                "044972774123eb03"
            ]
        ]
    },
    {
        "id": "e795fe29.024b7",
        "type": "function",
        "z": "99758b54.d258a8",
        "name": "Format",
        "func": "msg.payload = {\n    CheckInOut: msg.payload.map((item) => ({\n            \"CheckInOut\": item\n        }))\n    \n};\n\n\n\n  \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 760,
        "wires": [
            [
                "e7c30714.4dd5a8"
            ]
        ]
    },
    {
        "id": "e7c30714.4dd5a8",
        "type": "xml",
        "z": "99758b54.d258a8",
        "name": "",
        "property": "payload",
        "attr": "",
        "chr": "",
        "x": 850,
        "y": 700,
        "wires": [
            [
                "5c416eb8.d2edb"
            ]
        ]
    },
    {
        "id": "5c416eb8.d2edb",
        "type": "function",
        "z": "99758b54.d258a8",
        "name": "Query",
        "func": "\nmsg.payload = {\"sp_name\":\"AswSch.ASW_CU165_Pag1_CheckInOut_Proc\",\"params\":{\"xml\":msg.payload}}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 700,
        "wires": [
            [
                "6cfbfe3dfa0d804c"
            ]
        ]
    },
    {
        "id": "cf00565a.7317e8",
        "type": "subflow:6271978d.4d6ac8",
        "z": "99758b54.d258a8",
        "name": "",
        "env": [],
        "x": 1110,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "69b3b8ce.f430e8",
        "type": "split",
        "z": "99758b54.d258a8",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1441,
        "y": 700,
        "wires": [
            [
                "c88b16c1.833858"
            ]
        ]
    },
    {
        "id": "c88b16c1.833858",
        "type": "function",
        "z": "99758b54.d258a8",
        "name": "ActualizaBdLocal",
        "func": "let qry = \"\"\nlet resultado = msg.payload;\n\nqry = 'UPDATE ASWLite_TraReporteProduccion SET'\n\n\n\nfor (const columna in resultado) {\n    if (resultado[columna] !== null  && columna != 'Id' ) {\n\n        qry += ` ${columna} = ${(typeof(resultado[columna]) === 'string') ? \"'\"+resultado[columna]+\"'\":resultado[columna]},`;\n    }\n}\n\nqry += ' ClaEstatusReplica = 2'\n\nqry += ` WHERE Id = ${resultado.Id} ;`;\n\nmsg.topic=qry\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1621,
        "y": 700,
        "wires": [
            [
                "4091a7c4.122118"
            ]
        ]
    },
    {
        "id": "4091a7c4.122118",
        "type": "sqlite",
        "z": "99758b54.d258a8",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 1791,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "98d4b25.332b45",
        "type": "inject",
        "z": "99758b54.d258a8",
        "name": "",
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 110,
        "y": 780,
        "wires": [
            [
                "ccf45b7f.2fe5c8"
            ]
        ]
    },
    {
        "id": "ccf45b7f.2fe5c8",
        "type": "function",
        "z": "99758b54.d258a8",
        "name": "FN_CU202_Pag1_CambiosBitProduccion_Sel",
        "func": "msg[\"topic\"] = `SELECT IdBitProduccion,\n       ClaUbicacion,\n       IdCelda,\n       IdComponente,\n       IdPO,\n       IdCaja,\n       ClaArticulo,\n       ClaveCorte,\n       FechaHoraInicio,\n       FechaHoraFin,\n       DuracionSegundos,\n       ClavosInicio,\n       ClavosFin,\n       CajasInicio,\n       CajasFin,\n       CajasXHora,\n       ClaTurno,\n       FechaAdm,\n       Hora,\n       ClaEstatusReplica,\n       BajaLogica,\n       FechaBajaLogica,\n       ClaUsuarioMod,\n       NombrePCMod,\n       FechaUltimaMod\nFROM AswLite_BitProduccion\nWHERE ClaEstatusReplica = 1\nLIMIT 100\n;`;\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 387,
        "y": 800,
        "wires": [
            [
                "8a55727c.8b303"
            ]
        ]
    },
    {
        "id": "8a55727c.8b303",
        "type": "sqlite",
        "z": "99758b54.d258a8",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 652,
        "y": 800,
        "wires": [
            [
                "7020d4bd.83c37c"
            ]
        ]
    },
    {
        "id": "7020d4bd.83c37c",
        "type": "function",
        "z": "99758b54.d258a8",
        "name": "Format",
        "func": "msg.payload = {\n    BitProduccion: msg.payload.map((item) => ({\n            \"Produccion\": item\n        }))\n    \n};\n\n  \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 782,
        "y": 800,
        "wires": [
            [
                "a9c95663.360588"
            ]
        ]
    },
    {
        "id": "a9c95663.360588",
        "type": "xml",
        "z": "99758b54.d258a8",
        "name": "",
        "property": "payload",
        "attr": "",
        "chr": "",
        "x": 912,
        "y": 800,
        "wires": [
            [
                "199a4ee5.a50721"
            ]
        ]
    },
    {
        "id": "199a4ee5.a50721",
        "type": "function",
        "z": "99758b54.d258a8",
        "name": "Query",
        "func": "\nmsg.payload = {\"sp_name\":\"AswSch.ASW_CU202_Pag1_ActualizaBitProduccion_Proc\",\"params\":{\"xml\":msg.payload}}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1032,
        "y": 800,
        "wires": [
            [
                "21750e56.e3d122"
            ]
        ]
    },
    {
        "id": "21750e56.e3d122",
        "type": "subflow:6271978d.4d6ac8",
        "z": "99758b54.d258a8",
        "name": "",
        "env": [],
        "x": 1172,
        "y": 800,
        "wires": [
            [
                "8b7576d4.a87668"
            ]
        ]
    },
    {
        "id": "8b7576d4.a87668",
        "type": "MSSQL",
        "z": "99758b54.d258a8",
        "mssqlCN": "955d262e.b17988",
        "name": "ASWMSSQL",
        "outField": "payload",
        "returnType": "0",
        "throwErrors": "0",
        "query": "",
        "modeOpt": "",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "msg",
        "paramsOpt": "queryParams",
        "paramsOptType": "msg",
        "params": [],
        "x": 1332,
        "y": 800,
        "wires": [
            [
                "9d714ccf.4d374"
            ]
        ]
    },
    {
        "id": "9d714ccf.4d374",
        "type": "split",
        "z": "99758b54.d258a8",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1492,
        "y": 800,
        "wires": [
            [
                "368aebc9.3dfce4"
            ]
        ]
    },
    {
        "id": "368aebc9.3dfce4",
        "type": "function",
        "z": "99758b54.d258a8",
        "name": "ActualizaBdLocal",
        "func": "let qry = \"\"\nlet resultado = msg.payload;\n\nqry = 'UPDATE AswLite_BitProduccion SET'\n\n\n\n// for (const columna in resultado) {\n//     if (resultado[columna] !== null  && columna != 'IdBitProduccion' ) {\n\n//         qry += ` ${columna} = ${(typeof(resultado[columna]) === 'string') ? \"'\"+resultado[columna]+\"'\":resultado[columna]},`;\n//     }\n// }\n\nqry += ' ClaEstatusReplica = 2'\n\nqry += ` WHERE IdBitPRoduccion = ${resultado.IdBitProduccion} ;`;\n\nmsg.topic=qry\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1652,
        "y": 800,
        "wires": [
            [
                "ea8f16f1.9a4828"
            ]
        ]
    },
    {
        "id": "ea8f16f1.9a4828",
        "type": "sqlite",
        "z": "99758b54.d258a8",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 1852,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "15b56583.03f1ca",
        "type": "inject",
        "z": "99758b54.d258a8",
        "name": "",
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 110,
        "y": 880,
        "wires": [
            [
                "e7bad960.a8e3b8"
            ]
        ]
    },
    {
        "id": "e7bad960.a8e3b8",
        "type": "function",
        "z": "99758b54.d258a8",
        "name": "FN_CU504_Pag1_BitacoraBajaEficiencia_Sel",
        "func": "msg[\"topic\"] = `SELECT [IdBajaEficiencia]\n\t,[ClaUbicacion]\n\t,[IdCelda]\n\t,[FechaAdmSCADA]\n\t,[ClaTurno]\n\t,[Hora]\n\t,[FechaHoraInicial]\n\t,[FechaHoraFinal]\n\t,[IdUsuario]\n\t,[VelocidaObjetivo]\n\t,[VelocidadReal]\n\t,[PorcentajeTolerancia]\n\t,[ClaBajaEfciencia]\n\t,[ClaEstatusReplica]\n\t,[BajaLogica]\n\t,[FechaBajaLogica]\n\t,[ClaUsuarioMod]\n\t,[NombrePCMod]\n\t,[FechaUltimaMod]\nFROM [ASWLite_BitBajaEficiencia]\nWHERE ClaEstatusReplica = 1\nORDER BY FechaUltimaMod\nLIMIT 100\n;`;\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 385,
        "y": 880,
        "wires": [
            [
                "720e3500.91d37c"
            ]
        ]
    },
    {
        "id": "720e3500.91d37c",
        "type": "sqlite",
        "z": "99758b54.d258a8",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 652,
        "y": 880,
        "wires": [
            [
                "95d1b601.344f88"
            ]
        ]
    },
    {
        "id": "95d1b601.344f88",
        "type": "function",
        "z": "99758b54.d258a8",
        "name": "Format",
        "func": "msg.payload = {\n    BE: msg.payload.map((item) => ({\n            \"BajaEficiencia\": item\n        }))\n    \n};\n\n  \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 880,
        "wires": [
            [
                "974f14e1.8a7938"
            ]
        ]
    },
    {
        "id": "974f14e1.8a7938",
        "type": "xml",
        "z": "99758b54.d258a8",
        "name": "",
        "property": "payload",
        "attr": "",
        "chr": "",
        "x": 940,
        "y": 880,
        "wires": [
            [
                "a2f39741.3775f8"
            ]
        ]
    },
    {
        "id": "a2f39741.3775f8",
        "type": "function",
        "z": "99758b54.d258a8",
        "name": "Query",
        "func": "\nmsg.payload = {\"sp_name\":\"AswSch.ASW_CU504_Pag1_ActualizacionBajaEficiencia_Proc\",\"params\":{\"xml\":msg.payload}}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1060,
        "y": 880,
        "wires": [
            [
                "7b22ee9d.c1cca"
            ]
        ]
    },
    {
        "id": "7b22ee9d.c1cca",
        "type": "subflow:6271978d.4d6ac8",
        "z": "99758b54.d258a8",
        "name": "",
        "env": [],
        "x": 1200,
        "y": 880,
        "wires": [
            [
                "5187c111.5c20b"
            ]
        ]
    },
    {
        "id": "5187c111.5c20b",
        "type": "MSSQL",
        "z": "99758b54.d258a8",
        "mssqlCN": "955d262e.b17988",
        "name": "ASWMSSQL",
        "outField": "payload",
        "query": "",
        "x": 1370,
        "y": 880,
        "wires": [
            [
                "cb3c53c3.6795c"
            ]
        ]
    },
    {
        "id": "cb3c53c3.6795c",
        "type": "split",
        "z": "99758b54.d258a8",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1523,
        "y": 880,
        "wires": [
            [
                "768a07d8.ed26b8"
            ]
        ]
    },
    {
        "id": "768a07d8.ed26b8",
        "type": "function",
        "z": "99758b54.d258a8",
        "name": "ActualizaBdLocal",
        "func": "let qry = \"\"\nlet resultado = msg.payload;\n\nqry = 'UPDATE ASWLite_BitBajaEficiencia SET'\n\n\n\nfor (const columna in resultado) {\n    if (resultado[columna] !== null  && columna != 'IdBajaEficiencia' ) {\n\n        qry += ` ${columna} = ${(typeof(resultado[columna]) === 'string') ? \"'\"+resultado[columna]+\"'\":resultado[columna]},`;\n    }\n}\n\nqry += ' ClaEstatusReplica = 2'\n\nqry += ` WHERE IdBajaEficiencia = ${resultado.IdBajaEficiencia} ;`;\n\nmsg.topic=qry\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1703,
        "y": 880,
        "wires": [
            [
                "a65b4c38.34328"
            ]
        ]
    },
    {
        "id": "a65b4c38.34328",
        "type": "sqlite",
        "z": "99758b54.d258a8",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 1873,
        "y": 880,
        "wires": [
            []
        ]
    },
    {
        "id": "3b5651b3.fb5d4e",
        "type": "inject",
        "z": "99758b54.d258a8",
        "name": "",
        "props": [
            {
                "p": "payload",
                "v": "",
                "vt": "date"
            },
            {
                "p": "topic",
                "v": "",
                "vt": "string"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 110,
        "y": 940,
        "wires": [
            [
                "bf95f0eaa9299a7e"
            ]
        ]
    },
    {
        "id": "81513da1.cbe9d",
        "type": "sqlite",
        "z": "99758b54.d258a8",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 586,
        "y": 940,
        "wires": [
            [
                "ac81de8f.361d3"
            ]
        ]
    },
    {
        "id": "ac81de8f.361d3",
        "type": "function",
        "z": "99758b54.d258a8",
        "name": "Format",
        "func": "msg.payload = {\n    ActualizaAndon: msg.payload.map((item) => ({\n            \"Andon\": item\n        }))\n    \n};\n\n  \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 728,
        "y": 940,
        "wires": [
            [
                "afb8a705.20ed28"
            ]
        ]
    },
    {
        "id": "afb8a705.20ed28",
        "type": "xml",
        "z": "99758b54.d258a8",
        "name": "",
        "property": "payload",
        "attr": "",
        "chr": "",
        "x": 858,
        "y": 940,
        "wires": [
            [
                "734cfee1.77c0b"
            ]
        ]
    },
    {
        "id": "734cfee1.77c0b",
        "type": "function",
        "z": "99758b54.d258a8",
        "name": "Query",
        "func": "\nmsg.payload = {\"sp_name\":\"AswSch.ASW_CU523_Pag1_ActualizaAndon_Proc\",\"params\":{\"xml\":msg.payload}}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 978,
        "y": 940,
        "wires": [
            [
                "b73e9cd7.de18"
            ]
        ]
    },
    {
        "id": "b73e9cd7.de18",
        "type": "subflow:6271978d.4d6ac8",
        "z": "99758b54.d258a8",
        "name": "",
        "env": [],
        "x": 1118,
        "y": 940,
        "wires": [
            [
                "aa98b6de.2ad538"
            ]
        ]
    },
    {
        "id": "aa98b6de.2ad538",
        "type": "MSSQL",
        "z": "99758b54.d258a8",
        "mssqlCN": "955d262e.b17988",
        "name": "ASWMSSQL",
        "outField": "payload",
        "returnType": "0",
        "throwErrors": "0",
        "query": "",
        "modeOpt": "",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "msg",
        "paramsOpt": "queryParams",
        "paramsOptType": "msg",
        "params": [],
        "x": 1278,
        "y": 940,
        "wires": [
            [
                "a28dd37e.b5614"
            ]
        ]
    },
    {
        "id": "a28dd37e.b5614",
        "type": "split",
        "z": "99758b54.d258a8",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1441,
        "y": 940,
        "wires": [
            [
                "74fdfafa.5c38f4"
            ]
        ]
    },
    {
        "id": "74fdfafa.5c38f4",
        "type": "function",
        "z": "99758b54.d258a8",
        "name": "ActualizaBdLocal",
        "func": "let qry = \"\"\nlet resultado = msg.payload;\n\nqry = 'UPDATE AswLite_BitAndon SET'\n\n\n\nfor (const columna in resultado) {\n    if (resultado[columna] !== null  && columna != 'IdAndon' ) {\n\n        qry += ` ${columna} = ${(typeof(resultado[columna]) === 'string') ? \"'\"+resultado[columna]+\"'\":resultado[columna]},`;\n    }\n}\n\nqry += ' ClaEstatusReplica = 2'\n\nqry += ` WHERE IdAndon = ${resultado.IdAndon} ;`;\n\nmsg.topic=qry\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1621,
        "y": 940,
        "wires": [
            [
                "14e39af.7ba7d65"
            ]
        ]
    },
    {
        "id": "14e39af.7ba7d65",
        "type": "sqlite",
        "z": "99758b54.d258a8",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 1791,
        "y": 940,
        "wires": [
            []
        ]
    },
    {
        "id": "d3d423fd.0dc7",
        "type": "inject",
        "z": "99758b54.d258a8",
        "name": "",
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 110,
        "y": 1000,
        "wires": [
            [
                "392c9950.7deb16"
            ]
        ]
    },
    {
        "id": "392c9950.7deb16",
        "type": "function",
        "z": "99758b54.d258a8",
        "name": "FN_CU703_Pag3_ReporteFalla_Sel",
        "func": "msg[\"topic\"] = `SELECT [IdReporteFalla]\n\t,[IdCelda]\n\t,[ClaEquipo]\n\t,[ClaTurno]\n\t,[FechaAdmScada]\n\t,[FechaReporte]\n\t,[ClaSistema]\n\t,[ClaSubSistema]\n\t,[ClaRcmFuncion]\n\t,[ClaRcmFuncionFalla]\n\t,[ClaEstatusReplica]\n\t,[FechaBajaLogica]\n\t,[BajaLogica]\n\t,[ClaUsuarioMod]\n\t,[NombrePCMod]\n\t,[FechaUltimaMod]\nFROM [ASWLite_MtoTraReporteFalla]\nWHERE ClaEstatusReplica = 1\nLIMIT 10\n;`;\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 355,
        "y": 1000,
        "wires": [
            [
                "9450eafd.bbf988"
            ]
        ]
    },
    {
        "id": "9450eafd.bbf988",
        "type": "sqlite",
        "z": "99758b54.d258a8",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 586,
        "y": 1000,
        "wires": [
            [
                "dbe35ced.63102"
            ]
        ]
    },
    {
        "id": "dbe35ced.63102",
        "type": "function",
        "z": "99758b54.d258a8",
        "name": "Format",
        "func": "msg.payload = {\n    ReporteFalla: msg.payload.map((item) => ({\n            \"Reporte\": item\n        }))\n    \n};\n\n  \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 728,
        "y": 1000,
        "wires": [
            [
                "e967994d.bea9c8"
            ]
        ]
    },
    {
        "id": "e967994d.bea9c8",
        "type": "xml",
        "z": "99758b54.d258a8",
        "name": "",
        "property": "payload",
        "attr": "",
        "chr": "",
        "x": 858,
        "y": 1000,
        "wires": [
            [
                "653728b0.02b1b8"
            ]
        ]
    },
    {
        "id": "653728b0.02b1b8",
        "type": "function",
        "z": "99758b54.d258a8",
        "name": "Query",
        "func": "\nmsg.payload = {\"sp_name\":\"AswSch.ASW_CU703_3_ActualizaReporteFalla_Proc\",\"params\":{\"xml\":msg.payload}}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 978,
        "y": 1000,
        "wires": [
            [
                "f2f91afd.60e138"
            ]
        ]
    },
    {
        "id": "f2f91afd.60e138",
        "type": "subflow:6271978d.4d6ac8",
        "z": "99758b54.d258a8",
        "name": "",
        "env": [],
        "x": 1118,
        "y": 1000,
        "wires": [
            [
                "66a061e3.75907"
            ]
        ]
    },
    {
        "id": "66a061e3.75907",
        "type": "MSSQL",
        "z": "99758b54.d258a8",
        "mssqlCN": "955d262e.b17988",
        "name": "ASWMSSQL",
        "outField": "payload",
        "query": "",
        "x": 1278,
        "y": 1000,
        "wires": [
            [
                "ea27c2fd.13bfe"
            ]
        ]
    },
    {
        "id": "ea27c2fd.13bfe",
        "type": "split",
        "z": "99758b54.d258a8",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1441,
        "y": 1000,
        "wires": [
            [
                "2523ef54.22f07"
            ]
        ]
    },
    {
        "id": "2523ef54.22f07",
        "type": "function",
        "z": "99758b54.d258a8",
        "name": "ActualizaBdLocal",
        "func": "let qry = \"\"\nlet resultado = msg.payload;\n\nqry = 'UPDATE ASWLite_MtoTraReporteFalla SET'\n\n\n\nfor (const columna in resultado) {\n    if (resultado[columna] !== null  && columna != 'IdReporteFalla' ) {\n\n        qry += ` ${columna} = ${(typeof(resultado[columna]) === 'string') ? \"'\"+resultado[columna]+\"'\":resultado[columna]},`;\n    }\n}\n\nqry += ' ClaEstatusReplica = 2'\n\nqry += ` WHERE IdReporteFalla = ${resultado.IdReporteFalla} ;`;\n\nmsg.topic=qry\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1621,
        "y": 1000,
        "wires": [
            [
                "4277871b.a522e8"
            ]
        ]
    },
    {
        "id": "4277871b.a522e8",
        "type": "sqlite",
        "z": "99758b54.d258a8",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 1791,
        "y": 1000,
        "wires": [
            []
        ]
    },
    {
        "id": "34fa7bfa.6d6ac4",
        "type": "split",
        "z": "99758b54.d258a8",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 390,
        "y": 1100,
        "wires": [
            [
                "25059f27.ead35"
            ]
        ]
    },
    {
        "id": "7f84696f.98a6c8",
        "type": "join",
        "z": "99758b54.d258a8",
        "name": "",
        "mode": "auto",
        "build": "string",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "num",
        "reduceFixup": "",
        "x": 1167,
        "y": 1097,
        "wires": [
            [
                "79157bce.8f68b4"
            ]
        ]
    },
    {
        "id": "471803a6.3a82ac",
        "type": "inject",
        "z": "99758b54.d258a8",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 100,
        "y": 1100,
        "wires": [
            [
                "7dc3359a.9d5d9c"
            ]
        ]
    },
    {
        "id": "7dc3359a.9d5d9c",
        "type": "function",
        "z": "99758b54.d258a8",
        "name": "ArrayTablas",
        "func": "msg.payload = ['Ot','Actividad','Paso','Variable']\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 250,
        "y": 1100,
        "wires": [
            [
                "34fa7bfa.6d6ac4"
            ]
        ]
    },
    {
        "id": "25059f27.ead35",
        "type": "switch",
        "z": "99758b54.d258a8",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Ot",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Actividad",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Paso",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Variable",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 510,
        "y": 1100,
        "wires": [
            [
                "3599d072.aa9cd"
            ],
            [
                "acfb3605.7b2ce8"
            ],
            [
                "81ce2051.a31c4"
            ],
            [
                "2fa15551.2a1fba"
            ]
        ]
    },
    {
        "id": "3599d072.aa9cd",
        "type": "function",
        "z": "99758b54.d258a8",
        "name": "FN_CU705_Pag1_Ot_Sel",
        "func": "msg[\"topic\"] = `SELECT DISTINCT \n\tOT.[ClaUbicacion]\n\t,OT.[IdOt]\n\t,OT.[ClaEstatusOt]\n\t,OT.[ClaEquipo]\n\t,OT.[IdCelda]\n\t,OT.[EsTerminada]\n\t,OT.[ClaEstatusReplica]\n\t,OT.[BajaLogica]\n\t,OT.[FechaBajaLogica]\n\t,OT.[ClaUsuarioMod]\n\t,OT.[NombrePcMod]\n\t,OT.[FechaUltimaMod]\nFROM [ASWLite_MtoTraOT] OT\nLEFT JOIN ASWLite_MtoTraOTActividad A\n\tON OT.IdOt = A.IdOt\nLEFT JOIN ASWLite_MtoTraOTActividadPaso P\n\tON A.IdOt = P.IdOt\n\tAND A.ClaActividad = P.ClaActividad\nLEFT JOIN ASWLite_MtoTraOTActividadVariable V\n\tON P.IdOt = V.IdOt\n\tAND P.ClaActividad = V.ClaActividad\n\tAND P.ClaActividadPaso = V.ClaActividadPaso\nWHERE OT.ClaEstatusReplica = 1\n\tOR A.ClaEstatusReplica = 1\n\tOR P.ClaEstatusReplica = 1\n\tOR V.ClaEstatusReplica = 1\n;`;\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 1080,
        "wires": [
            [
                "d5556324.165a8"
            ]
        ]
    },
    {
        "id": "d5556324.165a8",
        "type": "sqlite",
        "z": "99758b54.d258a8",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 1038,
        "y": 1097,
        "wires": [
            [
                "7f84696f.98a6c8"
            ]
        ]
    },
    {
        "id": "2fa15551.2a1fba",
        "type": "function",
        "z": "99758b54.d258a8",
        "name": "FN_CU705_Pag1_Variable_Sel",
        "func": "msg[\"topic\"] = `SELECT DISTINCT \n\t[ClaUbicacion]\n\t,[IdOt]\n\t,[ClaActividad]\n\t,[ClaActividadPaso]\n\t,[ClaVariable]\n\t,[ValorReal]\n\t,[ClaOpcionFija]\n\t,[ClaTipoVariable]\n\t,[ClaEstatusReplica]\n\t,[BajaLogica]\n\t,[FechaBajaLogica]\n\t,[ClaUsuarioMod]\n\t,[NombrePcMod]\n\t,[FechaUltimaMod]\nFROM ASWLite_MtoTraOTActividadVariable V\nWHERE ClaEstatusReplica = 1\n;`;\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 1200,
        "wires": [
            [
                "d5556324.165a8"
            ]
        ]
    },
    {
        "id": "81ce2051.a31c4",
        "type": "function",
        "z": "99758b54.d258a8",
        "name": "FN_CU705_Pag1_Paso_Sel",
        "func": "msg[\"topic\"] = `SELECT DISTINCT \n\tP.[ClaUbicacion]\n\t,P.[IdOt]\n\t,P.[ClaActividad]\n\t,P.[ClaActividadPaso]\n\t,P.[EsRealizada]\n\t,P.[ClaEstatusReplica]\n\t,P.[BajaLogica]\n\t,P.[FechaBajaLogica]\n\t,P.[ClaUsuarioMod]\n\t,P.[NombrePcMod]\n\t,P.[FechaUltimaMod]\nFROM ASWLite_MtoTraOTActividadPaso P\nLEFT JOIN ASWLite_MtoTraOTActividadVariable V\n\tON P.IdOt = V.IdOt\n\tAND P.ClaActividad = V.ClaActividad\n\tAND P.ClaActividadPaso = V.ClaActividadPaso\nWHERE P.ClaEstatusReplica = 1\n\tOR V.ClaEstatusReplica = 1\n;`;\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 1160,
        "wires": [
            [
                "d5556324.165a8"
            ]
        ]
    },
    {
        "id": "acfb3605.7b2ce8",
        "type": "function",
        "z": "99758b54.d258a8",
        "name": "FN_CU705_Pag1_Actividad_Sel",
        "func": "msg[\"topic\"] = `SELECT DISTINCT \n\tA.[ClaUbicacion]\n\t,A.[IdOt]\n\t,A.[ClaActividad]\n\t,A.[EsRealizada]\n\t,A.[GeneraDerivadaSN]\n\t,A.[IdOtDerivada]\n\t,A.[ClaEstatusReplica]\n\t,A.[BajaLogica]\n\t,A.[FechaBajaLogica]\n\t,A.[ClaUsuarioMod]\n\t,A.[NombrePcMod]\n\t,A.[FechaUltimaMod]\nFROM ASWLite_MtoTraOTActividad A\nLEFT JOIN ASWLite_MtoTraOTActividadPaso P\n\tON A.IdOt = P.IdOt\n\tAND A.ClaActividad = P.ClaActividad\nLEFT JOIN ASWLite_MtoTraOTActividadVariable V\n\tON P.IdOt = V.IdOt\n\tAND P.ClaActividad = V.ClaActividad\n\tAND P.ClaActividadPaso = V.ClaActividadPaso\nWHERE A.ClaEstatusReplica = 1\n\tOR P.ClaEstatusReplica = 1\n\tOR V.ClaEstatusReplica = 1\n;`;\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 770,
        "y": 1120,
        "wires": [
            [
                "d5556324.165a8"
            ]
        ]
    },
    {
        "id": "79157bce.8f68b4",
        "type": "function",
        "z": "99758b54.d258a8",
        "name": "Format",
        "func": "msg.payload = {\n    ActualizaOt: {\n        Ot: msg.payload[0].map((item) => ({\n            \"Ot\": item\n        })),\n        \n        Actividad: msg.payload[1].map((item) => ({\n            \"Actividad\": item\n        })),\n        \n        Paso: msg.payload[2].map((item) => ({\n            \"Paso\": item\n        })),\n        \n        Variable: msg.payload[3].map((item) => ({\n            \"Variable\": item\n        }))\n    }\n};\n\n  \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1297,
        "y": 1097,
        "wires": [
            [
                "a093d223.bc27e"
            ]
        ]
    },
    {
        "id": "a093d223.bc27e",
        "type": "xml",
        "z": "99758b54.d258a8",
        "name": "",
        "property": "payload",
        "attr": "",
        "chr": "",
        "x": 1427,
        "y": 1097,
        "wires": [
            [
                "5f990e49.fce27"
            ]
        ]
    },
    {
        "id": "5f990e49.fce27",
        "type": "function",
        "z": "99758b54.d258a8",
        "name": "Query",
        "func": "\nmsg.payload = {\"sp_name\":\"AswSch.ASW_CU705_Pag1_ActualizaOt_Proc\",\"params\":{\"xml\":msg.payload}}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1547,
        "y": 1097,
        "wires": [
            [
                "a4c70442.5060f8"
            ]
        ]
    },
    {
        "id": "a4c70442.5060f8",
        "type": "subflow:6271978d.4d6ac8",
        "z": "99758b54.d258a8",
        "name": "",
        "env": [],
        "x": 1687,
        "y": 1097,
        "wires": [
            [
                "4f019d69.70d424"
            ]
        ]
    },
    {
        "id": "4f019d69.70d424",
        "type": "MSSQL",
        "z": "99758b54.d258a8",
        "mssqlCN": "955d262e.b17988",
        "name": "ASWMSSQL",
        "outField": "payload",
        "query": "",
        "x": 1847,
        "y": 1097,
        "wires": [
            [
                "fcf710ac.71337"
            ]
        ]
    },
    {
        "id": "fcf710ac.71337",
        "type": "function",
        "z": "99758b54.d258a8",
        "name": "DataSets",
        "func": "msg.query = undefined;\nmsg.topic = undefined;\nmsg[\"payload\"] = {\n    Ot: msg.payload.recordsets[0],\n    Actividad: msg.payload.recordsets[1],\n    Paso: msg.payload.recordsets[2],\n    Variable: msg.payload.recordsets[3]};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1997,
        "y": 1097,
        "wires": [
            [
                "d7145992.42f688"
            ]
        ]
    },
    {
        "id": "d7145992.42f688",
        "type": "split",
        "z": "99758b54.d258a8",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "topic",
        "x": 2127,
        "y": 1097,
        "wires": [
            [
                "ba77236d.a1c25"
            ]
        ]
    },
    {
        "id": "ba77236d.a1c25",
        "type": "switch",
        "z": "99758b54.d258a8",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Ot",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Actividad",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Paso",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Variable",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 2250,
        "y": 1097,
        "wires": [
            [
                "675e80c4.c1541"
            ],
            [
                "8034a66a.f24898"
            ],
            [
                "1578104c.71c56"
            ],
            [
                "ad809f5e.e6aa7"
            ]
        ]
    },
    {
        "id": "675e80c4.c1541",
        "type": "split",
        "z": "99758b54.d258a8",
        "name": "Ot",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 2442,
        "y": 1039,
        "wires": [
            [
                "a8ac2aac.b859d8"
            ]
        ]
    },
    {
        "id": "a8ac2aac.b859d8",
        "type": "function",
        "z": "99758b54.d258a8",
        "name": "ActualizaBdLocal",
        "func": "let qry = \"\"\nlet resultado = msg.payload;\n\nqry = 'UPDATE ASWLite_MtoTraOt SET'\n\n\n\nfor (const columna in resultado) {\n    if (resultado[columna] !== null) {\n\n        qry += ` ${columna} = ${(typeof(resultado[columna]) === 'string') ? \"'\"+resultado[columna]+\"'\":resultado[columna]},`;\n    }\n}\n\nqry += ' ClaEstatusReplica = 2'\n\nqry += ` WHERE ClaUbicacion = ${resultado.ClaUbicacion} \n            AND IdOt = ${resultado.IdOt}  ;`;\n\nmsg.topic=qry\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 2622,
        "y": 1039,
        "wires": [
            [
                "fefa3c62.12e97"
            ]
        ]
    },
    {
        "id": "fefa3c62.12e97",
        "type": "sqlite",
        "z": "99758b54.d258a8",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 2792,
        "y": 1039,
        "wires": [
            []
        ]
    },
    {
        "id": "8034a66a.f24898",
        "type": "split",
        "z": "99758b54.d258a8",
        "name": "Actividad",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 2452,
        "y": 1079,
        "wires": [
            [
                "4c384ed1.80daf"
            ]
        ]
    },
    {
        "id": "fc77715c.ed24f",
        "type": "sqlite",
        "z": "99758b54.d258a8",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 2792,
        "y": 1079,
        "wires": [
            []
        ]
    },
    {
        "id": "1578104c.71c56",
        "type": "split",
        "z": "99758b54.d258a8",
        "name": "Paso",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 2442,
        "y": 1119,
        "wires": [
            [
                "72d67515.93665c"
            ]
        ]
    },
    {
        "id": "d6e84206.8e4d",
        "type": "sqlite",
        "z": "99758b54.d258a8",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 2792,
        "y": 1119,
        "wires": [
            []
        ]
    },
    {
        "id": "ad809f5e.e6aa7",
        "type": "split",
        "z": "99758b54.d258a8",
        "name": "Variable",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 2452,
        "y": 1160,
        "wires": [
            [
                "aa1ce1c4.e73f2"
            ]
        ]
    },
    {
        "id": "7e8113b7.6a30cc",
        "type": "sqlite",
        "z": "99758b54.d258a8",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 2792,
        "y": 1160,
        "wires": [
            []
        ]
    },
    {
        "id": "72d67515.93665c",
        "type": "function",
        "z": "99758b54.d258a8",
        "name": "ActualizaBdLocal",
        "func": "let qry = \"\"\nlet resultado = msg.payload;\n\nqry = 'UPDATE ASWLite_MtoTraOtActividadPaso SET'\n\n\n\nfor (const columna in resultado) {\n    if (resultado[columna] !== null) {\n\n        qry += ` ${columna} = ${(typeof(resultado[columna]) === 'string') ? \"'\"+resultado[columna]+\"'\":resultado[columna]},`;\n    }\n}\n\nqry += ' ClaEstatusReplica = 2'\n\nqry += ` WHERE ClaUbicacion = ${resultado.ClaUbicacion} \n            AND IdOt = ${resultado.IdOt} \n            AND ClaActividad = ${resultado.ClaActividad} \n            AND ClaActividadPaso = ${resultado.ClaActividadPaso}  ;`;\n\nmsg.topic=qry\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 2622,
        "y": 1119,
        "wires": [
            [
                "d6e84206.8e4d"
            ]
        ]
    },
    {
        "id": "4c384ed1.80daf",
        "type": "function",
        "z": "99758b54.d258a8",
        "name": "ActualizaBdLocal",
        "func": "let qry = \"\"\nlet resultado = msg.payload;\n\nqry = 'UPDATE ASWLite_MtoTraOtActividad SET'\n\n\n\nfor (const columna in resultado) {\n    if (resultado[columna] !== null) {\n\n        qry += ` ${columna} = ${(typeof(resultado[columna]) === 'string') ? \"'\"+resultado[columna]+\"'\":resultado[columna]},`;\n    }\n}\n\nqry += ' ClaEstatusReplica = 2'\n\nqry += ` WHERE ClaUbicacion = ${resultado.ClaUbicacion} \n            AND IdOt = ${resultado.IdOt} \n            AND ClaActividad = ${resultado.ClaActividad}  ;`;\n\nmsg.topic=qry\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 2622,
        "y": 1079,
        "wires": [
            [
                "fc77715c.ed24f"
            ]
        ]
    },
    {
        "id": "aa1ce1c4.e73f2",
        "type": "function",
        "z": "99758b54.d258a8",
        "name": "ActualizaBdLocal",
        "func": "let qry = \"\"\nlet resultado = msg.payload;\n\nqry = 'UPDATE ASWLite_MtoTraOtActividadVariable SET'\n\n\n\nfor (const columna in resultado) {\n    if (resultado[columna] !== null) {\n\n        qry += ` ${columna} = ${(typeof(resultado[columna]) === 'string') ? \"'\"+resultado[columna]+\"'\":resultado[columna]},`;\n    }\n}\n\nqry += ' ClaEstatusReplica = 2'\n\nqry += ` WHERE ClaUbicacion = ${resultado.ClaUbicacion} \n            AND IdOt = ${resultado.IdOt} \n            AND ClaActividad = ${resultado.ClaActividad} \n            AND ClaActividadPaso = ${resultado.ClaActividadPaso}\n            AND ClaVariable = ${resultado.ClaVariable}  ;`;\n\nmsg.topic=qry\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 2622,
        "y": 1160,
        "wires": [
            [
                "7e8113b7.6a30cc"
            ]
        ]
    },
    {
        "id": "cbc3d601.46c508",
        "type": "split",
        "z": "99758b54.d258a8",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 430,
        "y": 200,
        "wires": [
            [
                "e8489343.0dfdf"
            ]
        ]
    },
    {
        "id": "82f042bf.da6d1",
        "type": "function",
        "z": "99758b54.d258a8",
        "name": "ArrayTablas",
        "func": "msg.payload = ['Po','PoDet']\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 200,
        "wires": [
            [
                "cbc3d601.46c508"
            ]
        ]
    },
    {
        "id": "e8489343.0dfdf",
        "type": "switch",
        "z": "99758b54.d258a8",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Po",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "PoDet",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 550,
        "y": 200,
        "wires": [
            [
                "6596b069.ecb7e"
            ],
            [
                "c1e8221a.d76a1"
            ]
        ]
    },
    {
        "id": "6113353d.20cb8c",
        "type": "inject",
        "z": "99758b54.d258a8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 110,
        "y": 1320,
        "wires": [
            [
                "ffc6760d.4b2ea8"
            ]
        ]
    },
    {
        "id": "ffc6760d.4b2ea8",
        "type": "function",
        "z": "99758b54.d258a8",
        "name": "FN_CU167_Pag1_FinCajaMCSW_Sel",
        "func": "msg[\"topic\"] = `SELECT \n       ${global.get('ClaUbicacion')} as ClaUbicacion,\n       ClaCelda,\n       ClaMaquina,\n       ClaTurno,\n       IdUsuario,\n       IdPO,\n       IdUnidadCaja,\n       ClavePO,\n       ClaEstatus,\n       ClaArticulo,\n       FechaInicioReal,\n       FechaFinReal,\n       IdMateriaPrimaInicio,\n       IdMateriaPrimaFin,\n       ClaEstatusReplica,\n       FechaUltimaMod,\n       ClaUsuarioMod,\n       NombrePcMod,\n       EsCajaManual\n  FROM ASWLite_TraFinCajaMCSW\n  WHERE ClaEstatusReplica=1\nLIMIT 100\n;`;\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 1320,
        "wires": [
            [
                "1e602af9.db8bf5"
            ]
        ]
    },
    {
        "id": "1e602af9.db8bf5",
        "type": "sqlite",
        "z": "99758b54.d258a8",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 610,
        "y": 1320,
        "wires": [
            [
                "2f4c1129.a74f5e"
            ]
        ]
    },
    {
        "id": "2f4c1129.a74f5e",
        "type": "function",
        "z": "99758b54.d258a8",
        "name": "Format",
        "func": "msg.payload = {\n    Produccion: msg.payload.map((item) => ({\n            \"FinCaja\": item\n        }))\n    \n};\n\n  \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 1320,
        "wires": [
            [
                "ed4589b8.e61058"
            ]
        ]
    },
    {
        "id": "ed4589b8.e61058",
        "type": "xml",
        "z": "99758b54.d258a8",
        "name": "",
        "property": "payload",
        "attr": "",
        "chr": "",
        "x": 870,
        "y": 1320,
        "wires": [
            [
                "defe443a.107cd8"
            ]
        ]
    },
    {
        "id": "defe443a.107cd8",
        "type": "function",
        "z": "99758b54.d258a8",
        "name": "Query",
        "func": "\nmsg.payload = {\"sp_name\":\"AswSch.ASW_CU167_Pag1_ActualizaFinCajaMCSW_Proc\",\"params\":{\"xml\":msg.payload}}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 1320,
        "wires": [
            [
                "991c5155.b5ee2"
            ]
        ]
    },
    {
        "id": "991c5155.b5ee2",
        "type": "subflow:6271978d.4d6ac8",
        "z": "99758b54.d258a8",
        "name": "",
        "env": [],
        "x": 1130,
        "y": 1320,
        "wires": [
            [
                "24ff2ac7.1539c6"
            ]
        ]
    },
    {
        "id": "24ff2ac7.1539c6",
        "type": "MSSQL",
        "z": "99758b54.d258a8",
        "mssqlCN": "955d262e.b17988",
        "name": "ASWMSSQL",
        "outField": "payload",
        "query": "",
        "x": 1290,
        "y": 1320,
        "wires": [
            [
                "7e954387.6e388c"
            ]
        ]
    },
    {
        "id": "7e954387.6e388c",
        "type": "split",
        "z": "99758b54.d258a8",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1450,
        "y": 1320,
        "wires": [
            [
                "55670c1e.c529d4"
            ]
        ]
    },
    {
        "id": "55670c1e.c529d4",
        "type": "function",
        "z": "99758b54.d258a8",
        "name": "ActualizaBdLocal",
        "func": "let qry = \"\"\nlet resultado = msg.payload;\n\nqry = 'UPDATE ASWLite_TraFinCajaMCSW SET'\n\n\n\n// for (const columna in resultado) {\n//     if (resultado[columna] !== null  && columna != 'IdBitProduccion' ) {\n\n//         qry += ` ${columna} = ${(typeof(resultado[columna]) === 'string') ? \"'\"+resultado[columna]+\"'\":resultado[columna]},`;\n//     }\n// }\n\nqry += ' ClaEstatusReplica = 2'\n\nqry += ` WHERE IdPo = ${resultado.IdPo} AND ClaCelda = ${resultado.IdCelda} AND IdUnidadCaja = ${resultado.IdUnidadCaja};`;\n\nmsg.topic=qry\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1610,
        "y": 1320,
        "wires": [
            [
                "cb9c84f.8a6aa78"
            ]
        ]
    },
    {
        "id": "cb9c84f.8a6aa78",
        "type": "sqlite",
        "z": "99758b54.d258a8",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 1810,
        "y": 1320,
        "wires": [
            []
        ]
    },
    {
        "id": "199630ebdc8563e6",
        "type": "MSSQL",
        "z": "99758b54.d258a8",
        "mssqlCN": "955d262e.b17988",
        "name": "ASWMSSQL",
        "outField": "payload",
        "returnType": "0",
        "throwErrors": "0",
        "query": "",
        "modeOpt": "",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "msg",
        "paramsOpt": "queryParams",
        "paramsOptType": "msg",
        "params": [],
        "x": 1290,
        "y": 720,
        "wires": [
            [
                "69b3b8ce.f430e8"
            ]
        ]
    },
    {
        "id": "6cfbfe3dfa0d804c",
        "type": "function",
        "z": "99758b54.d258a8",
        "name": "fnExecute",
        "func": "let qry = `EXECUTE ${msg.payload[\"sp_name\"]} `;\nlet params = msg.payload[\"params\"];\n\nif(params){\n    let paramsCount = Object.keys(params).length;\nObject.keys(params).forEach((key,idx)=>{\n    //console.log({key})\n    \n    //SI ES STRING HAY QUE AGREGAR COMILLAS\n    switch(typeof(params[key])){\n        case 'string':\n            qry += `@${key} = '${params[key]}'`;\n            break;\n        default: \n            qry += `@${key} = ${params[key]}`;\n            break;\n\n    }\n    //QUITAMOS LA COMA CUANDO ES EL ULITMO PARAMETRO  \n    qry += (idx === (paramsCount - 1)) ? '' : ',';\n\n\n})\n}\n\n\nmsg.payload = qry;\n//msg.keys = Object.keys(params);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1120,
        "y": 720,
        "wires": [
            [
                "199630ebdc8563e6"
            ]
        ]
    },
    {
        "id": "044972774123eb03",
        "type": "function",
        "z": "99758b54.d258a8",
        "name": "",
        "func": "var d=new Date().toISOString();\nvar date = d.split('T')[0];\n\nfor (var i = 0; i < msg.payload.length; i++) {\n   \n    y = msg.payload[i].FechaUltimaMod;\n    y = y.replace(/ /g,\"T\");\n    z = msg.payload[i].ClaUsuarioMod || 0;\n    tiempo = msg.payload[i].TiempoTurno || 0;\n    //tiempoTurno = msg.payload[i].TiempoTurno || 0;\n    comp = msg.payload[i].IdComponente || 0;\n    //paro = msg.payload[i].TiempoParo1 || 0;\n    //cajas = msg.payload[i].CajasSkid || 0;\n    art = msg.payload[i].ClaArticulo || 0;\n \n    if(msg.payload[i].FechaAdmScada===\"null\")\n        {\n          x = msg.payload[i].FechaAdmScada;\n          x = x.replace(\"null\", date);\n          msg.payload[i].FechaAdmScada  = x;\n        }\n    msg.payload[i].FechaUltimaMod = y;\n    msg.payload[i].ClaUsuarioMod  = z;\n    msg.payload[i].TiempoTurno    = tiempo;\n    msg.payload[i].IdComponente = comp;\n    msg.payload[i].ClaArticulo = art;\n    //msg.payload[i].CajasSkid = cajas;\n    //msg.payload[i].TiempoParo1 = paro;\n    \n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 760,
        "wires": [
            [
                "e795fe29.024b7"
            ]
        ]
    },
    {
        "id": "bf95f0eaa9299a7e",
        "type": "function",
        "z": "99758b54.d258a8",
        "name": "FN_CU523_Pag1_CambiosAndon_Sel",
        "func": "msg[\"topic\"] = `SELECT [IdAndon]\n\t,[ClaUbicacion]\n\t,[IdComponente]\n\t,[IdPOInicio]\n\t,[IdPOFin]\n\t,[IdUnidad]\n\t,[IdUsuario]\n\t,[FechaHoraInicial]\n\t,[FechaHoraReasignado]\n\t,[FechaHoraAtencion]\n\t,[FechaHoraFinal]\n\t,[DuracionSegundos]\n\t,[FechaAdmSCADA]\n\t,[ClaTurno]\n\t,[ClaGrupoParo]\n\t,[ClaTipoParo]\n\t,[ClaSeccionParo]\n\t,[ClaEventoNuevo]\n\t,[ClaEventoReasignacion]\n\t,[ClaEventoAtencion]\n\t,[ClaEventoSolucionado]\n\t,[ClaEstatusReplica]\n\t,[ClaUsuarioMod]\n\t,[NombrePCMod]\n\t,[FechaUltimaMod]\n\t,[BajaLogica]\n\t,[NombreEmpleado]\n\t,[Comentarios]\n\t,[ComentariosSolucion]\n\t,[IdTipoSeguimientoAlerta]\nFROM [AswLite_BitAndon]\nWHERE ClaEstatusReplica = 1\nLIMIT 10\n;`;\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 940,
        "wires": [
            [
                "81513da1.cbe9d"
            ]
        ]
    },
    {
        "id": "f5acbed14472832a",
        "type": "catch",
        "z": "99758b54.d258a8",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 80,
        "y": 1520,
        "wires": [
            [
                "f7481c54824fb2fe"
            ]
        ]
    },
    {
        "id": "f7481c54824fb2fe",
        "type": "function",
        "z": "99758b54.d258a8",
        "name": "Error Handler",
        "func": "node.warn(`ERROR NO CONTROLADO >  ${env.get(\"NAME\")} > ${JSON.stringify(msg)}`)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 1520,
        "wires": [
            []
        ]
    },
    {
        "id": "a52e95503bbd96bc",
        "type": "function",
        "z": "99758b54.d258a8",
        "name": "ActualizaBdLocal",
        "func": "let qry = \"\"\nlet resultado = msg.payload;\n\n//qry = 'UPDATE AswLite_BitParos SET'\n\n\n\n// for (const columna in resultado) {\n//     if (resultado[columna] !== null  && columna != 'IdParo' && columna != 'FechaHoraRespuesta') {\n\n//         qry += ` ${columna} = ${(typeof(resultado[columna]) === 'string') ? \"'\"+resultado[columna]+\"'\":resultado[columna]},`;\n//     }\n// }\n\n// qry += ' ClaEstatusReplica = 2'\n\n// qry += ` WHERE IdParo = ${resultado.IdParo} and FechaUltimaMod < '${resultado.FechaHoraRespuesta}';`;\n\nqry = `UPDATE AswLite_BitParos\nSET\n   ClaEstatusReplica      = CASE WHEN FechaUltimaMod       > '${resultado.FechaUltimaMod}'       OR ${resultado.ClaEstatusReplica}      IS NULL THEN ClaEstatusReplica      ELSE ${resultado.ClaEstatusReplica}      END\n  ,ClaEventoJustificacion = CASE WHEN FechaHoraJustificado > '${resultado.FechaHoraJustificado}' OR ${resultado.ClaEventoJustificacion} IS NULL THEN ClaEventoJustificacion ELSE ${resultado.ClaEventoJustificacion} END\n  ,ClaEventoReasignacion  = CASE WHEN FechaHoraReasignado  > '${resultado.FechaHoraReasignado}'  OR ${resultado.ClaEventoReasignacion}  IS NULL THEN ClaEventoReasignacion  ELSE ${resultado.ClaEventoReasignacion}  END\n  ,ClaEventoAtencion      = CASE WHEN FechaHoraAtencion    > '${resultado.FechaHoraAtencion}'    OR ${resultado.ClaEventoAtencion}      IS NULL THEN ClaEventoAtencion      ELSE ${resultado.ClaEventoAtencion}      END\n  ,ClaEventoSolucionado   = CASE WHEN FechaHoraSolucion    > '${resultado.FechaHoraSolucion}'    OR ${resultado.ClaEventoSolucionado}   IS NULL THEN ClaEventoSolucionado   ELSE ${resultado.ClaEventoSolucionado}   END\n  ,ClaEventoCierre        = CASE WHEN FechaHoraFinal       > '${resultado.FechaHoraFinal}'       OR ${resultado.ClaEventoCierre}      IS NULL THEN ClaEventoCierre   ELSE ${resultado.ClaEventoCierre}        END\nWHERE IdParo = ${resultado.IdParo}\n\n`\nnode.warn(qry)\n\nmsg.topic=qry\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1610,
        "y": 480,
        "wires": [
            [
                "7632f003.fd416"
            ]
        ]
    },
    {
        "id": "64b81e8549f18cca",
        "type": "inject",
        "z": "fe9ad1fa376c5db1",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 07 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 150,
        "y": 80,
        "wires": [
            [
                "cf2186ddfe9735dc"
            ]
        ]
    },
    {
        "id": "cf2186ddfe9735dc",
        "type": "function",
        "z": "fe9ad1fa376c5db1",
        "d": true,
        "name": "SQLiteTraOrdenProduccionDepuration",
        "func": "msg[\"topic\"] = `DELETE FROM ASWLite_TraOrdenProduccion\nWHERE ClaEstatusReplica = 2 AND FechaUltimaMod <= date('now','-30 day');`;\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 80,
        "wires": [
            [
                "1e09cd0e78dfdf1b"
            ]
        ]
    },
    {
        "id": "1e09cd0e78dfdf1b",
        "type": "sqlite",
        "z": "fe9ad1fa376c5db1",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 610,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "dcc10c2fc7ab7d22",
        "type": "inject",
        "z": "fe9ad1fa376c5db1",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 07 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 150,
        "y": 200,
        "wires": [
            [
                "89d6c7778c625631"
            ]
        ]
    },
    {
        "id": "89d6c7778c625631",
        "type": "function",
        "z": "fe9ad1fa376c5db1",
        "name": "SQLiteTraFinCajaMCSWDepuration",
        "func": "msg[\"topic\"] = `DELETE FROM ASWLite_TraFinCajaMCSW\nWHERE ClaEstatusReplica = 2 AND FechaUltimaMod <= date('now','-30 day');`;\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 200,
        "wires": [
            [
                "411bca43482b6a2a"
            ]
        ]
    },
    {
        "id": "411bca43482b6a2a",
        "type": "sqlite",
        "z": "fe9ad1fa376c5db1",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 610,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "440a79fc1a9ec9a8",
        "type": "inject",
        "z": "fe9ad1fa376c5db1",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 07 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 150,
        "y": 340,
        "wires": [
            [
                "0a246ff9b924e68c"
            ]
        ]
    },
    {
        "id": "0a246ff9b924e68c",
        "type": "function",
        "z": "fe9ad1fa376c5db1",
        "name": "SQLiteBitParosDepuration",
        "func": "msg[\"topic\"] = `DELETE FROM AswLite_BitParos\nWHERE ClaEstatusReplica = 2 AND FechaUltimaMod <= date('now','-30 day');`;\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 340,
        "wires": [
            [
                "1be616a23598472a"
            ]
        ]
    },
    {
        "id": "1be616a23598472a",
        "type": "sqlite",
        "z": "fe9ad1fa376c5db1",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 610,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "9dcb5d69ef85b809",
        "type": "inject",
        "z": "fe9ad1fa376c5db1",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 07 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 150,
        "y": 460,
        "wires": [
            [
                "e1976c28e92bc8f6"
            ]
        ]
    },
    {
        "id": "e1976c28e92bc8f6",
        "type": "function",
        "z": "fe9ad1fa376c5db1",
        "name": "SQLTraOrdenProduccionDetDepuration",
        "func": "msg[\"topic\"] = `DELETE FROM ASWLite_TraOrdenProduccionDet\nWHERE ClaEstatusReplica = 2 AND FechaUltimaMod <= date('now','-30 day');`;\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 460,
        "wires": [
            [
                "8c6022ce3c0b660b"
            ]
        ]
    },
    {
        "id": "8c6022ce3c0b660b",
        "type": "sqlite",
        "z": "fe9ad1fa376c5db1",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 630,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "f22567accef79bf5",
        "type": "inject",
        "z": "fe9ad1fa376c5db1",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 07 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 150,
        "y": 560,
        "wires": [
            [
                "f6697ea5ca2e6051"
            ]
        ]
    },
    {
        "id": "f6697ea5ca2e6051",
        "type": "function",
        "z": "fe9ad1fa376c5db1",
        "name": "SQLiteTraMateriaPrimaDepuration",
        "func": "msg[\"topic\"] = `DELETE FROM ASWLite_TraMateriaPrima\nWHERE ClaEstatusReplica = 2 AND FechaUltimaMod <= date('now','-30 day');`;\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 560,
        "wires": [
            [
                "2826101978e99e17"
            ]
        ]
    },
    {
        "id": "2826101978e99e17",
        "type": "sqlite",
        "z": "fe9ad1fa376c5db1",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 630,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "5c490db7f16be2dd",
        "type": "inject",
        "z": "fe9ad1fa376c5db1",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 07 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 150,
        "y": 680,
        "wires": [
            [
                "63fac0bee6a0b6e0"
            ]
        ]
    },
    {
        "id": "63fac0bee6a0b6e0",
        "type": "function",
        "z": "fe9ad1fa376c5db1",
        "name": "SQLBitParosDepuration",
        "func": "msg[\"topic\"] = `DELETE FROM AswLite_BitParos\nWHERE ClaEstatusReplica = 2 AND FechaUltimaMod <= date('now','-30 day');`;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 680,
        "wires": [
            [
                "de1f79520106adb3"
            ]
        ]
    },
    {
        "id": "de1f79520106adb3",
        "type": "sqlite",
        "z": "fe9ad1fa376c5db1",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 630,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "6dd3c6938a5f2058",
        "type": "inject",
        "z": "fe9ad1fa376c5db1",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 07 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 150,
        "y": 820,
        "wires": [
            [
                "ceeb8fb3322cf3fe"
            ]
        ]
    },
    {
        "id": "ceeb8fb3322cf3fe",
        "type": "function",
        "z": "fe9ad1fa376c5db1",
        "name": "SQLiteTraScrapDepuration",
        "func": "msg[\"topic\"] = `DELETE FROM ASWLite_TraScrap\nWHERE ClaEstatusReplica = 2 AND FechaUltimaMod <= date('now','-30 day');`;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 820,
        "wires": [
            [
                "985f49567356abf2"
            ]
        ]
    },
    {
        "id": "985f49567356abf2",
        "type": "sqlite",
        "z": "fe9ad1fa376c5db1",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 630,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "f6b6eb09fb4a05d1",
        "type": "inject",
        "z": "fe9ad1fa376c5db1",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 07 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 150,
        "y": 960,
        "wires": [
            [
                "23da3522890316cc"
            ]
        ]
    },
    {
        "id": "23da3522890316cc",
        "type": "function",
        "z": "fe9ad1fa376c5db1",
        "name": "SQLiteTraReporteProduccionDepuration",
        "func": "msg[\"topic\"] = `DELETE FROM ASWLite_TraReporteProduccion\nWHERE ClaEstatusReplica = 2 AND FechaUltimaMod <= date('now','-30 day');`;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 960,
        "wires": [
            [
                "2b63b47c07db9bbe"
            ]
        ]
    },
    {
        "id": "2b63b47c07db9bbe",
        "type": "sqlite",
        "z": "fe9ad1fa376c5db1",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 670,
        "y": 960,
        "wires": [
            []
        ]
    },
    {
        "id": "94b0b8fca5633e76",
        "type": "inject",
        "z": "fe9ad1fa376c5db1",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 07 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 150,
        "y": 1080,
        "wires": [
            [
                "e11bf03ba26c1133"
            ]
        ]
    },
    {
        "id": "e11bf03ba26c1133",
        "type": "function",
        "z": "fe9ad1fa376c5db1",
        "name": "SQLiteBitProduccionDepuration",
        "func": "msg[\"topic\"] = `DELETE FROM AswLite_BitProduccion\nWHERE ClaEstatusReplica = 2 AND FechaUltimaMod <= date('now','-30 day');`;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 1080,
        "wires": [
            [
                "baa90e7fcb600199"
            ]
        ]
    },
    {
        "id": "baa90e7fcb600199",
        "type": "sqlite",
        "z": "fe9ad1fa376c5db1",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 610,
        "y": 1080,
        "wires": [
            []
        ]
    },
    {
        "id": "b4d06160464c5a10",
        "type": "inject",
        "z": "fe9ad1fa376c5db1",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 07 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 150,
        "y": 1200,
        "wires": [
            [
                "9838536c0b530ef7"
            ]
        ]
    },
    {
        "id": "9838536c0b530ef7",
        "type": "function",
        "z": "fe9ad1fa376c5db1",
        "name": "SQLiteBitBajaEficienciaDepuration",
        "func": "msg[\"topic\"] = `DELETE FROM ASWLite_BitBajaEficiencia\nWHERE ClaEstatusReplica = 2 AND FechaUltimaMod <= date('now','-30 day');`;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 1200,
        "wires": [
            [
                "adcbace5289e1462"
            ]
        ]
    },
    {
        "id": "adcbace5289e1462",
        "type": "sqlite",
        "z": "fe9ad1fa376c5db1",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 610,
        "y": 1200,
        "wires": [
            []
        ]
    },
    {
        "id": "25705f6ffb748a69",
        "type": "inject",
        "z": "fe9ad1fa376c5db1",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 07 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 150,
        "y": 1320,
        "wires": [
            [
                "3d10d0ff45a2e147"
            ]
        ]
    },
    {
        "id": "3d10d0ff45a2e147",
        "type": "function",
        "z": "fe9ad1fa376c5db1",
        "name": "SQLiteBitAndonDepuration",
        "func": "msg[\"topic\"] = `DELETE FROM AswLite_BitAndon\nWHERE ClaEstatusReplica = 2 AND FechaUltimaMod <= date('now','-30 day');`;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 1320,
        "wires": [
            [
                "b932820d56812424"
            ]
        ]
    },
    {
        "id": "b932820d56812424",
        "type": "sqlite",
        "z": "fe9ad1fa376c5db1",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 590,
        "y": 1320,
        "wires": [
            []
        ]
    },
    {
        "id": "16f39df456e9307a",
        "type": "inject",
        "z": "fe9ad1fa376c5db1",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 12 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 150,
        "y": 1440,
        "wires": [
            [
                "51681d2a9e897efb"
            ]
        ]
    },
    {
        "id": "51681d2a9e897efb",
        "type": "function",
        "z": "fe9ad1fa376c5db1",
        "name": "SQLiteMtoTraReporteFallaDepuration",
        "func": "msg[\"topic\"] = `DELETE FROM ASWLite_MtoTraReporteFalla\nWHERE ClaEstatusReplica = 2 AND FechaUltimaMod <= date('now','-30 day');`;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 1440,
        "wires": [
            [
                "d486b81a6f4d075f"
            ]
        ]
    },
    {
        "id": "d486b81a6f4d075f",
        "type": "sqlite",
        "z": "fe9ad1fa376c5db1",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 610,
        "y": 1440,
        "wires": [
            []
        ]
    },
    {
        "id": "d586e1b9a69df916",
        "type": "inject",
        "z": "fe9ad1fa376c5db1",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 07 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 150,
        "y": 1560,
        "wires": [
            [
                "face3d36e4fe99d8"
            ]
        ]
    },
    {
        "id": "face3d36e4fe99d8",
        "type": "function",
        "z": "fe9ad1fa376c5db1",
        "name": "SQLiteMtoTraOTActividadDepuration",
        "func": "msg[\"topic\"] = `DELETE FROM ASWLite_MtoTraOTActividad\nWHERE ClaEstatusReplica = 2 AND FechaUltimaMod <= date('now','-30 day');`;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 1560,
        "wires": [
            [
                "d1ba58453addee5b"
            ]
        ]
    },
    {
        "id": "d1ba58453addee5b",
        "type": "sqlite",
        "z": "fe9ad1fa376c5db1",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 610,
        "y": 1560,
        "wires": [
            []
        ]
    },
    {
        "id": "001fa2bd61e22303",
        "type": "inject",
        "z": "fe9ad1fa376c5db1",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 07 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 150,
        "y": 1680,
        "wires": [
            [
                "9210a8f69546412e"
            ]
        ]
    },
    {
        "id": "9210a8f69546412e",
        "type": "function",
        "z": "fe9ad1fa376c5db1",
        "name": "SQLiteMtoTraOTActividadVariableDepuration",
        "func": "msg[\"topic\"] = `DELETE FROM ASWLite_MtoTraOTActividadVariable\nWHERE ClaEstatusReplica = 2 AND FechaUltimaMod <= date('now','-30 day');`;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 1680,
        "wires": [
            [
                "fb9511b8ed871455"
            ]
        ]
    },
    {
        "id": "fb9511b8ed871455",
        "type": "sqlite",
        "z": "fe9ad1fa376c5db1",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 650,
        "y": 1680,
        "wires": [
            []
        ]
    },
    {
        "id": "abcdc62e2109e282",
        "type": "inject",
        "z": "fe9ad1fa376c5db1",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 07 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 150,
        "y": 1800,
        "wires": [
            [
                "f314796a986a696b"
            ]
        ]
    },
    {
        "id": "f314796a986a696b",
        "type": "function",
        "z": "fe9ad1fa376c5db1",
        "name": "SQLiteMtoTraOTActividadPasoDepuration",
        "func": "msg[\"topic\"] = `DELETE FROM ASWLite_MtoTraOTActividadPaso\nWHERE ClaEstatusReplica = 2 AND FechaUltimaMod <= date('now','-30 day');`;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 1800,
        "wires": [
            [
                "c23d93cf2cd1d950"
            ]
        ]
    },
    {
        "id": "c23d93cf2cd1d950",
        "type": "sqlite",
        "z": "fe9ad1fa376c5db1",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 650,
        "y": 1800,
        "wires": [
            []
        ]
    },
    {
        "id": "72e41e914d6cb89c",
        "type": "inject",
        "z": "fe9ad1fa376c5db1",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 07 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 130,
        "y": 1920,
        "wires": [
            [
                "975bb5f8094b72cf"
            ]
        ]
    },
    {
        "id": "975bb5f8094b72cf",
        "type": "function",
        "z": "fe9ad1fa376c5db1",
        "name": "SQLiteMtoTraOTDepuration",
        "func": "msg[\"topic\"] = `DELETE FROM ASWLite_MtoTraOT\nWHERE ClaEstatusReplica = 2 AND FechaUltimaMod <= date('now','-30 day');`;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 1920,
        "wires": [
            [
                "685414b8ed521e4a"
            ]
        ]
    },
    {
        "id": "685414b8ed521e4a",
        "type": "sqlite",
        "z": "fe9ad1fa376c5db1",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 590,
        "y": 1920,
        "wires": [
            []
        ]
    },
    {
        "id": "587b035b37b3bfcf",
        "type": "inject",
        "z": "fe9ad1fa376c5db1",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 07 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 130,
        "y": 2000,
        "wires": [
            [
                "555152444391493d"
            ]
        ]
    },
    {
        "id": "555152444391493d",
        "type": "function",
        "z": "fe9ad1fa376c5db1",
        "name": "SQLiteTraGraficaVelocidadDepuration",
        "func": "msg[\"topic\"] = `DELETE FROM AswLite_TraGraficaVelocidad\nWHERE FechaUltimaMod <= date('now','-2 day');`;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 2000,
        "wires": [
            [
                "5c7dec3563d3398b"
            ]
        ]
    },
    {
        "id": "5c7dec3563d3398b",
        "type": "sqlite",
        "z": "fe9ad1fa376c5db1",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 590,
        "y": 2000,
        "wires": [
            []
        ]
    },
    {
        "id": "abc266f024073c46",
        "type": "inject",
        "z": "fe9ad1fa376c5db1",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 07 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 130,
        "y": 2080,
        "wires": [
            [
                "3ae13e5eeefadb62"
            ]
        ]
    },
    {
        "id": "3ae13e5eeefadb62",
        "type": "function",
        "z": "fe9ad1fa376c5db1",
        "name": "SQLiteTraGraficaProduccionDepuration",
        "func": "msg[\"topic\"] = `DELETE FROM ASWLite_TraGraficaProduccion\nWHERE FechaUltimaMod <= date('now','-2 day');`;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 2080,
        "wires": [
            [
                "4f59e2386112136e"
            ]
        ]
    },
    {
        "id": "4f59e2386112136e",
        "type": "sqlite",
        "z": "fe9ad1fa376c5db1",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 630,
        "y": 2080,
        "wires": [
            [
                "afba354f4f23ded4"
            ]
        ]
    },
    {
        "id": "c6dd6797337e63c2",
        "type": "inject",
        "z": "fe9ad1fa376c5db1",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 320,
        "y": 2160,
        "wires": [
            [
                "5b5f8392bf6472fd"
            ]
        ]
    },
    {
        "id": "1a9ed82267f7a512",
        "type": "inject",
        "z": "fe9ad1fa376c5db1",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 310,
        "y": 2260,
        "wires": [
            [
                "e05dc60d47c8ff56"
            ]
        ]
    },
    {
        "id": "e05dc60d47c8ff56",
        "type": "function",
        "z": "fe9ad1fa376c5db1",
        "name": "",
        "func": "msg.topic = `select * from AswLite_CatFolioBitacora`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 2260,
        "wires": [
            [
                "4f59e2386112136e"
            ]
        ]
    },
    {
        "id": "5b5f8392bf6472fd",
        "type": "function",
        "z": "fe9ad1fa376c5db1",
        "name": "",
        "func": "msg.topic = `CREATE TABLE AswLite_CatFolioBitacora (\n    ClaveFolioBitacora VARCHAR (25) NOT NULL,\n    IdCelda            INT          NOT NULL,\n    Folio              INT,\n    BajaLogica         TINYINT,\n    FechaBajaLogica    DATETIME,\n    NombrePcMod        VARCHAR (64),\n    FechaUltimaMod     DATETIME,\n    PRIMARY KEY (\n        ClaveFolioBitacora,\n        IdCelda\n    )\n);\n`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 2160,
        "wires": [
            [
                "4f59e2386112136e"
            ]
        ]
    },
    {
        "id": "afba354f4f23ded4",
        "type": "debug",
        "z": "fe9ad1fa376c5db1",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 750,
        "y": 2200,
        "wires": []
    },
    {
        "id": "af977ff91eafb844",
        "type": "catch",
        "z": "fe9ad1fa376c5db1",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 100,
        "y": 2480,
        "wires": [
            [
                "530a9719be0e7ff8"
            ]
        ]
    },
    {
        "id": "530a9719be0e7ff8",
        "type": "function",
        "z": "fe9ad1fa376c5db1",
        "name": "Error Handler",
        "func": "node.warn(`ERROR NO CONTROLADO >  ${env.get(\"NAME\")} > ${JSON.stringify(msg)}`)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 2480,
        "wires": [
            []
        ]
    },
    {
        "id": "d1254521.10d488",
        "type": "inject",
        "z": "12e72f71.814db1",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "3600",
        "crontab": "",
        "once": true,
        "onceDelay": "10",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 110,
        "y": 40,
        "wires": [
            [
                "fd6c9697.f462e8"
            ]
        ]
    },
    {
        "id": "b09aeba9.b57168",
        "type": "function",
        "z": "12e72f71.814db1",
        "name": "setOrdenesLocales",
        "func": "//guardamos las ordenes locales en el msg\nmsg.OrdenesLocales = msg.payload\n\n//obtenemos ultima fecha mod de las ordenes locales\nFechaUltimaModLocal = (msg.OrdenesLocales.length > 0) ? msg.OrdenesLocales[0].FechaUltimaMod : null;\n\n\n//preparamos qry para ordenes remotas\nlet params = { PnCelda: global.get(\"celda\"), PdFechaUltimaModTablet: FechaUltimaModLocal };\nmsg.payload = { sp_name: 'AswSch.ASW_CU151_Pag1_OrdenesProduccionXML_Sel', params: params }\n\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 100,
        "wires": [
            [
                "39ae944.5e1bf6c"
            ]
        ]
    },
    {
        "id": "fd6c9697.f462e8",
        "type": "function",
        "z": "12e72f71.814db1",
        "name": "FnVariables",
        "func": "msg.OrdenesLocales = [];\nmsg.OrdenesRemotas = [];\nmsg.OrdenesTratar = [];\nmsg.OrdenActual;\nmsg.IdOrdenesTerminadas = [];\nmsg.IdOrdenesLocales = [];\nmsg.OrdenesInsertar = [];\nmsg.OrdenesActualizar = [];\nmsg.FechaUltimaModLocal;\nmsg.ArrArticulos = [];\nmsg.ArrCaracteristicas = [];\nmsg.ArrComposicion = [];\n\nmsg.quitaRepetidos =  function (arr)  {\n        let nuevo = arr\n            .map(e => e[\"llave\"])\n            .map((e, i, final) => final.indexOf(e) === i && i)\n            .filter(e => arr[e]).map(e => { return arr[e]; })\n            .map(e => { delete e.llave; return e });\n        return nuevo;\n}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 130,
        "y": 100,
        "wires": [
            [
                "be9ab38afb2348e5"
            ]
        ]
    },
    {
        "id": "39ae944.5e1bf6c",
        "type": "subflow:6271978d.4d6ac8",
        "z": "12e72f71.814db1",
        "name": "",
        "env": [],
        "x": 850,
        "y": 100,
        "wires": [
            [
                "83194f6e.ec25a"
            ]
        ]
    },
    {
        "id": "83194f6e.ec25a",
        "type": "MSSQL",
        "z": "12e72f71.814db1",
        "mssqlCN": "955d262e.b17988",
        "name": "ASWMSSQL",
        "outField": "payload",
        "returnType": "0",
        "throwErrors": "1",
        "query": "",
        "modeOpt": "",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "msg",
        "paramsOpt": "queryParams",
        "paramsOptType": "msg",
        "params": [],
        "x": 1030,
        "y": 100,
        "wires": [
            [
                "7bf7a034.3eb9f",
                "e26b501d132ce7f5"
            ]
        ]
    },
    {
        "id": "7bf7a034.3eb9f",
        "type": "function",
        "z": "12e72f71.814db1",
        "name": "extraerXmlString",
        "func": "msg.payload=msg.payload[0].xml\n\nif(msg.payload === null){\n    return [null, msg];\n}\nreturn msg;",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1210,
        "y": 100,
        "wires": [
            [
                "92d67a89.419d28",
                "476d108639afee9d"
            ],
            [
                "dc839cef.e7c9a"
            ]
        ]
    },
    {
        "id": "92d67a89.419d28",
        "type": "xml",
        "z": "12e72f71.814db1",
        "name": "",
        "property": "payload",
        "attr": "att",
        "chr": "",
        "x": 1390,
        "y": 80,
        "wires": [
            [
                "be4572a5.79aae"
            ]
        ]
    },
    {
        "id": "be4572a5.79aae",
        "type": "function",
        "z": "12e72f71.814db1",
        "name": "setOrdenesRemotas",
        "func": " let DataSource = procesarRespuesta(msg.payload)\n \n msg.OrdenesRemotas = DataSource.Ordenes;\n msg.ArrArticulos = DataSource.Articulos;\n msg.ArrCaracteristicas = DataSource.Caracteristicas;\n msg.ArrComposicion = DataSource.Composicion;\n \n \n function procesarRespuesta(ArrDataSource)  {\n        let Ordenes = [];\n        let Articulos = [];\n        let Caracteristicas = [];\n        let Composicion = [];\n        ArrDataSource = (!Array.isArray(ArrDataSource)) ? ArrDataSource.OrdenesProduccion.ASWTraOrdenProduccion : null;\n\n        if (!ArrDataSource) {\n            return null\n        }\n\n        Ordenes = ArrDataSource.map(orden => { return orden.att });\n\n        Ordenes = Ordenes.map(orden => { orden.IdPO = parseInt(orden.IdPO); return orden });\n        Articulos = ArrDataSource.map(orden => {\n            //CREA UN ARREGLO CON EL REGISTRO DE DE CatArticulo CORRESPONDIENTE\n            let auxArr = []\n            let idPO = orden.att.IdPO //EXTRAIGO EL ID DE LA ORDEN DE PRODUCCION \n            auxArr.push(idPO) //AGREGO EL ID DE LA OP POR QUE POSTERIOR MENTE SE FILTRARAN CON LAS ORDENES A INSERTAR\n            auxArr.push(orden.AswCatArticuloGeneral[0].att)\n            return auxArr;\n\n        });\n\n        //PROCESAR LAS CARACTERISTICAS DEL ARTICULO \n        let arrCaracteristicas = [] //ARREGLO AUXILIAR PARA EXTRAER LAS CARACTERISTICAS\n\n        Caracteristicas = ArrDataSource.map(orden => { return orden.AswCatArticuloGeneral[0].AswCatArticuloCaracteristicas });\n        Caracteristicas = Caracteristicas.map(caracteristicas => { return caracteristicas.map(x => x.att) })\n        Caracteristicas.forEach(articulo => {\n            articulo.forEach(feature => {\n                feature[\"llave\"] = `${feature[\"ClaArticulo\"]}${feature[\"ClaCaracteristica\"]}`;\n                arrCaracteristicas.push(feature)\n            });\n        })\n\n        Caracteristicas = arrCaracteristicas;\n\n        Caracteristicas = msg.quitaRepetidos(Caracteristicas)\n\n        //PROCESAR LA COMPOSICION DEL ARTICULO \n        let arrComposicion = [] //ARREGLO AUXILIAR PARA EXTRAER LAS CARACTERISTICAS\n\n        Composicion = ArrDataSource.map(orden => { return orden.AswCatArticuloComposicion });\n        Composicion = Composicion.map(composicion => { return composicion.map(x => x.att) });\n        Composicion.forEach(articulo => {\n            articulo.forEach(feature => {\n                feature[\"llave\"] = `${feature[\"ClaArticulo\"]}${feature[\"ClaMateriaPrima\"]}`;\n                arrComposicion.push(feature)\n            });\n        })\n\n        Composicion = arrComposicion;\n    \n        Composicion = msg.quitaRepetidos(Composicion)\n        \n        return { Ordenes, Articulos, Caracteristicas, Composicion }\n}\n    \n\n\n \n \n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1560,
        "y": 80,
        "wires": [
            [
                "4d1be66a.79f7d8"
            ]
        ]
    },
    {
        "id": "4d1be66a.79f7d8",
        "type": "link out",
        "z": "12e72f71.814db1",
        "name": "",
        "links": [
            "fd67ecd5.5dff5"
        ],
        "x": 1715,
        "y": 80,
        "wires": []
    },
    {
        "id": "fd67ecd5.5dff5",
        "type": "link in",
        "z": "12e72f71.814db1",
        "name": "",
        "links": [
            "4d1be66a.79f7d8"
        ],
        "x": 35,
        "y": 180,
        "wires": [
            [
                "f97fdff0.72d8e"
            ]
        ]
    },
    {
        "id": "f97fdff0.72d8e",
        "type": "function",
        "z": "12e72f71.814db1",
        "name": "setOrdenesInsertar",
        "func": "\n//SI NO HAY ORDENES LOCALES INSERTAR ORDENES REMOTAS \nif (msg.OrdenesLocales.length === 0) {\n    msg.OrdenesInsertar = msg.OrdenesRemotas;\n} \nelse if (msg.OrdenesRemotas.length > 0) {\n    //ARREGLO SOLO IDS DE ORDENES LOCALES\n    \n    IdOrdenesLocales = msg.OrdenesLocales.map(ordenLocal => ordenLocal.IdPO);\n    //OBTENGO ORDEN LOCAL EN PROCESO\n    OrdenActual = msg.OrdenesLocales.filter(ordenLocal => ordenLocal.ClaEstatus == 2);\n    /*\n     * 1.- QUITAMOS LA ORDEN ACTUAL (ClaEstatus = 2) DE LAS ORDENES REMOTAS\n     */\n    if (OrdenActual.length > 0) {\n        OrdenesTratar = msg.OrdenesRemotas.filter(ordenRemota => ordenRemota.IdPO != OrdenActual[0].IdPO);\n    } else {\n        OrdenesTratar = msg.OrdenesRemotas\n\n    }\n    /*\n     * 2.- QUITAMOS LAS ORDENES TERMINADAS LOCALMENTE (ClaEstatus=3)\n     */\n    IdOrdenesTerminadas = msg.OrdenesLocales.filter(ordenLocal => ordenLocal.ClaEstatus == 3)\n        .map(OrdenTerminada => OrdenTerminada.IdPO);\n\n    if (IdOrdenesTerminadas.length > 0) {\n        OrdenesTratar = OrdenesTratar.filter(ordenRemota => IdOrdenesTerminadas.indexOf(ordenRemota.IdPO) == -1);\n    }\n\n    msg.OrdenesInsertar = OrdenesTratar.filter(ordenTratar => IdOrdenesLocales.indexOf(ordenTratar.IdPO) == -1);\n\n    msg.OrdenesActualizar = OrdenesTratar.filter(ordenTratar => IdOrdenesLocales.indexOf(ordenTratar.IdPO) != -1);\n\n}\n\nif(msg.OrdenesInsertar.length > 0 ){\n    msg.ArrArticulos = getArticulosInsertar(msg.ArrArticulos, msg.OrdenesInsertar);\n    msg.ArrCaracteristicas = getCaracteristicasInsertar(msg.ArrCaracteristicas, msg.OrdenesInsertar);\n    msg.ArrComposicion = getComposicionInsertar(msg.ArrComposicion, msg.OrdenesInsertar);\n    \n    //AGREGAR ESTATUS REPLICA\n    msg.OrdenesInsertar.forEach(orden => {\n        orden.ClaEstatusReplica = 1\n    })\n}\n\nreturn msg;\n\n\n/**\n * DEVUELVE UN ARREGLO CON SOLO LOS ARTICULOS DE LAS ORDENES A INSERTAR\n * @param {Array} arrArticulos \n * @param {Array} ordenesInsertar \n */\nfunction getArticulosInsertar(arrArticulos, ordenesInsertar) {\n\n    let idOrdenesInsertar = ordenesInsertar.map(orden => orden.IdPO);\n    arrArticulos = arrArticulos.filter(articulo => idOrdenesInsertar.indexOf(articulo[0]) != -1)\n        .map(articulo => { articulo[1][\"llave\"] = articulo[1][\"ClaArticulo\"]; return articulo[1] });\n    arrArticulos = msg.quitaRepetidos(arrArticulos);\n    return arrArticulos;\n}\n\n/**\n * DEVUELVE UN ARREGLO CON LAS CARACTERISTICAS DE LOS ARTICULOS A INSERTAR\n * @param {array} arrCaracteristicas \n * @param {array} articulosInsertar \n */\nfunction getCaracteristicasInsertar(arrCaracteristicas, articulosInsertar) {\n    let claArtInsertar = articulosInsertar.map(articulo => articulo.ClaArticulo);\n    arrCaracteristicas = arrCaracteristicas.filter(caracteristica => claArtInsertar.indexOf(caracteristica.ClaArticulo) != -1)\n    return arrCaracteristicas\n}\n\n/**\n * DEVUELVE UN ARREGLO CON LA COMPOSICION DE LOS ARTICULOS A INSERTAR\n * @param {array} arrComposicion \n * @param {array} articulosInsertar \n */\nfunction getComposicionInsertar(arrComposicion, articulosInsertar) {\n    let claArtInsertar = articulosInsertar.map(articulo => articulo.ClaArticulo);\n    arrComposicion = arrComposicion.filter(caracteristica => claArtInsertar.indexOf(caracteristica.ClaArticulo) != -1)\n    return arrComposicion\n}\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 170,
        "y": 180,
        "wires": [
            [
                "1f133356.14873d",
                "9074ad68.770a8"
            ]
        ]
    },
    {
        "id": "858a132d.9fe42",
        "type": "subflow:1ae9450.7021cbb",
        "z": "12e72f71.814db1",
        "name": "",
        "env": [],
        "x": 1110,
        "y": 180,
        "wires": [
            [
                "7c999809.6465f8"
            ]
        ]
    },
    {
        "id": "7c999809.6465f8",
        "type": "sqlite",
        "z": "12e72f71.814db1",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 1290,
        "y": 180,
        "wires": [
            [
                "930ada1b.109008"
            ]
        ]
    },
    {
        "id": "86b1a8a9.dce618",
        "type": "change",
        "z": "12e72f71.814db1",
        "name": "OrdenesInsertarPayload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "OrdenesInsertar",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 590,
        "y": 180,
        "wires": [
            [
                "9ca1afe7.ab824"
            ]
        ]
    },
    {
        "id": "9ca1afe7.ab824",
        "type": "split",
        "z": "12e72f71.814db1",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 830,
        "y": 180,
        "wires": [
            [
                "33e85e0d.e1bc72"
            ]
        ]
    },
    {
        "id": "33e85e0d.e1bc72",
        "type": "function",
        "z": "12e72f71.814db1",
        "name": "FnFormat",
        "func": "msg.payload = [msg.payload]\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 180,
        "wires": [
            [
                "858a132d.9fe42"
            ]
        ]
    },
    {
        "id": "930ada1b.109008",
        "type": "join",
        "z": "12e72f71.814db1",
        "name": "",
        "mode": "auto",
        "build": "string",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": "false",
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "x": 1420,
        "y": 180,
        "wires": [
            [
                "689f3c52.a7ecf4",
                "dc839cef.e7c9a"
            ]
        ]
    },
    {
        "id": "689f3c52.a7ecf4",
        "type": "link out",
        "z": "12e72f71.814db1",
        "name": "",
        "links": [
            "dd8957c0.a83838"
        ],
        "x": 1575,
        "y": 160,
        "wires": []
    },
    {
        "id": "dd8957c0.a83838",
        "type": "link in",
        "z": "12e72f71.814db1",
        "name": "",
        "links": [
            "689f3c52.a7ecf4"
        ],
        "x": 35,
        "y": 360,
        "wires": [
            [
                "b5c20ee5.bba05"
            ]
        ]
    },
    {
        "id": "b5c20ee5.bba05",
        "type": "change",
        "z": "12e72f71.814db1",
        "name": "arrArticulosPayload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "ArrArticulos",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 170,
        "y": 360,
        "wires": [
            [
                "99f17560.c4fae8"
            ]
        ]
    },
    {
        "id": "99f17560.c4fae8",
        "type": "split",
        "z": "12e72f71.814db1",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 330,
        "y": 360,
        "wires": [
            [
                "a0c7ec4d.1997c"
            ]
        ]
    },
    {
        "id": "a0c7ec4d.1997c",
        "type": "function",
        "z": "12e72f71.814db1",
        "name": "FnFormat",
        "func": "msg.Insert = [msg.payload]\nmsg.topic =`SELECT COUNT(1) AS 'EXISTE' FROM ASWLite_CatArticuloGeneral WHERE ClaArticulo=${msg.Insert[0].ClaArticulo};`;\n//0 FALSE\n//1 TRUE\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 360,
        "wires": [
            [
                "da27768114f1bc9b"
            ]
        ]
    },
    {
        "id": "3751861d.96b57a",
        "type": "subflow:1ae9450.7021cbb",
        "z": "12e72f71.814db1",
        "name": "",
        "env": [],
        "x": 1270,
        "y": 280,
        "wires": [
            [
                "c69f18a2.4bd348"
            ]
        ]
    },
    {
        "id": "c69f18a2.4bd348",
        "type": "sqlite",
        "z": "12e72f71.814db1",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 1430,
        "y": 280,
        "wires": [
            [
                "d5aada0c.90f278"
            ]
        ]
    },
    {
        "id": "d5aada0c.90f278",
        "type": "join",
        "z": "12e72f71.814db1",
        "name": "",
        "mode": "auto",
        "build": "string",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": "false",
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "x": 1590,
        "y": 280,
        "wires": [
            [
                "274d3abd.ca49a6"
            ]
        ]
    },
    {
        "id": "e2b7e044.54c7e",
        "type": "comment",
        "z": "12e72f71.814db1",
        "name": "Insetamos articulos, caracteristicas y composiciones",
        "info": "",
        "x": 210,
        "y": 320,
        "wires": []
    },
    {
        "id": "274d3abd.ca49a6",
        "type": "change",
        "z": "12e72f71.814db1",
        "name": "ArrCaracteristicasPayload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "ArrCaracteristicas",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1830,
        "y": 280,
        "wires": [
            [
                "7e31f37d.6ad2ac"
            ]
        ]
    },
    {
        "id": "7e31f37d.6ad2ac",
        "type": "split",
        "z": "12e72f71.814db1",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1250,
        "y": 360,
        "wires": [
            [
                "72180a57.57c654"
            ]
        ]
    },
    {
        "id": "72180a57.57c654",
        "type": "function",
        "z": "12e72f71.814db1",
        "name": "FnFormat",
        "func": "msg.payload = [msg.payload]\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1380,
        "y": 360,
        "wires": [
            [
                "c1025b9a.964718"
            ]
        ]
    },
    {
        "id": "c1025b9a.964718",
        "type": "subflow:1ae9450.7021cbb",
        "z": "12e72f71.814db1",
        "name": "",
        "env": [],
        "x": 1530,
        "y": 360,
        "wires": [
            [
                "ce8594fb.70b378"
            ]
        ]
    },
    {
        "id": "ce8594fb.70b378",
        "type": "sqlite",
        "z": "12e72f71.814db1",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 1670,
        "y": 360,
        "wires": [
            [
                "56706ac1.769d64"
            ]
        ]
    },
    {
        "id": "56706ac1.769d64",
        "type": "join",
        "z": "12e72f71.814db1",
        "name": "",
        "mode": "auto",
        "build": "string",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": "false",
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "x": 1790,
        "y": 360,
        "wires": [
            [
                "352dbc86.58d3c4"
            ]
        ]
    },
    {
        "id": "352dbc86.58d3c4",
        "type": "change",
        "z": "12e72f71.814db1",
        "name": "ArrComposicionPayload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "ArrComposicion",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1970,
        "y": 360,
        "wires": [
            [
                "f759a1cb.5a91e"
            ]
        ]
    },
    {
        "id": "f759a1cb.5a91e",
        "type": "split",
        "z": "12e72f71.814db1",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 2150,
        "y": 360,
        "wires": [
            [
                "2cde27c7.b34038"
            ]
        ]
    },
    {
        "id": "2cde27c7.b34038",
        "type": "function",
        "z": "12e72f71.814db1",
        "name": "FnFormat",
        "func": "msg.payload = [msg.payload]\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 2280,
        "y": 360,
        "wires": [
            [
                "914aa496.0953f8"
            ]
        ]
    },
    {
        "id": "914aa496.0953f8",
        "type": "subflow:1ae9450.7021cbb",
        "z": "12e72f71.814db1",
        "name": "",
        "env": [],
        "x": 2430,
        "y": 360,
        "wires": [
            [
                "b2482620.07af18"
            ]
        ]
    },
    {
        "id": "b2482620.07af18",
        "type": "sqlite",
        "z": "12e72f71.814db1",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 2570,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "1f133356.14873d",
        "type": "switch",
        "z": "12e72f71.814db1",
        "name": "OrdenesInsertar",
        "property": "OrdenesInsertar",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 360,
        "y": 180,
        "wires": [
            [
                "86b1a8a9.dce618"
            ]
        ]
    },
    {
        "id": "b0e8ad5e.233d",
        "type": "change",
        "z": "12e72f71.814db1",
        "name": "OrdenesActualizarPayload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "OrdenesActualizar",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 600,
        "y": 240,
        "wires": [
            [
                "4ba5ce0b.a7f2a"
            ]
        ]
    },
    {
        "id": "9074ad68.770a8",
        "type": "switch",
        "z": "12e72f71.814db1",
        "name": "OrdenesActualizar",
        "property": "OrdenesActualizar",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 370,
        "y": 240,
        "wires": [
            [
                "b0e8ad5e.233d"
            ]
        ]
    },
    {
        "id": "4ba5ce0b.a7f2a",
        "type": "split",
        "z": "12e72f71.814db1",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 801,
        "y": 240,
        "wires": [
            [
                "c16d135a.0ed79"
            ]
        ]
    },
    {
        "id": "c16d135a.0ed79",
        "type": "function",
        "z": "12e72f71.814db1",
        "name": "FnFormat",
        "func": "msg.payload = [msg.payload]\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 951,
        "y": 240,
        "wires": [
            [
                "20a50258.63192e"
            ]
        ]
    },
    {
        "id": "20a50258.63192e",
        "type": "function",
        "z": "12e72f71.814db1",
        "name": "fnParseUpdate",
        "func": "let Datos = msg.payload //[{\"nombretabla\":\"ASWLite_TraOrdenProduccion\",\"ClaUbicacion\":\"68\",\"IdPO\":3,\"IdCelda\":\"1\",\"ClaArticulo\":\"611645\",\"ClaveArticulo\":\"611645\",\"Orden\":\"3\",\"ClaEstatus\":\"1\",\"BajaLogica\":\"0\",\"ClaUsuarioMod\":\"0\",\"NombrePcMod\":\"302NGALAZ\",\"FechaUltimaMod\":\"2020-03-05T01:43:57.713\"}]\nDatos = Datos[0];\nlet NombreTabla = Datos.nombretabla;\nlet CteStr = 'WITH CteTmp (';\nlet CteSelectStr = 'AS ( SELECT '\nlet UpdateStr = `UPDATE ${NombreTabla} SET `;\nlet CamposUpdateStr = '';\nlet WhereUpdateStr = ''\nlet QryFinal = '';\n//LISTA DE CAMPOS DE LA CTE\nObject.keys(Datos).forEach((key,idx) => {\n    if(key != 'nombretabla'){\n        CteStr += key,idx;\n        CteStr += (idx != (Object.keys(Datos).length -1) ) ? ',':') ';\n        CteSelectStr += (typeof(Datos[key]) == 'string') ? `'${Datos[key]}'` : `${Datos[key]}`;\n        CteSelectStr += (idx != (Object.keys(Datos).length -1) ) ? ',':') ';\n    }\n});\n\n//COMPLETAMOS STRING PARA CREAR CTE\nCteStr += CteSelectStr;\n\nObject.keys(Datos).forEach((key,idx) => {\n    let campo = key;\n    let valor = (typeof(Datos[key]) == 'string') ? `'${Datos[key]}'` : Datos[key];\n    if(campo != 'nombretabla'){\n        CamposUpdateStr += `${key} = (SELECT ${campo} FROM CteTmp WHERE IdPO = ${Datos[\"IdPO\"]})`\n        CamposUpdateStr += (idx != (Object.keys(Datos).length -1) ) ? ',':' ';\n    }\n    \n})\n//AGREGAMOS CLAUSULA WHERE AL UPDATE\nWhereUpdateStr = ` WHERE IdPO = ${Datos[\"IdPO\"]} `\n\n//COMPLETAR UPDATE\nUpdateStr += CamposUpdateStr + WhereUpdateStr;\n\n//COMPLETAR QUERY\nQryFinal = CteStr+UpdateStr;\n\n\n//msg.payload={NombreTabla,CteStr,CteSelectStr,CamposUpdateStr,WhereUpdateStr,UpdateStr}\nmsg.topic=QryFinal;\nreturn msg;\n\n\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1131,
        "y": 240,
        "wires": [
            [
                "9c729bd0.65eff8"
            ]
        ],
        "info": "CREA EL UPDATE A EJECUTAR PARA ACTUALIZAR ORDENES DE TRABAJO\n *    ** SOLO PROCESA UN REGISTRO**"
    },
    {
        "id": "9c729bd0.65eff8",
        "type": "sqlite",
        "z": "12e72f71.814db1",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 1290,
        "y": 240,
        "wires": [
            [
                "76823c3c.342ce4"
            ]
        ]
    },
    {
        "id": "c11a9eed.7251c",
        "type": "http request",
        "z": "12e72f71.814db1",
        "name": "CurrentProductionOrder",
        "method": "GET",
        "ret": "txt",
        "paytoqs": false,
        "url": "http://localhost:18800/sqlite/CU151_Pag1_CurrentProductionOrder_Sel",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 210,
        "y": 700,
        "wires": [
            [
                "590f284f.506b38"
            ]
        ]
    },
    {
        "id": "590f284f.506b38",
        "type": "function",
        "z": "12e72f71.814db1",
        "name": "FnActivarOrden",
        "func": "let res = JSON.parse(msg.payload)\n\nlet datos = {};\ndatos[\"nombretabla\"] = 'ASWLite_TraOrdenProduccion'\nObject.keys(res[0]).forEach((key) => {\n    datos[`${key}`] = res[0][`${key}`]\n});\ndelete datos.NomArticulo\ndatos.ClaEstatus = 2;\ndatos.ClaEstatusReplica = 1;\n\nif (datos.hasOwnProperty('FechaInicioReal') && (!datos['FechaInicioReal'] || datos['FechaInicioReal'].slice(0, 4) == '1900' )) {\n    datos['FechaInicioReal'] = 'current';\n}\n\nmsg.payload = [datos]\n\nif (res[0].ClaEstatus == 1 || res[0].ClaEstatus == 5) {\n   return [msg,null];\n}\nif (res[0].ClaEstatus == 2) {\n    return [null,msg];\n}\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 700,
        "wires": [
            [
                "c5dcdf48.f5b0c"
            ],
            [
                "9cf5df064ebbaf7f"
            ]
        ]
    },
    {
        "id": "76823c3c.342ce4",
        "type": "join",
        "z": "12e72f71.814db1",
        "name": "",
        "mode": "auto",
        "build": "string",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": "false",
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "x": 1430,
        "y": 240,
        "wires": [
            [
                "dc839cef.e7c9a"
            ]
        ]
    },
    {
        "id": "c5dcdf48.f5b0c",
        "type": "function",
        "z": "12e72f71.814db1",
        "name": "fnParseUpdate",
        "func": "let Datos = msg.payload //[{\"nombretabla\":\"ASWLite_TraOrdenProduccion\",\"ClaUbicacion\":\"68\",\"IdPO\":3,\"IdCelda\":\"1\",\"ClaArticulo\":\"611645\",\"ClaveArticulo\":\"611645\",\"Orden\":\"3\",\"ClaEstatus\":\"1\",\"BajaLogica\":\"0\",\"ClaUsuarioMod\":\"0\",\"NombrePcMod\":\"302NGALAZ\",\"FechaUltimaMod\":\"2020-03-05T01:43:57.713\"}]\nDatos = Datos[0];\nlet NombreTabla = Datos.nombretabla;\nlet CteStr = 'WITH CteTmp (';\nlet CteSelectStr = 'AS ( SELECT '\nlet UpdateStr = `UPDATE ${NombreTabla} SET `;\nlet CamposUpdateStr = '';\nlet WhereUpdateStr = ''\nlet QryFinal = '';\n\n//LISTA DE CAMPOS DE LA CTE\nObject.keys(Datos).forEach((key,idx) => {\n    if(key != 'nombretabla'){\n        CteStr += key,idx;\n        CteStr += (idx != (Object.keys(Datos).length -1) ) ? ',':') ';\n        if(key == 'FechaInicioReal' && Datos[key] == 'current'){\n            CteSelectStr += `datetime('now','localtime')`;\n            CteSelectStr += (idx != (Object.keys(Datos).length -1) ) ? ',':') ';\n        }else{\n        CteSelectStr += (typeof(Datos[key]) == 'string') ? `'${Datos[key]}'` : `${Datos[key]}`;\n        CteSelectStr += (idx != (Object.keys(Datos).length -1) ) ? ',':') ';\n        }\n    }\n});\n\n//COMPLETAMOS STRING PARA CREAR CTE\nCteStr += CteSelectStr;\n\nObject.keys(Datos).forEach((key,idx) => {\n    let campo = key;\n    let valor = (typeof(Datos[key]) == 'string') ? `'${Datos[key]}'` : Datos[key];\n    if(campo != 'nombretabla'){\n        CamposUpdateStr += `${key} = (SELECT ${campo} FROM CteTmp WHERE IdPO = ${Datos[\"IdPO\"]})`\n        CamposUpdateStr += (idx != (Object.keys(Datos).length -1) ) ? ',':' ';\n    }\n    \n})\n//AGREGAMOS CLAUSULA WHERE AL UPDATE\nWhereUpdateStr = ` WHERE IdPO = ${Datos[\"IdPO\"]} `\n\n//COMPLETAR UPDATE\nUpdateStr += CamposUpdateStr + WhereUpdateStr;\n\n//COMPLETAR QUERY\nQryFinal = CteStr+UpdateStr;\n\n\n//msg.payload={NombreTabla,CteStr,CteSelectStr,CamposUpdateStr,WhereUpdateStr,UpdateStr}\nmsg.topic=QryFinal;\n\nnode.info(`[CU151] - Se activa la orden ${Datos[\"IdPO\"]}`)\n\nreturn msg;\n\n\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 680,
        "wires": [
            [
                "9d2c631.b4719a"
            ]
        ],
        "info": "CREA EL UPDATE A EJECUTAR PARA ACTUALIZAR ORDENES DE TRABAJO\n *    ** SOLO PROCESA UN REGISTRO**"
    },
    {
        "id": "9d2c631.b4719a",
        "type": "sqlite",
        "z": "12e72f71.814db1",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 750,
        "y": 680,
        "wires": [
            [
                "e035b402.c44808"
            ]
        ]
    },
    {
        "id": "bfff8076.29296",
        "type": "comment",
        "z": "12e72f71.814db1",
        "name": "Si no hay una orden en estatus 2, activar la orden correspondiente",
        "info": "",
        "x": 280,
        "y": 660,
        "wires": []
    },
    {
        "id": "371fb442.545c0c",
        "type": "subflow:9d73bd39.a6086",
        "z": "12e72f71.814db1",
        "name": "",
        "env": [],
        "x": 2050,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "e035b402.c44808",
        "type": "function",
        "z": "12e72f71.814db1",
        "name": "qryBrazos",
        "func": "msg.topic = `\nSELECT ClaMaquina AS IdComponente\nFROM ASWLite_CatWorkUnit\nWHERE ClaTipoMaquina = 6\n`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 680,
        "wires": [
            [
                "77b49c98.34c884"
            ]
        ]
    },
    {
        "id": "77b49c98.34c884",
        "type": "sqlite",
        "z": "12e72f71.814db1",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 1030,
        "y": 680,
        "wires": [
            [
                "d46b2a74.14e018"
            ]
        ]
    },
    {
        "id": "d46b2a74.14e018",
        "type": "split",
        "z": "12e72f71.814db1",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1170,
        "y": 680,
        "wires": [
            [
                "39eb16f8.b9f71a"
            ]
        ]
    },
    {
        "id": "e458d501.286b88",
        "type": "inject",
        "z": "12e72f71.814db1",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1720,
        "y": 160,
        "wires": [
            [
                "dc839cef.e7c9a"
            ]
        ]
    },
    {
        "id": "39eb16f8.b9f71a",
        "type": "function",
        "z": "12e72f71.814db1",
        "name": "FnFormat",
        "func": "msg.IdComponente = msg.payload.IdComponente\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1300,
        "y": 680,
        "wires": [
            [
                "7f55577a.44c248"
            ]
        ]
    },
    {
        "id": "25883b37.e45024",
        "type": "link in",
        "z": "12e72f71.814db1",
        "name": "",
        "links": [
            "dc839cef.e7c9a"
        ],
        "x": 55,
        "y": 700,
        "wires": [
            [
                "c11a9eed.7251c"
            ]
        ]
    },
    {
        "id": "dc839cef.e7c9a",
        "type": "link out",
        "z": "12e72f71.814db1",
        "name": "",
        "links": [
            "25883b37.e45024"
        ],
        "x": 1735,
        "y": 240,
        "wires": []
    },
    {
        "id": "7f55577a.44c248",
        "type": "subflow:27a291e8.5fa3be",
        "z": "12e72f71.814db1",
        "name": "",
        "x": 1520,
        "y": 680,
        "wires": [
            [
                "69dcc13c.50d77"
            ],
            []
        ]
    },
    {
        "id": "69dcc13c.50d77",
        "type": "subflow:d3a37898.3d3278",
        "z": "12e72f71.814db1",
        "name": "",
        "x": 1810,
        "y": 680,
        "wires": [
            [
                "371fb442.545c0c"
            ]
        ]
    },
    {
        "id": "be9ab38afb2348e5",
        "type": "function",
        "z": "12e72f71.814db1",
        "name": "FnOrdenesLocalesSel",
        "func": "\nmsg.topic = `SELECT idPo,Orden,ClaEstatus,FechaUltimaMod \nFROM ASWLite_TraOrdenProduccion \nORDER BY FechaUltimaMod Desc;`\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 100,
        "wires": [
            [
                "742ca9c6da1e5a77"
            ]
        ],
        "info": "REVISAR SI HAY O NO ORDENES DE PRODUCCION EN LA RASPBERRY.\n\n - SI NO HAY SE DEBEN TRAER TODAS LAS ORDENES QUE SE REQUIEREN PRODUCIR Y SE GUARDAN SIN PROCESAR\n   \n - SI EXISTEN SE DEBEN PROCESAR PARA DETERMINAR SI EXISTEN CAMBIOS O NO"
    },
    {
        "id": "742ca9c6da1e5a77",
        "type": "sqlite",
        "z": "12e72f71.814db1",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 510,
        "y": 100,
        "wires": [
            [
                "b09aeba9.b57168"
            ]
        ]
    },
    {
        "id": "da27768114f1bc9b",
        "type": "sqlite",
        "z": "12e72f71.814db1",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 630,
        "y": 360,
        "wires": [
            [
                "39b6e3402841909a"
            ]
        ]
    },
    {
        "id": "39b6e3402841909a",
        "type": "switch",
        "z": "12e72f71.814db1",
        "name": "Existe Articulo",
        "property": "payload[0].EXISTE",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 800,
        "y": 360,
        "wires": [
            [
                "3cad4dfb439e9227"
            ],
            [
                "f07d2cbcf2ecf991",
                "3b685cb14a1679a2",
                "43f5af0d906fcbb9"
            ]
        ]
    },
    {
        "id": "3cad4dfb439e9227",
        "type": "function",
        "z": "12e72f71.814db1",
        "name": "RegresarPayload",
        "func": "msg.payload=msg.Insert;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 360,
        "wires": [
            [
                "3751861d.96b57a"
            ]
        ]
    },
    {
        "id": "0d79f84f02b54275",
        "type": "comment",
        "z": "12e72f71.814db1",
        "name": "Valida orden estaus 2",
        "info": "",
        "x": 640,
        "y": 740,
        "wires": []
    },
    {
        "id": "3437914654b49ade",
        "type": "comment",
        "z": "12e72f71.814db1",
        "name": "Activa orden estaus 1 o 5",
        "info": "",
        "x": 640,
        "y": 640,
        "wires": []
    },
    {
        "id": "863c938b1589f33b",
        "type": "comment",
        "z": "12e72f71.814db1",
        "name": "Si no hay datos nuevos termina el flujo y continua con la orden actual",
        "info": "",
        "x": 1380,
        "y": 40,
        "wires": []
    },
    {
        "id": "9cf5df064ebbaf7f",
        "type": "subflow:27a291e8.5fa3be",
        "z": "12e72f71.814db1",
        "name": "",
        "x": 660,
        "y": 780,
        "wires": [
            [
                "3a826f05b2218a49"
            ],
            [
                "3a826f05b2218a49"
            ]
        ]
    },
    {
        "id": "acb9d01987f6a2dd",
        "type": "comment",
        "z": "12e72f71.814db1",
        "name": "Caja nueva solo al activar orden",
        "info": "",
        "x": 2090,
        "y": 640,
        "wires": []
    },
    {
        "id": "81232a4f79454524",
        "type": "comment",
        "z": "12e72f71.814db1",
        "name": "Si no hay resgistros en ProduccionDet abre una nueva caja si hay solo se inicializan las variables",
        "info": "",
        "x": 1390,
        "y": 740,
        "wires": []
    },
    {
        "id": "b25d214646052dd1",
        "type": "comment",
        "z": "12e72f71.814db1",
        "name": "Al abrir una caja nueva se actualiza IdUnidad de Variablres Produccion",
        "info": "tal vez no hace falta actualizar esa variable si se abre el registro para la caja nueva, pero se debe abrir para el la siguiente caja si hay 10 unidades producidas se debe crear el registro 11 en prodDet y el idUnidad debe ser 11",
        "x": 1290,
        "y": 620,
        "wires": []
    },
    {
        "id": "231286ed77fa3db9",
        "type": "function",
        "z": "12e72f71.814db1",
        "name": "FnCajaAbierta",
        "func": "msg.topic=`\nSELECT VP.IdComponente\n\t,VP.IdPO\nFROM [ASWLite_VariablesProduccion] VP\nLEFT JOIN [ASWLite_TraOrdenProduccionDet] PD\n\tON VP.IdComponente = PD.IdComponente\n\tAND VP.IdPO = PD.IdPO\n\tAND PD.EsTerminado = 0\nWHERE PD.IdComponente IS NULL \n`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1180,
        "y": 780,
        "wires": [
            [
                "5b987cc729fdae99"
            ]
        ],
        "info": "El query regresa los IdComponente que no tienen caja abierta"
    },
    {
        "id": "5b987cc729fdae99",
        "type": "sqlite",
        "z": "12e72f71.814db1",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 1330,
        "y": 780,
        "wires": [
            [
                "015943a9c9d388c8"
            ]
        ]
    },
    {
        "id": "015943a9c9d388c8",
        "type": "split",
        "z": "12e72f71.814db1",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1450,
        "y": 780,
        "wires": [
            [
                "01787c464e29a919"
            ]
        ]
    },
    {
        "id": "01787c464e29a919",
        "type": "change",
        "z": "12e72f71.814db1",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "IdComponente",
                "pt": "msg",
                "to": "payload.IdComponente",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1630,
        "y": 780,
        "wires": [
            [
                "3229e2302813f060"
            ]
        ]
    },
    {
        "id": "3a826f05b2218a49",
        "type": "subflow:d3a37898.3d3278",
        "z": "12e72f71.814db1",
        "name": "",
        "x": 950,
        "y": 780,
        "wires": [
            [
                "231286ed77fa3db9"
            ]
        ]
    },
    {
        "id": "3229e2302813f060",
        "type": "subflow:9d73bd39.a6086",
        "z": "12e72f71.814db1",
        "name": "",
        "env": [],
        "x": 1850,
        "y": 780,
        "wires": [
            []
        ]
    },
    {
        "id": "ac1548d32643db00",
        "type": "catch",
        "z": "12e72f71.814db1",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 100,
        "y": 980,
        "wires": [
            [
                "3b6a3f920926c279"
            ]
        ]
    },
    {
        "id": "3b6a3f920926c279",
        "type": "function",
        "z": "12e72f71.814db1",
        "name": "Error Handler",
        "func": "node.warn(`ERROR NO CONTROLADO >  ${env.get(\"NAME\")} > ${JSON.stringify(msg)}`)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 980,
        "wires": [
            []
        ]
    },
    {
        "id": "476d108639afee9d",
        "type": "debug",
        "z": "12e72f71.814db1",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1410,
        "y": 120,
        "wires": []
    },
    {
        "id": "e26b501d132ce7f5",
        "type": "debug",
        "z": "12e72f71.814db1",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1750,
        "y": 20,
        "wires": []
    },
    {
        "id": "f07d2cbcf2ecf991",
        "type": "function",
        "z": "12e72f71.814db1",
        "name": "AsignaArticulo",
        "func": "msg.payload = msg.ArrArticulos\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1290,
        "y": 420,
        "wires": [
            [
                "50473e7866e7055e"
            ]
        ]
    },
    {
        "id": "71c57e97d368e429",
        "type": "function",
        "z": "12e72f71.814db1",
        "name": "UpdateArtGeneral",
        "func": "msg.topic=`\nUPDATE ASWLite_CatArticuloGeneral\nSET \n    ClaveArticulo = '${msg.payload.ClaveArticulo}',\n    NomArticulo = '${msg.payload.NomArticulo}',\n    NomArticuloIngles = '${msg.payload.NomArticuloIngles}',\n    EspesorAltura = '${msg.payload.EspesorAltura || null}',\n    EspesorAlturaIngles = '${msg.payload.EspesorAlturaIngles || null}',\n    Longitud = '${msg.payload.Longitud|| null}',\n    LongitudIngles = '${msg.payload.LongitudIngles|| null}',\n    CajasSkid = '${msg.payload.CajasSkid}',\n    Peso = '${msg.payload.Peso|| null}',\n    BajaLogica = '${msg.payload.BajaLogica}',\n    FechaBajaLogica = '${msg.payload.FechaBajaLogica||null}',\n    FechaUltimaMod = '${msg.payload.FechaUltimaMod}'\nWHERE ClaArticulo=${msg.payload.ClaArticulo} \n`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1660,
        "y": 420,
        "wires": [
            [
                "c7514d5c2f70cbd5"
            ]
        ]
    },
    {
        "id": "50473e7866e7055e",
        "type": "split",
        "z": "12e72f71.814db1",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1480,
        "y": 420,
        "wires": [
            [
                "71c57e97d368e429"
            ]
        ]
    },
    {
        "id": "3b685cb14a1679a2",
        "type": "function",
        "z": "12e72f71.814db1",
        "name": "AsignaCaracteristicas",
        "func": "msg.payload = msg.ArrCaracteristicas\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1320,
        "y": 480,
        "wires": [
            [
                "4d2a03a414ae7e99"
            ]
        ]
    },
    {
        "id": "0dec02da03296cb9",
        "type": "function",
        "z": "12e72f71.814db1",
        "name": "UpdateArtCaracteristicas",
        "func": "msg.topic=`\nUPDATE ASWLite_CatArticuloCaracteristicas\nSET \n    NomPlantilla = '${msg.payload.NomPlantilla||null}',\n    NomPlantillaIngles = '${msg.payload.NomPlantillaIngles||null}',\n    NomCaracteristica = '${msg.payload.NomCaracteristica||null}',\n    NomCaracteristicaIngles = '${msg.payload.NomCaracteristicaIngles||null}',\n    NomValorCaract = '${msg.payload.NomValorCaract||null}',\n    NomValorCaractIngles = '${msg.payload.NomValorCaractIngles||null}',\n    BajaLogica = '${msg.payload.BajaLogica||null}',\n    FechaBajaLogica = '${msg.payload.FechaBajaLogica||null}',\n    FechaUltimaMod = '${msg.payload.FechaUltimaMod||null}'\nWHERE ClaArticulo=${msg.payload.ClaArticulo} \nAND ClaPlantilla=${msg.payload.ClaPlantilla}\nAND ClaCaracteristica=${msg.payload.ClaCaracteristica}\n`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1720,
        "y": 480,
        "wires": [
            [
                "d078cb09a94eaafc"
            ]
        ]
    },
    {
        "id": "4d2a03a414ae7e99",
        "type": "split",
        "z": "12e72f71.814db1",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1500,
        "y": 480,
        "wires": [
            [
                "0dec02da03296cb9"
            ]
        ]
    },
    {
        "id": "43f5af0d906fcbb9",
        "type": "function",
        "z": "12e72f71.814db1",
        "name": "AsignaComposicion",
        "func": "msg.payload = msg.ArrComposicion;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1320,
        "y": 540,
        "wires": [
            [
                "f0dde91a73b9cbf5"
            ]
        ]
    },
    {
        "id": "f0dde91a73b9cbf5",
        "type": "split",
        "z": "12e72f71.814db1",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1530,
        "y": 540,
        "wires": [
            [
                "e0c2afd45c70d911"
            ]
        ]
    },
    {
        "id": "e0c2afd45c70d911",
        "type": "function",
        "z": "12e72f71.814db1",
        "name": "UpdateArtComposicion",
        "func": "msg.topic=`\nUPDATE ASWLite_CatArticuloComposicion\nSET ClaArticulo = '${msg.payload.ClaArticulo||null}',\n    ClaMateriaPrima = '${msg.payload.ClaMateriaPrima||null}',\n    ClaveMateriaPrima = '${msg.payload.ClaveMateriaPrima||null}',\n    NomMateriaPrima = '${msg.payload.NomMateriaPrima||null}',\n    Cantidad = '${msg.payload.Cantidad||null}',\n    Unidad = '${msg.payload.Unidad||null}',\n    CantidadUnidad = '${msg.payload.CantidadUnidad||null}',\n    EsAlambre = '${msg.payload.EsAlambre||null}',\n    BajaLogica = '${msg.payload.BajaLogica||null}',\n    FechaBajaLogica = '${msg.payload.FechaBajaLogica||null}',\n    FechaUltimaMod = '${msg.payload.FechaUltimaMod||null}'\nWHERE ClaArticulo=${msg.payload.ClaArticulo} \n\tAND ClaMateriaPrima=${msg.payload.ClaMateriaPrima}\n`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1710,
        "y": 540,
        "wires": [
            [
                "32625f2c277d4a77"
            ]
        ]
    },
    {
        "id": "c7514d5c2f70cbd5",
        "type": "sqlite",
        "z": "12e72f71.814db1",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "UpdateCatArticuloGeneral",
        "x": 1930,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "d078cb09a94eaafc",
        "type": "sqlite",
        "z": "12e72f71.814db1",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "UpdateCatArticuloCaracteristicas",
        "x": 2000,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "32625f2c277d4a77",
        "type": "sqlite",
        "z": "12e72f71.814db1",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "UpdateCatArticuloComposicion",
        "x": 1990,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "233caea7c8c88faa",
        "type": "rpi-gpio in",
        "z": "9fb701b29f864573",
        "name": "HEADER_1",
        "pin": "4",
        "intype": "tri",
        "debounce": "0",
        "read": true,
        "bcm": true,
        "x": 170,
        "y": 120,
        "wires": [
            [
                "d5e3e71428b78992"
            ]
        ]
    },
    {
        "id": "9010b166c4734a47",
        "type": "rpi-gpio in",
        "z": "9fb701b29f864573",
        "name": "THREADER_1",
        "pin": "17",
        "intype": "tri",
        "debounce": "1500",
        "read": true,
        "bcm": true,
        "x": 180,
        "y": 300,
        "wires": [
            [
                "37a39b03d9ee1d53"
            ]
        ]
    },
    {
        "id": "2cd5f8a5ab7f5c0e",
        "type": "rpi-gpio in",
        "z": "9fb701b29f864573",
        "name": "COLLATOR_1",
        "pin": "27",
        "intype": "tri",
        "debounce": "1500",
        "read": true,
        "bcm": true,
        "x": 170,
        "y": 460,
        "wires": [
            [
                "5c755a0fe4b2ac57"
            ]
        ]
    },
    {
        "id": "eb36c8d0eb7def70",
        "type": "rpi-gpio in",
        "z": "9fb701b29f864573",
        "name": "VISION_STRIP_1",
        "pin": "22",
        "intype": "tri",
        "debounce": "0",
        "read": true,
        "bcm": true,
        "x": 190,
        "y": 620,
        "wires": [
            [
                "94cfe861d4f17f8a"
            ]
        ]
    },
    {
        "id": "8b7b17d56bb10c88",
        "type": "rpi-gpio in",
        "z": "9fb701b29f864573",
        "name": "VISION_REJECTED_1",
        "pin": "5",
        "intype": "tri",
        "debounce": "0",
        "read": true,
        "bcm": true,
        "x": 200,
        "y": 800,
        "wires": [
            [
                "12507565580b2f54"
            ]
        ]
    },
    {
        "id": "0dc913400ba047b1",
        "type": "msg-speed",
        "z": "9fb701b29f864573",
        "name": "PPM",
        "frequency": "min",
        "interval": 1,
        "estimation": false,
        "ignore": false,
        "pauseAtStartup": false,
        "topicDependent": false,
        "x": 710,
        "y": 120,
        "wires": [
            [
                "1521a44502671f26"
            ],
            [
                "e206d2e6c0c40b82"
            ]
        ]
    },
    {
        "id": "e206d2e6c0c40b82",
        "type": "msg-speed",
        "z": "9fb701b29f864573",
        "name": "PPH",
        "frequency": "hour",
        "interval": 1,
        "estimation": false,
        "ignore": false,
        "pauseAtStartup": false,
        "topicDependent": false,
        "x": 830,
        "y": 140,
        "wires": [
            [
                "a5e2a1bc65889e88"
            ],
            [
                "eeb24909b358678f",
                "04b2df02ee915534"
            ]
        ]
    },
    {
        "id": "3df9adba0fc64b03",
        "type": "ui_text",
        "z": "9fb701b29f864573",
        "group": "2e90b06c70c3dd34",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "HEADER 1",
        "format": "{{msg.payload.ppm}}",
        "layout": "row-spread",
        "className": "",
        "x": 610,
        "y": 1280,
        "wires": []
    },
    {
        "id": "1521a44502671f26",
        "type": "function",
        "z": "9fb701b29f864573",
        "name": ".ppm",
        "func": "let monitoreo = flow.get('monitoreo')\nflow.set('flag',flow.get('flag') || {valor:'init'})\nlet flag = flow.get('flag')\nif (monitoreo){\n    flag.valor = 'monitoreo'\n    if(monitoreo.HEADER_1){\n        flag.valor = 'monitoreo.HEADER_1'\n        if (monitoreo.HEADER_1.ppm){\n            flag.valor = 'monitoreo.HEADER_1.ppm'\n            monitoreo.HEADER_1.ppm=msg.payload\n        }else{\n            monitoreo.HEADER_1['ppm'] = msg.payload\n        }\n    }else{\n        monitoreo['HEADER_1'] = {'ppm' : msg.payload}\n    }\n}else{\n    flag.valor = '!monitoreo'\n    flow.set('monitoreo',{'HEADER_1' : {ppm : msg.payload}})\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 830,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "8cbbb0807bd8b348",
        "type": "inject",
        "z": "9fb701b29f864573",
        "name": "Interval",
        "props": [],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "x": 180,
        "y": 1280,
        "wires": [
            [
                "582f041f9e13bb4c",
                "bd73976968b9d0fe",
                "df2d62234bb3da52",
                "bea145faab3efc91",
                "7482405e27c69b74",
                "b3a80e2454218302",
                "d81c79f642e7d4d7",
                "75e95d8283efa281",
                "958bc1c54f78fb70",
                "86f95d16bec8bbe9",
                "6b4e74c0c70eb837",
                "20a7e353e7c669c8"
            ]
        ]
    },
    {
        "id": "582f041f9e13bb4c",
        "type": "change",
        "z": "9fb701b29f864573",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "monitoreo.HEADER_1",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 400,
        "y": 1280,
        "wires": [
            [
                "3df9adba0fc64b03"
            ]
        ]
    },
    {
        "id": "c527fe3f9813a1ac",
        "type": "ui_text",
        "z": "9fb701b29f864573",
        "group": "0cfb7380f43ae1fd",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "HEADER 1",
        "label": "",
        "format": "{{msg.payload.pph}}",
        "layout": "col-center",
        "className": "",
        "x": 1270,
        "y": 1280,
        "wires": []
    },
    {
        "id": "b3a80e2454218302",
        "type": "change",
        "z": "9fb701b29f864573",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "monitoreo.HEADER_1",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1060,
        "y": 1280,
        "wires": [
            [
                "c527fe3f9813a1ac"
            ]
        ]
    },
    {
        "id": "a5e2a1bc65889e88",
        "type": "function",
        "z": "9fb701b29f864573",
        "name": ".pph",
        "func": "let monitoreo = flow.get('monitoreo')\nif (monitoreo){\n    if(monitoreo.HEADER_1){\n        if (monitoreo.HEADER_1.pph){\n            monitoreo.HEADER_1.pph=msg.payload\n        }else{\n            monitoreo.HEADER_1['pph'] = msg.payload\n        }\n    }else{\n        monitoreo['HEADER_1'] = {'pph' : msg.payload}\n    }\n}else{\n    flow.set('monitoreo',{'HEADER_1' : {pph : msg.payload}})\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "50fd1824c3b4ddf7",
        "type": "msg-speed",
        "z": "9fb701b29f864573",
        "name": "PPM",
        "frequency": "min",
        "interval": 1,
        "estimation": false,
        "ignore": false,
        "pauseAtStartup": false,
        "topicDependent": false,
        "x": 730,
        "y": 300,
        "wires": [
            [
                "37411841f2c5da37"
            ],
            [
                "11ec23946fba052b"
            ]
        ]
    },
    {
        "id": "11ec23946fba052b",
        "type": "msg-speed",
        "z": "9fb701b29f864573",
        "name": "PPH",
        "frequency": "hour",
        "interval": 1,
        "estimation": false,
        "ignore": false,
        "pauseAtStartup": false,
        "topicDependent": false,
        "x": 850,
        "y": 320,
        "wires": [
            [
                "6cc91e51bf67b488"
            ],
            [
                "a01f051389ce3888",
                "9cf425e411086d73",
                "9be7862c676cafef"
            ]
        ]
    },
    {
        "id": "37411841f2c5da37",
        "type": "function",
        "z": "9fb701b29f864573",
        "name": "",
        "func": "let monitoreo = flow.get('monitoreo')\nflow.set('flag',flow.get('flag') || {valor:'init'})\nlet flag = flow.get('flag')\nif (monitoreo){\n    flag.valor = 'monitoreo'\n    if(monitoreo.THREADER_1){\n        flag.valor = 'monitoreo.THREADER_1'\n        if (monitoreo.THREADER_1.ppm){\n            flag.valor = 'monitoreo.THREADER_1.ppm'\n            monitoreo.THREADER_1.ppm=msg.payload\n        }else{\n            monitoreo.THREADER_1['ppm'] = msg.payload\n        }\n    }else{\n        monitoreo['THREADER_1'] = {'ppm' : msg.payload}\n    }\n}else{\n    flag.valor = '!monitoreo'\n    flow.set('monitoreo',{'THREADER_1' : {ppm : msg.payload}})\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "6cc91e51bf67b488",
        "type": "function",
        "z": "9fb701b29f864573",
        "name": "",
        "func": "let monitoreo = flow.get('monitoreo')\nif (monitoreo){\n    if(monitoreo.THREADER_1){\n        if (monitoreo.THREADER_1.pph){\n            monitoreo.THREADER_1.pph=msg.payload\n        }else{\n            monitoreo.THREADER_1['pph'] = msg.payload\n        }\n    }else{\n        monitoreo['THREADER_1'] = {'pph' : msg.payload}\n    }\n}else{\n    flow.set('monitoreo',{'THREADER_1' : {pph : msg.payload}})\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "1bf10bd391de6937",
        "type": "msg-speed",
        "z": "9fb701b29f864573",
        "name": "PPM",
        "frequency": "min",
        "interval": 1,
        "estimation": false,
        "ignore": false,
        "pauseAtStartup": false,
        "topicDependent": false,
        "x": 728.7499928474426,
        "y": 459.74999618530273,
        "wires": [
            [
                "61daab4af488279f"
            ],
            [
                "3fc111a24855e64d"
            ]
        ]
    },
    {
        "id": "3fc111a24855e64d",
        "type": "msg-speed",
        "z": "9fb701b29f864573",
        "name": "PPH",
        "frequency": "hour",
        "interval": 1,
        "estimation": false,
        "ignore": false,
        "pauseAtStartup": false,
        "topicDependent": false,
        "x": 848.7499928474426,
        "y": 479.74999618530273,
        "wires": [
            [
                "62f1d4d7ca8b03fb"
            ],
            [
                "47252c045f5c10bb",
                "2bf3672d461adaff",
                "2f7d1c3f21b9dad4"
            ]
        ]
    },
    {
        "id": "61daab4af488279f",
        "type": "function",
        "z": "9fb701b29f864573",
        "name": "",
        "func": "let monitoreo = flow.get('monitoreo')\nflow.set('flag',flow.get('flag') || {valor:'init'})\nlet flag = flow.get('flag')\nif (monitoreo){\n    flag.valor = 'monitoreo'\n    if(monitoreo.COLLATOR_1){\n        flag.valor = 'monitoreo.COLLATOR_1'\n        if (monitoreo.COLLATOR_1.ppm){\n            flag.valor = 'monitoreo.COLLATOR_1.ppm'\n            monitoreo.COLLATOR_1.ppm=msg.payload\n        }else{\n            monitoreo.COLLATOR_1['ppm'] = msg.payload\n        }\n    }else{\n        monitoreo['COLLATOR_1'] = {'ppm' : msg.payload}\n    }\n}else{\n    flag.valor = '!monitoreo'\n    flow.set('monitoreo',{'COLLATOR_1' : {ppm : msg.payload}})\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 858.7499928474426,
        "y": 439.74999618530273,
        "wires": [
            []
        ]
    },
    {
        "id": "62f1d4d7ca8b03fb",
        "type": "function",
        "z": "9fb701b29f864573",
        "name": "",
        "func": "let monitoreo = flow.get('monitoreo')\nif (monitoreo){\n    if(monitoreo.COLLATOR_1){\n        if (monitoreo.COLLATOR_1.pph){\n            monitoreo.COLLATOR_1.pph=msg.payload\n        }else{\n            monitoreo.COLLATOR_1['pph'] = msg.payload\n        }\n    }else{\n        monitoreo['COLLATOR_1'] = {'pph' : msg.payload}\n    }\n}else{\n    flow.set('monitoreo',{'COLLATOR_1' : {pph : msg.payload}})\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "5b0baa27a8283775",
        "type": "msg-speed",
        "z": "9fb701b29f864573",
        "name": "PPM",
        "frequency": "min",
        "interval": 1,
        "estimation": false,
        "ignore": false,
        "pauseAtStartup": false,
        "topicDependent": false,
        "x": 730,
        "y": 620,
        "wires": [
            [
                "976d46a8190f5a75"
            ],
            [
                "9aa64661148db05a"
            ]
        ]
    },
    {
        "id": "9aa64661148db05a",
        "type": "msg-speed",
        "z": "9fb701b29f864573",
        "name": "PPH",
        "frequency": "hour",
        "interval": 1,
        "estimation": false,
        "ignore": false,
        "pauseAtStartup": false,
        "topicDependent": false,
        "x": 850,
        "y": 640,
        "wires": [
            [
                "850a784a470c72fb"
            ],
            [
                "47c3d7630094e8ed",
                "9b909773493c5a09"
            ]
        ]
    },
    {
        "id": "976d46a8190f5a75",
        "type": "function",
        "z": "9fb701b29f864573",
        "name": "",
        "func": "let monitoreo = flow.get('monitoreo')\nflow.set('flag',flow.get('flag') || {valor:'init'})\nlet flag = flow.get('flag')\nif (monitoreo){\n    flag.valor = 'monitoreo'\n    if(monitoreo.VISION_STRIP_1){\n        flag.valor = 'monitoreo.VISION_STRIP_1'\n        if (monitoreo.VISION_STRIP_1.ppm){\n            flag.valor = 'monitoreo.VISION_STRIP_1.ppm'\n            monitoreo.VISION_STRIP_1.ppm=msg.payload\n        }else{\n            monitoreo.VISION_STRIP_1['ppm'] = msg.payload\n        }\n    }else{\n        monitoreo['VISION_STRIP_1'] = {'ppm' : msg.payload}\n    }\n}else{\n    flag.valor = '!monitoreo'\n    flow.set('monitoreo',{'VISION_STRIP_1' : {ppm : msg.payload}})\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "850a784a470c72fb",
        "type": "function",
        "z": "9fb701b29f864573",
        "name": "",
        "func": "let monitoreo = flow.get('monitoreo')\nif (monitoreo){\n    if(monitoreo.VISION_STRIP_1){\n        if (monitoreo.VISION_STRIP_1.pph){\n            monitoreo.VISION_STRIP_1.pph=msg.payload\n        }else{\n            monitoreo.VISION_STRIP_1['pph'] = msg.payload\n        }\n    }else{\n        monitoreo['VISION_STRIP_1'] = {'pph' : msg.payload}\n    }\n}else{\n    flow.set('monitoreo',{'VISION_STRIP_1' : {pph : msg.payload}})\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "d5d10c4de270d2b8",
        "type": "msg-speed",
        "z": "9fb701b29f864573",
        "name": "PPM",
        "frequency": "min",
        "interval": 1,
        "estimation": false,
        "ignore": false,
        "pauseAtStartup": false,
        "topicDependent": false,
        "x": 730,
        "y": 800,
        "wires": [
            [
                "e402c93f2fff1069"
            ],
            [
                "c3361b9fd7b9ac03"
            ]
        ]
    },
    {
        "id": "c3361b9fd7b9ac03",
        "type": "msg-speed",
        "z": "9fb701b29f864573",
        "name": "PPH",
        "frequency": "hour",
        "interval": 1,
        "estimation": false,
        "ignore": false,
        "pauseAtStartup": false,
        "topicDependent": false,
        "x": 850,
        "y": 820,
        "wires": [
            [
                "5fe77036020c4e4c"
            ],
            [
                "c52b69afcb329b30"
            ]
        ]
    },
    {
        "id": "e402c93f2fff1069",
        "type": "function",
        "z": "9fb701b29f864573",
        "name": "",
        "func": "let monitoreo = flow.get('monitoreo')\nif (monitoreo){\n    if(monitoreo.VISION_REJECTED_1){\n        if (monitoreo.VISION_REJECTED_1.ppm){\n            monitoreo.VISION_REJECTED_1.ppm=msg.payload\n        }else{\n            monitoreo.VISION_REJECTED_1['ppm'] = msg.payload\n        }\n    }else{\n        monitoreo['VISION_REJECTED_1'] = {'ppm' : msg.payload}\n    }\n}else{\n    flow.set('monitoreo',{'VISION_REJECTED_1' : {ppm : msg.payload}})\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 780,
        "wires": [
            []
        ]
    },
    {
        "id": "5fe77036020c4e4c",
        "type": "function",
        "z": "9fb701b29f864573",
        "name": "",
        "func": "let monitoreo = flow.get('monitoreo')\nif (monitoreo){\n    if(monitoreo.VISION_REJECTED_1){\n        if (monitoreo.VISION_REJECTED_1.pph){\n            monitoreo.VISION_REJECTED_1.pph=msg.payload\n        }else{\n            monitoreo.VISION_REJECTED_1['pph'] = msg.payload\n        }\n    }else{\n        monitoreo['VISION_REJECTED_1'] = {'pph' : msg.payload}\n    }\n}else{\n    flow.set('monitoreo',{'VISION_REJECTED_1' : {pph : msg.payload}})\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "e9523c22dc9e5d5b",
        "type": "ui_text",
        "z": "9fb701b29f864573",
        "group": "2e90b06c70c3dd34",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "THREADER 1",
        "format": "{{msg.payload.ppm}}",
        "layout": "row-spread",
        "className": "",
        "x": 620,
        "y": 1380,
        "wires": []
    },
    {
        "id": "bd73976968b9d0fe",
        "type": "change",
        "z": "9fb701b29f864573",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "monitoreo.THREADER_1",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 400,
        "y": 1380,
        "wires": [
            [
                "e9523c22dc9e5d5b"
            ]
        ]
    },
    {
        "id": "3baec6c784ddc465",
        "type": "ui_text",
        "z": "9fb701b29f864573",
        "group": "0cfb7380f43ae1fd",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "THREADER 1",
        "label": "",
        "format": "{{msg.payload.pph}}",
        "layout": "col-center",
        "className": "",
        "x": 1280,
        "y": 1380,
        "wires": []
    },
    {
        "id": "d81c79f642e7d4d7",
        "type": "change",
        "z": "9fb701b29f864573",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "monitoreo.THREADER_1",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1060,
        "y": 1380,
        "wires": [
            [
                "3baec6c784ddc465"
            ]
        ]
    },
    {
        "id": "b7ddf993d2342eb7",
        "type": "ui_text",
        "z": "9fb701b29f864573",
        "group": "2e90b06c70c3dd34",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "COLLATOR 1",
        "format": "{{msg.payload.ppm}}",
        "layout": "row-spread",
        "className": "",
        "x": 620,
        "y": 1480,
        "wires": []
    },
    {
        "id": "df2d62234bb3da52",
        "type": "change",
        "z": "9fb701b29f864573",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "monitoreo.COLLATOR_1",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 400,
        "y": 1480,
        "wires": [
            [
                "b7ddf993d2342eb7"
            ]
        ]
    },
    {
        "id": "dc9b9dde3b5e5e65",
        "type": "ui_text",
        "z": "9fb701b29f864573",
        "group": "0cfb7380f43ae1fd",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "COLLATOR 1",
        "label": "",
        "format": "{{msg.payload.pph}}",
        "layout": "col-center",
        "className": "",
        "x": 1280,
        "y": 1480,
        "wires": []
    },
    {
        "id": "75e95d8283efa281",
        "type": "change",
        "z": "9fb701b29f864573",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "monitoreo.COLLATOR_1",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1060,
        "y": 1480,
        "wires": [
            [
                "dc9b9dde3b5e5e65"
            ]
        ]
    },
    {
        "id": "f002cbb52fdd96c7",
        "type": "ui_text",
        "z": "9fb701b29f864573",
        "group": "2e90b06c70c3dd34",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "VISION_STRIP 1",
        "format": "{{msg.payload.ppm}}",
        "layout": "row-spread",
        "className": "",
        "x": 630,
        "y": 1580,
        "wires": []
    },
    {
        "id": "bea145faab3efc91",
        "type": "change",
        "z": "9fb701b29f864573",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "monitoreo.VISION_STRIP_1",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 400,
        "y": 1580,
        "wires": [
            [
                "f002cbb52fdd96c7"
            ]
        ]
    },
    {
        "id": "78e43875463223f1",
        "type": "ui_text",
        "z": "9fb701b29f864573",
        "group": "0cfb7380f43ae1fd",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "VISION_STRIP 1",
        "label": "",
        "format": "{{msg.payload.pph}}",
        "layout": "col-center",
        "className": "",
        "x": 1290,
        "y": 1580,
        "wires": []
    },
    {
        "id": "958bc1c54f78fb70",
        "type": "change",
        "z": "9fb701b29f864573",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "monitoreo.VISION_STRIP_1",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1060,
        "y": 1580,
        "wires": [
            [
                "78e43875463223f1"
            ]
        ]
    },
    {
        "id": "065b1a337fb9802c",
        "type": "ui_text",
        "z": "9fb701b29f864573",
        "group": "2e90b06c70c3dd34",
        "order": 6,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "VISION_REJECTED 1",
        "format": "{{msg.payload.ppm}}",
        "layout": "row-spread",
        "className": "",
        "x": 640,
        "y": 1680,
        "wires": []
    },
    {
        "id": "7482405e27c69b74",
        "type": "change",
        "z": "9fb701b29f864573",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "monitoreo.VISION_REJECTED_1",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 400,
        "y": 1680,
        "wires": [
            [
                "065b1a337fb9802c"
            ]
        ]
    },
    {
        "id": "2986f4f53b9d84d2",
        "type": "ui_text",
        "z": "9fb701b29f864573",
        "group": "0cfb7380f43ae1fd",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "VISION_REJECTED 1",
        "label": "",
        "format": "{{msg.payload.pph}}",
        "layout": "col-center",
        "className": "",
        "x": 1300,
        "y": 1680,
        "wires": []
    },
    {
        "id": "86f95d16bec8bbe9",
        "type": "change",
        "z": "9fb701b29f864573",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "monitoreo.VISION_REJECTED_1",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1060,
        "y": 1680,
        "wires": [
            [
                "2986f4f53b9d84d2"
            ]
        ]
    },
    {
        "id": "5fcc155c636c4990",
        "type": "inject",
        "z": "9fb701b29f864573",
        "d": true,
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": ".04",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 570,
        "y": 160,
        "wires": [
            [
                "0dc913400ba047b1"
            ]
        ]
    },
    {
        "id": "1d3e5c734e57c3c5",
        "type": "inject",
        "z": "9fb701b29f864573",
        "d": true,
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "115",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 510,
        "y": 360,
        "wires": [
            [
                "50fd1824c3b4ddf7",
                "1bf10bd391de6937"
            ]
        ]
    },
    {
        "id": "63cb2bdaa6e137fa",
        "type": "inject",
        "z": "9fb701b29f864573",
        "d": true,
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "85",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 510,
        "y": 400,
        "wires": [
            [
                "50fd1824c3b4ddf7",
                "1bf10bd391de6937"
            ]
        ]
    },
    {
        "id": "eafaf3c86188e653",
        "type": "inject",
        "z": "9fb701b29f864573",
        "d": true,
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 550,
        "y": 560,
        "wires": [
            [
                "5b0baa27a8283775"
            ]
        ]
    },
    {
        "id": "c4a2bf7a8c2ed671",
        "type": "inject",
        "z": "9fb701b29f864573",
        "d": true,
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "75",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 550,
        "y": 760,
        "wires": [
            [
                "d5d10c4de270d2b8"
            ]
        ]
    },
    {
        "id": "eeb24909b358678f",
        "type": "counter",
        "z": "9fb701b29f864573",
        "name": "",
        "init": "0",
        "step": "1",
        "lower": "",
        "upper": "",
        "mode": "increment",
        "outputs": 2,
        "x": 1000,
        "y": 200,
        "wires": [
            [
                "9f189a5c82275894",
                "33413f4c9e08d5c4"
            ],
            []
        ]
    },
    {
        "id": "9f189a5c82275894",
        "type": "ui_text",
        "z": "9fb701b29f864573",
        "group": "2622bdaaceca2895",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "Header",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1160,
        "y": 180,
        "wires": []
    },
    {
        "id": "3f8a8e896f1a8da7",
        "type": "inject",
        "z": "9fb701b29f864573",
        "name": "reset",
        "props": [
            {
                "p": "reset",
                "v": "1",
                "vt": "num"
            }
        ],
        "repeat": "",
        "crontab": "00 07 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 850,
        "y": 200,
        "wires": [
            [
                "eeb24909b358678f"
            ]
        ]
    },
    {
        "id": "90110b61a17e0740",
        "type": "ui_switch",
        "z": "9fb701b29f864573",
        "name": "Header",
        "label": "",
        "tooltip": "",
        "group": "5d195279b189ed80",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1300,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "a01f051389ce3888",
        "type": "ui_switch",
        "z": "9fb701b29f864573",
        "name": "Threader",
        "label": "",
        "tooltip": "",
        "group": "5d195279b189ed80",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1000,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "47252c045f5c10bb",
        "type": "ui_switch",
        "z": "9fb701b29f864573",
        "name": "Collator",
        "label": "",
        "tooltip": "",
        "group": "5d195279b189ed80",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 980,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "3b72b126f0233ef6",
        "type": "ui_switch",
        "z": "9fb701b29f864573",
        "name": "Vision_strip",
        "label": "",
        "tooltip": "",
        "group": "5d195279b189ed80",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1270,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "b2c1a080782ed8d0",
        "type": "function",
        "z": "9fb701b29f864573",
        "name": "",
        "func": "if (msg.payload*2 < 1){\n    msg.payload=0\n}else{\n    msg.payload=1\n}\nmsg.topic='Header'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1140,
        "y": 120,
        "wires": [
            [
                "90110b61a17e0740",
                "fe1ea7d7eb450a1f"
            ]
        ]
    },
    {
        "id": "04b2df02ee915534",
        "type": "msg-speed",
        "z": "9fb701b29f864573",
        "name": "30 seg.",
        "frequency": "sec",
        "interval": "30",
        "estimation": false,
        "ignore": false,
        "pauseAtStartup": false,
        "topicDependent": false,
        "x": 1000,
        "y": 160,
        "wires": [
            [
                "b2c1a080782ed8d0"
            ],
            []
        ]
    },
    {
        "id": "47c3d7630094e8ed",
        "type": "msg-speed",
        "z": "9fb701b29f864573",
        "name": "30 seg.",
        "frequency": "sec",
        "interval": "30",
        "estimation": false,
        "ignore": false,
        "pauseAtStartup": false,
        "topicDependent": false,
        "x": 980,
        "y": 680,
        "wires": [
            [
                "1031db4bbc0c8c5a"
            ],
            []
        ]
    },
    {
        "id": "1031db4bbc0c8c5a",
        "type": "function",
        "z": "9fb701b29f864573",
        "name": "",
        "func": "if (msg.payload*2 < 1){\n    msg.payload=0\n}else{\n    msg.payload=1\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1120,
        "y": 640,
        "wires": [
            [
                "3b72b126f0233ef6",
                "cab679d0155f37ef"
            ]
        ]
    },
    {
        "id": "db6066b46d21280f",
        "type": "inject",
        "z": "9fb701b29f864573",
        "name": "reset",
        "props": [
            {
                "p": "reset",
                "v": "1",
                "vt": "num"
            }
        ],
        "repeat": "",
        "crontab": "00 07 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 850,
        "y": 380,
        "wires": [
            [
                "9cf425e411086d73"
            ]
        ]
    },
    {
        "id": "9cf425e411086d73",
        "type": "counter",
        "z": "9fb701b29f864573",
        "name": "",
        "init": "0",
        "step": "1",
        "lower": "",
        "upper": "",
        "mode": "increment",
        "outputs": 2,
        "x": 1000,
        "y": 380,
        "wires": [
            [
                "d3b227a938507517",
                "d896dd9e70ab56b8"
            ],
            []
        ]
    },
    {
        "id": "d3b227a938507517",
        "type": "ui_text",
        "z": "9fb701b29f864573",
        "group": "2622bdaaceca2895",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "Threader",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1160,
        "y": 360,
        "wires": []
    },
    {
        "id": "b2a78f54ccce9b78",
        "type": "inject",
        "z": "9fb701b29f864573",
        "name": "reset",
        "props": [
            {
                "p": "reset",
                "v": "1",
                "vt": "num"
            }
        ],
        "repeat": "",
        "crontab": "00 07 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 830,
        "y": 540,
        "wires": [
            [
                "2bf3672d461adaff"
            ]
        ]
    },
    {
        "id": "2bf3672d461adaff",
        "type": "counter",
        "z": "9fb701b29f864573",
        "name": "",
        "init": "0",
        "step": "1",
        "lower": "",
        "upper": "",
        "mode": "increment",
        "outputs": 2,
        "x": 980,
        "y": 540,
        "wires": [
            [
                "9b8ab1889639db19",
                "ddf05e8512b37086"
            ],
            []
        ]
    },
    {
        "id": "9b8ab1889639db19",
        "type": "ui_text",
        "z": "9fb701b29f864573",
        "group": "2622bdaaceca2895",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "Collator",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1140,
        "y": 520,
        "wires": []
    },
    {
        "id": "4795da9d760dd7c7",
        "type": "inject",
        "z": "9fb701b29f864573",
        "name": "reset",
        "props": [
            {
                "p": "reset",
                "v": "1",
                "vt": "num"
            }
        ],
        "repeat": "",
        "crontab": "00 07 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 830,
        "y": 720,
        "wires": [
            [
                "9b909773493c5a09"
            ]
        ]
    },
    {
        "id": "9b909773493c5a09",
        "type": "counter",
        "z": "9fb701b29f864573",
        "name": "",
        "init": "0",
        "step": "1",
        "lower": "",
        "upper": "",
        "mode": "increment",
        "outputs": 2,
        "x": 980,
        "y": 720,
        "wires": [
            [
                "83df7b863e18ebc1",
                "3a41b7d660ae9b22"
            ],
            []
        ]
    },
    {
        "id": "83df7b863e18ebc1",
        "type": "ui_text",
        "z": "9fb701b29f864573",
        "group": "2622bdaaceca2895",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "Vision_Strip",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1150,
        "y": 700,
        "wires": []
    },
    {
        "id": "05c91b841f446eff",
        "type": "inject",
        "z": "9fb701b29f864573",
        "name": "reset",
        "props": [
            {
                "p": "reset",
                "v": "1",
                "vt": "num"
            }
        ],
        "repeat": "",
        "crontab": "00 07 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 830,
        "y": 860,
        "wires": [
            [
                "c52b69afcb329b30"
            ]
        ]
    },
    {
        "id": "c52b69afcb329b30",
        "type": "counter",
        "z": "9fb701b29f864573",
        "name": "",
        "init": "0",
        "step": "1",
        "lower": "",
        "upper": "",
        "mode": "increment",
        "outputs": 2,
        "x": 980,
        "y": 860,
        "wires": [
            [
                "5d7399a0d365d55e",
                "46b3ca28e0361db9"
            ],
            []
        ]
    },
    {
        "id": "5d7399a0d365d55e",
        "type": "ui_text",
        "z": "9fb701b29f864573",
        "group": "2622bdaaceca2895",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "Vision_Rejected",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1160,
        "y": 840,
        "wires": []
    },
    {
        "id": "8e0a1e33745481b6",
        "type": "ui_chart",
        "z": "9fb701b29f864573",
        "d": true,
        "name": "Header",
        "group": "317ee2addbf066fa",
        "order": 2,
        "width": "0",
        "height": "0",
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "2",
        "removeOlder": "10.5",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 2300,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "9be7862c676cafef",
        "type": "function",
        "z": "9fb701b29f864573",
        "name": "",
        "func": "if (msg.topic=='interval'){\n    context.set('onoff',context.get('onoff') || 0)\n    msg.payload = context.get('onoff')\n    return msg;\n}else{\n    //context.set('onoff',msg.payload || 0)\n    //msg.payload = context.get('onoff')\n    msg.topic='ValueChanged'\n    \n    let estadoAnterior = context.get('onoff')===undefined? msg.payload : context.get('onoff');\n    context.set('onoff',msg.payload || 0)\n\n    if (estadoAnterior != msg.payload){\n        msg.estadoAnterior=estadoAnterior;\n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1540,
        "y": 320,
        "wires": [
            [
                "a8c7431d778959fc",
                "a1decef119e7de96"
            ]
        ]
    },
    {
        "id": "867f2c2ebedb0948",
        "type": "inject",
        "z": "9fb701b29f864573",
        "name": "interval",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "interval",
        "payload": "",
        "payloadType": "date",
        "x": 1540,
        "y": 280,
        "wires": [
            [
                "9be7862c676cafef"
            ]
        ]
    },
    {
        "id": "61f4c6b59555c122",
        "type": "ui_chart",
        "z": "9fb701b29f864573",
        "d": true,
        "name": "Threader",
        "group": "317ee2addbf066fa",
        "order": 3,
        "width": 0,
        "height": 0,
        "label": "chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "10.5",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 2300,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "1eacd060f44f24fd",
        "type": "ui_chart",
        "z": "9fb701b29f864573",
        "name": "All",
        "group": "317ee2addbf066fa",
        "order": 1,
        "width": "30",
        "height": "6",
        "label": "",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "10.5",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#f25d0d",
            "#11b650",
            "#982ca0",
            "#f3d61b",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 2290,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "754680ccf4fb7244",
        "type": "function",
        "z": "9fb701b29f864573",
        "name": "",
        "func": "msg.topic='Threader'\nif (msg.payload>0){\n    msg.payload=msg.payload*2\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2060,
        "y": 300,
        "wires": [
            [
                "1eacd060f44f24fd",
                "61f4c6b59555c122"
            ]
        ]
    },
    {
        "id": "a8c7431d778959fc",
        "type": "delay",
        "z": "9fb701b29f864573",
        "name": "",
        "pauseType": "delay",
        "timeout": "400",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1870,
        "y": 360,
        "wires": [
            [
                "754680ccf4fb7244",
                "d80d8a198eb1bf2f"
            ]
        ]
    },
    {
        "id": "a1decef119e7de96",
        "type": "function",
        "z": "9fb701b29f864573",
        "name": "",
        "func": "let estadoAnterior = context.get('onoff')===undefined? msg.payload : context.get('onoff');\ncontext.set('onoff',msg.payload)\n\nif (estadoAnterior != msg.payload){\n    let msgAnterior={payload:estadoAnterior}\n    msg.payload=null\n    return [msgAnterior, msg];\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1700,
        "y": 300,
        "wires": [
            [
                "754680ccf4fb7244"
            ],
            [
                "45afc9de1abdd8ef"
            ]
        ]
    },
    {
        "id": "fe1ea7d7eb450a1f",
        "type": "function",
        "z": "9fb701b29f864573",
        "name": "",
        "func": "if (msg.topic=='interval'){\n    context.set('onoff',context.get('onoff') || 0)\n    msg.payload = context.get('onoff')\n    return msg;\n}else{\n    //context.set('onoff',msg.payload || 0)\n    //msg.payload = context.get('onoff')\n    msg.topic='ValueChanged'\n    \n    let estadoAnterior = context.get('onoff')===undefined? msg.payload : context.get('onoff');\n    context.set('onoff',msg.payload || 0)\n\n    if (estadoAnterior != msg.payload){\n        msg.estadoAnterior=estadoAnterior;\n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1540,
        "y": 120,
        "wires": [
            [
                "445c2eb2b0ce14f5",
                "15f0c5c9a562f70d"
            ]
        ]
    },
    {
        "id": "445c2eb2b0ce14f5",
        "type": "delay",
        "z": "9fb701b29f864573",
        "name": "",
        "pauseType": "delay",
        "timeout": "400",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1870,
        "y": 160,
        "wires": [
            [
                "022ce3170a1c06a5",
                "67ba6cf26bb0c0b6"
            ]
        ]
    },
    {
        "id": "15f0c5c9a562f70d",
        "type": "function",
        "z": "9fb701b29f864573",
        "name": "",
        "func": "let estadoAnterior = context.get('onoff')===undefined? msg.payload : context.get('onoff');\ncontext.set('onoff',msg.payload)\n\nif (estadoAnterior != msg.payload){\n    let msgAnterior={payload:estadoAnterior}\n    msg.payload=null\n    return [msgAnterior, msg];\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1700,
        "y": 100,
        "wires": [
            [
                "022ce3170a1c06a5"
            ],
            [
                "9704b537a6f7d85c"
            ]
        ]
    },
    {
        "id": "2f7d1c3f21b9dad4",
        "type": "function",
        "z": "9fb701b29f864573",
        "name": "",
        "func": "if (msg.topic=='interval'){\n    context.set('onoff',context.get('onoff') || 0)\n    msg.payload = context.get('onoff')\n    return msg;\n}else{\n    //context.set('onoff',msg.payload || 0)\n    //msg.payload = context.get('onoff')\n    msg.topic='ValueChanged'\n    \n    let estadoAnterior = context.get('onoff')===undefined? msg.payload : context.get('onoff');\n    context.set('onoff',msg.payload || 0)\n\n    if (estadoAnterior != msg.payload){\n        msg.estadoAnterior=estadoAnterior;\n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1540,
        "y": 480,
        "wires": [
            [
                "279d7a61806d2c0f",
                "c28efb90820cc64a"
            ]
        ]
    },
    {
        "id": "0e61bf6f95f1b98d",
        "type": "inject",
        "z": "9fb701b29f864573",
        "name": "interval",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "interval",
        "payload": "",
        "payloadType": "date",
        "x": 1540,
        "y": 440,
        "wires": [
            [
                "2f7d1c3f21b9dad4"
            ]
        ]
    },
    {
        "id": "cf7aa53db94d6414",
        "type": "ui_chart",
        "z": "9fb701b29f864573",
        "d": true,
        "name": "Collator",
        "group": "317ee2addbf066fa",
        "order": 3,
        "width": 0,
        "height": 0,
        "label": "chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "10.5",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#8817d3",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 2300,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "d3bf54d36c5012de",
        "type": "function",
        "z": "9fb701b29f864573",
        "name": "",
        "func": "msg.topic='Collator'\nif (msg.payload>0){\n    msg.payload=msg.payload*3\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2060,
        "y": 440,
        "wires": [
            [
                "1eacd060f44f24fd",
                "cf7aa53db94d6414"
            ]
        ]
    },
    {
        "id": "279d7a61806d2c0f",
        "type": "delay",
        "z": "9fb701b29f864573",
        "name": "",
        "pauseType": "delay",
        "timeout": "400",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1870,
        "y": 520,
        "wires": [
            [
                "d3bf54d36c5012de",
                "5de302113963b56f"
            ]
        ]
    },
    {
        "id": "c28efb90820cc64a",
        "type": "function",
        "z": "9fb701b29f864573",
        "name": "",
        "func": "let estadoAnterior = context.get('onoff')===undefined? msg.payload : context.get('onoff');\ncontext.set('onoff',msg.payload)\n\nmsg.topic='resetTopic'\n\nif (estadoAnterior != msg.payload){\n    let msgAnterior={payload:estadoAnterior}\n    msg.payload=null\n    return [msgAnterior, msg];\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1700,
        "y": 460,
        "wires": [
            [
                "d3bf54d36c5012de"
            ],
            [
                "b30d974ca873c45c"
            ]
        ]
    },
    {
        "id": "6e4d0c4b71f04262",
        "type": "ui_chart",
        "z": "9fb701b29f864573",
        "d": true,
        "name": "Vision_Strip",
        "group": "317ee2addbf066fa",
        "order": 2,
        "width": "0",
        "height": "0",
        "label": "",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "2",
        "removeOlder": "10.5",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 2310,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "ed744675cd129a01",
        "type": "delay",
        "z": "9fb701b29f864573",
        "name": "",
        "pauseType": "delay",
        "timeout": "400",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1870,
        "y": 680,
        "wires": [
            [
                "b1f46f2d20d6a7e3",
                "0173b44bc0f128f3"
            ]
        ]
    },
    {
        "id": "2187fb773391b0a1",
        "type": "function",
        "z": "9fb701b29f864573",
        "name": "",
        "func": "let estadoAnterior = context.get('onoff')===undefined? msg.payload : context.get('onoff');\ncontext.set('onoff',msg.payload)\n\nif (estadoAnterior != msg.payload){\n    let msgAnterior={payload:estadoAnterior}\n    msg.payload=null\n    return [msgAnterior, msg];\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1700,
        "y": 620,
        "wires": [
            [
                "b1f46f2d20d6a7e3"
            ],
            [
                "1608be39dae1943b"
            ]
        ]
    },
    {
        "id": "b1f46f2d20d6a7e3",
        "type": "function",
        "z": "9fb701b29f864573",
        "name": "",
        "func": "msg.topic='Vision (running strips)'\nif (msg.payload>0){\n    msg.payload=msg.payload*4\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2060,
        "y": 620,
        "wires": [
            [
                "1eacd060f44f24fd",
                "6e4d0c4b71f04262"
            ]
        ]
    },
    {
        "id": "bb24a7ec039eba1a",
        "type": "comment",
        "z": "9fb701b29f864573",
        "name": "ppm",
        "info": "",
        "x": 590,
        "y": 1180,
        "wires": []
    },
    {
        "id": "d269d4a8e81f6f25",
        "type": "comment",
        "z": "9fb701b29f864573",
        "name": "pph",
        "info": "",
        "x": 1250,
        "y": 1180,
        "wires": []
    },
    {
        "id": "ebce021a4d4bcc12",
        "type": "comment",
        "z": "9fb701b29f864573",
        "name": "ON/OFF",
        "info": "",
        "x": 1540,
        "y": 40,
        "wires": []
    },
    {
        "id": "2dc20d569d85d72f",
        "type": "comment",
        "z": "9fb701b29f864573",
        "name": "Contador y estado",
        "info": "",
        "x": 1190,
        "y": 40,
        "wires": []
    },
    {
        "id": "eb7cd6cf43a51512",
        "type": "comment",
        "z": "9fb701b29f864573",
        "name": "calculo de ppm y pph",
        "info": "",
        "x": 820,
        "y": 40,
        "wires": []
    },
    {
        "id": "431632cf1b0bd29f",
        "type": "inject",
        "z": "9fb701b29f864573",
        "name": "Interval",
        "props": [],
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "x": 1580,
        "y": 1280,
        "wires": [
            [
                "801f0865431a8ed7",
                "0e064e557beb2db4",
                "9860069acc0ade72",
                "4fc1216ad5f11ce3",
                "a75cc7dceb366e7b",
                "4a61d393cd99dd61"
            ]
        ]
    },
    {
        "id": "801f0865431a8ed7",
        "type": "change",
        "z": "9fb701b29f864573",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "monitoreo.HEADER_1.ppm",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1800,
        "y": 1280,
        "wires": [
            [
                "34412363db3468e3"
            ]
        ]
    },
    {
        "id": "0e064e557beb2db4",
        "type": "change",
        "z": "9fb701b29f864573",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "monitoreo.VISION_STRIP_1.ppm",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Strips",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1800,
        "y": 1420,
        "wires": [
            [
                "ee543b81d4a4102a"
            ]
        ]
    },
    {
        "id": "9860069acc0ade72",
        "type": "change",
        "z": "9fb701b29f864573",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "monitoreo.VISION_REJECTED_1.ppm",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Rejected",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1800,
        "y": 1520,
        "wires": [
            [
                "7a45b9e6ddc2f55d"
            ]
        ]
    },
    {
        "id": "24a47644e35c990d",
        "type": "comment",
        "z": "9fb701b29f864573",
        "name": "ppm",
        "info": "",
        "x": 1990,
        "y": 1180,
        "wires": []
    },
    {
        "id": "34412363db3468e3",
        "type": "ui_chart",
        "z": "9fb701b29f864573",
        "name": "",
        "group": "b6f2f3c56f4a2778",
        "order": 0,
        "width": "30",
        "height": "3",
        "label": "Header",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "10.5",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 2000,
        "y": 1280,
        "wires": [
            []
        ]
    },
    {
        "id": "ee543b81d4a4102a",
        "type": "ui_chart",
        "z": "9fb701b29f864573",
        "name": "Vision",
        "group": "b6f2f3c56f4a2778",
        "order": 0,
        "width": "30",
        "height": "3",
        "label": "Vision",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "10.5",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#d63d3d",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1990,
        "y": 1400,
        "wires": [
            []
        ]
    },
    {
        "id": "022ce3170a1c06a5",
        "type": "function",
        "z": "9fb701b29f864573",
        "name": "",
        "func": "msg.topic='Header'\nif (msg.payload>0){\n    msg.payload=msg.payload*1\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2060,
        "y": 100,
        "wires": [
            [
                "1eacd060f44f24fd",
                "8e0a1e33745481b6"
            ]
        ]
    },
    {
        "id": "c3c929dedebb0ff3",
        "type": "inject",
        "z": "9fb701b29f864573",
        "name": "interval",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "interval",
        "payload": "",
        "payloadType": "date",
        "x": 1540,
        "y": 80,
        "wires": [
            [
                "fe1ea7d7eb450a1f"
            ]
        ]
    },
    {
        "id": "cab679d0155f37ef",
        "type": "function",
        "z": "9fb701b29f864573",
        "name": "",
        "func": "if (msg.topic=='interval'){\n    context.set('onoff',context.get('onoff') || 0)\n    msg.payload = context.get('onoff')\n    return msg;\n}else{\n    //context.set('onoff',msg.payload || 0)\n    //msg.payload = context.get('onoff')\n    msg.topic='ValueChanged'\n    \n    let estadoAnterior = context.get('onoff')===undefined? msg.payload : context.get('onoff');\n    context.set('onoff',msg.payload || 0)\n\n    if (estadoAnterior != msg.payload){\n        msg.estadoAnterior=estadoAnterior;\n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1540,
        "y": 640,
        "wires": [
            [
                "ed744675cd129a01",
                "2187fb773391b0a1"
            ]
        ]
    },
    {
        "id": "f0d55b0145845afe",
        "type": "inject",
        "z": "9fb701b29f864573",
        "name": "interval",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "interval",
        "payload": "",
        "payloadType": "date",
        "x": 1540,
        "y": 600,
        "wires": [
            [
                "cab679d0155f37ef"
            ]
        ]
    },
    {
        "id": "d38ee38beaf74e73",
        "type": "inject",
        "z": "9fb701b29f864573",
        "name": "reset",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 07 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1790,
        "y": 40,
        "wires": [
            [
                "88e689e53b61f859"
            ]
        ]
    },
    {
        "id": "88e689e53b61f859",
        "type": "function",
        "z": "9fb701b29f864573",
        "name": "",
        "func": "msg.payload=[];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2060,
        "y": 40,
        "wires": [
            [
                "1eacd060f44f24fd",
                "34412363db3468e3",
                "ee543b81d4a4102a",
                "7a45b9e6ddc2f55d",
                "f8665e280a900f90"
            ]
        ]
    },
    {
        "id": "45afc9de1abdd8ef",
        "type": "delay",
        "z": "9fb701b29f864573",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1870,
        "y": 320,
        "wires": [
            [
                "754680ccf4fb7244"
            ]
        ]
    },
    {
        "id": "9704b537a6f7d85c",
        "type": "delay",
        "z": "9fb701b29f864573",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1870,
        "y": 120,
        "wires": [
            [
                "022ce3170a1c06a5"
            ]
        ]
    },
    {
        "id": "b30d974ca873c45c",
        "type": "delay",
        "z": "9fb701b29f864573",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1870,
        "y": 480,
        "wires": [
            [
                "d3bf54d36c5012de"
            ]
        ]
    },
    {
        "id": "1608be39dae1943b",
        "type": "delay",
        "z": "9fb701b29f864573",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1870,
        "y": 640,
        "wires": [
            [
                "b1f46f2d20d6a7e3"
            ]
        ]
    },
    {
        "id": "b7aadbc8960742a5",
        "type": "comment",
        "z": "9fb701b29f864573",
        "name": "PLC",
        "info": "",
        "x": 130,
        "y": 1940,
        "wires": []
    },
    {
        "id": "8c4ab66c2209af8c",
        "type": "eth-ip in",
        "z": "9fb701b29f864573",
        "endpoint": "a788790a5efc8671",
        "mode": "all",
        "variable": "",
        "program": "",
        "name": "OMRON",
        "x": 140,
        "y": 2000,
        "wires": [
            [
                "fce02b4d7a87e784",
                "f77f8e3711d00dd2",
                "69ccbd4c00a504d7",
                "bae19bc837d242ac",
                "e0a00cd5b198fdb0",
                "eddb527f0418a666",
                "05e81b9e0db1934a"
            ]
        ]
    },
    {
        "id": "b9dfcd07abed104a",
        "type": "catch",
        "z": "9fb701b29f864573",
        "name": "Catch_PLC",
        "scope": [
            "8c4ab66c2209af8c"
        ],
        "uncaught": false,
        "x": 150,
        "y": 2520,
        "wires": [
            [
                "50ee0a581b2cf3ae"
            ]
        ]
    },
    {
        "id": "fce02b4d7a87e784",
        "type": "function",
        "z": "9fb701b29f864573",
        "name": "ON_OFF",
        "func": "msg.payload = msg.payload[\"DATABASE.ON_OFF_ARM\"]?1:0;\nmsg.topic = \"ON_OFF\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 2000,
        "wires": [
            [
                "9a4be89cbd162130",
                "25775a1d7a297a21"
            ]
        ]
    },
    {
        "id": "f77f8e3711d00dd2",
        "type": "function",
        "z": "9fb701b29f864573",
        "name": "SPEED",
        "func": "msg.payload = msg.payload[\"DATABASE.SPEED_NAILS_MINUTE\"];\nmsg.topic = \"SPEED\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 2080,
        "wires": [
            [
                "c1fc28a6efa9b05c",
                "72ac23fce8356fd3"
            ]
        ]
    },
    {
        "id": "05e81b9e0db1934a",
        "type": "function",
        "z": "9fb701b29f864573",
        "name": "BATCH_COMPLETE",
        "func": "msg.payload = msg.payload[\"DATABASE.BATCH_COMPLETE\"];\nmsg.topic = \"BATCH_COMPLETE\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 2440,
        "wires": [
            [
                "511a28437f24eda8"
            ]
        ]
    },
    {
        "id": "eddb527f0418a666",
        "type": "function",
        "z": "9fb701b29f864573",
        "name": "COMM_COUNTER",
        "func": "msg.payload = msg.payload[\"DATABASE.COMM_COUNTER_EQ\"];\nmsg.topic = \"COMM_COUNTER\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 2400,
        "wires": [
            [
                "1f1d985f2a7f9862"
            ]
        ]
    },
    {
        "id": "e0a00cd5b198fdb0",
        "type": "function",
        "z": "9fb701b29f864573",
        "name": "PACK_COMPLETED",
        "func": "msg.payload = msg.payload[\"DATABASE.BOX_COMPLETED\"]?1:0;\nmsg.topic = \"PACK_COMPLETED\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 2320,
        "wires": [
            [
                "8b3152dd64c1dd65",
                "96eb9997c4dc63db"
            ]
        ]
    },
    {
        "id": "bae19bc837d242ac",
        "type": "function",
        "z": "9fb701b29f864573",
        "name": "PACK_PRODUCTION",
        "func": "msg.payload = msg.payload[\"DATABASE.BOX_PRODUCTION\"];\nmsg.topic = \"PACK_PRODUCTION\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 2240,
        "wires": [
            [
                "f99a50cb3e35f7da",
                "5bb47dad924cbcbe"
            ]
        ]
    },
    {
        "id": "69ccbd4c00a504d7",
        "type": "function",
        "z": "9fb701b29f864573",
        "name": "UNIT_PRODUCTION",
        "func": "msg.payload = msg.payload[\"DATABASE.NAIL_PRODUCTION\"];\nmsg.topic = \"UNIT_PRODUCTION\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 2160,
        "wires": [
            [
                "97e77ca41f847b5e",
                "57c2eb80c28c67cf"
            ]
        ]
    },
    {
        "id": "9a4be89cbd162130",
        "type": "ui_text",
        "z": "9fb701b29f864573",
        "group": "cc47106f07b78728",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "{{msg.topic}}",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 670,
        "y": 2000,
        "wires": []
    },
    {
        "id": "1f1d985f2a7f9862",
        "type": "ui_text",
        "z": "9fb701b29f864573",
        "group": "cc47106f07b78728",
        "order": 6,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "{{msg.topic}}",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 670,
        "y": 2400,
        "wires": []
    },
    {
        "id": "8b3152dd64c1dd65",
        "type": "ui_text",
        "z": "9fb701b29f864573",
        "group": "cc47106f07b78728",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "{{msg.topic}}",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 670,
        "y": 2320,
        "wires": []
    },
    {
        "id": "f99a50cb3e35f7da",
        "type": "ui_text",
        "z": "9fb701b29f864573",
        "group": "cc47106f07b78728",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "{{msg.topic}}",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 670,
        "y": 2240,
        "wires": []
    },
    {
        "id": "97e77ca41f847b5e",
        "type": "ui_text",
        "z": "9fb701b29f864573",
        "group": "cc47106f07b78728",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "{{msg.topic}}",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 670,
        "y": 2160,
        "wires": []
    },
    {
        "id": "c1fc28a6efa9b05c",
        "type": "ui_text",
        "z": "9fb701b29f864573",
        "group": "cc47106f07b78728",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "{{msg.topic}}",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 670,
        "y": 2080,
        "wires": []
    },
    {
        "id": "511a28437f24eda8",
        "type": "ui_text",
        "z": "9fb701b29f864573",
        "group": "cc47106f07b78728",
        "order": 7,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "{{msg.topic}}",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 670,
        "y": 2440,
        "wires": []
    },
    {
        "id": "7a45b9e6ddc2f55d",
        "type": "ui_chart",
        "z": "9fb701b29f864573",
        "name": "Vision Rejected",
        "group": "b6f2f3c56f4a2778",
        "order": 0,
        "width": "30",
        "height": "3",
        "label": "Vision Rejected",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "10.5",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#d63d3d",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 2020,
        "y": 1520,
        "wires": [
            []
        ]
    },
    {
        "id": "50ee0a581b2cf3ae",
        "type": "ui_text",
        "z": "9fb701b29f864573",
        "group": "cc47106f07b78728",
        "order": 8,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Last error",
        "format": "{{error.message}}",
        "layout": "row-spread",
        "className": "",
        "x": 680,
        "y": 2520,
        "wires": []
    },
    {
        "id": "25775a1d7a297a21",
        "type": "link out",
        "z": "9fb701b29f864573",
        "name": "ON_OFF",
        "mode": "link",
        "links": [
            "3a9f0ae66bf9f3a5"
        ],
        "x": 635,
        "y": 2040,
        "wires": []
    },
    {
        "id": "ab023229a56ca4b7",
        "type": "link out",
        "z": "9fb701b29f864573",
        "name": "PACK_COMPLETED",
        "mode": "link",
        "links": [
            "5f8a38c55947c32a"
        ],
        "x": 875,
        "y": 2360,
        "wires": []
    },
    {
        "id": "3a9f0ae66bf9f3a5",
        "type": "link in",
        "z": "9fb701b29f864573",
        "name": "ON_OFF",
        "links": [
            "25775a1d7a297a21"
        ],
        "x": 505,
        "y": 940,
        "wires": [
            [
                "1ff42c4785d5266c",
                "d85e14375f6101d6"
            ]
        ]
    },
    {
        "id": "5f8a38c55947c32a",
        "type": "link in",
        "z": "9fb701b29f864573",
        "name": "PACK_COMPLETED",
        "links": [
            "ab023229a56ca4b7"
        ],
        "x": 505,
        "y": 980,
        "wires": [
            [
                "cb2f5e578b4466ae"
            ]
        ]
    },
    {
        "id": "1ff42c4785d5266c",
        "type": "ui_switch",
        "z": "9fb701b29f864573",
        "name": "ON_OFF",
        "label": "",
        "tooltip": "",
        "group": "5d195279b189ed80",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1260,
        "y": 920,
        "wires": [
            []
        ]
    },
    {
        "id": "cb2f5e578b4466ae",
        "type": "msg-speed",
        "z": "9fb701b29f864573",
        "name": "PPM",
        "frequency": "min",
        "interval": 1,
        "estimation": false,
        "ignore": false,
        "pauseAtStartup": false,
        "topicDependent": false,
        "x": 730,
        "y": 980,
        "wires": [
            [
                "3287e558d137c8f4"
            ],
            [
                "b8b911cecbfdb637"
            ]
        ]
    },
    {
        "id": "b8b911cecbfdb637",
        "type": "msg-speed",
        "z": "9fb701b29f864573",
        "name": "PPH",
        "frequency": "hour",
        "interval": 1,
        "estimation": false,
        "ignore": false,
        "pauseAtStartup": false,
        "topicDependent": false,
        "x": 850,
        "y": 1000,
        "wires": [
            [
                "6873fd59b1c90e63"
            ],
            [
                "516a55e95199c531"
            ]
        ]
    },
    {
        "id": "3287e558d137c8f4",
        "type": "function",
        "z": "9fb701b29f864573",
        "name": "",
        "func": "let monitoreo = flow.get('monitoreo')\nflow.set('flag',flow.get('flag') || {valor:'init'})\nlet flag = flow.get('flag')\nif (monitoreo){\n    flag.valor = 'monitoreo'\n    if(monitoreo.BOX_COMPLETED){\n        flag.valor = 'monitoreo.BOX_COMPLETED'\n        if (monitoreo.BOX_COMPLETED.ppm){\n            flag.valor = 'monitoreo.BOX_COMPLETED.ppm'\n            monitoreo.BOX_COMPLETED.ppm=msg.payload\n        }else{\n            monitoreo.BOX_COMPLETED['ppm'] = msg.payload\n        }\n    }else{\n        monitoreo['BOX_COMPLETED'] = {'ppm' : msg.payload}\n    }\n}else{\n    flag.valor = '!monitoreo'\n    flow.set('monitoreo',{'BOX_COMPLETED' : {ppm : msg.payload}})\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 960,
        "wires": [
            []
        ]
    },
    {
        "id": "6873fd59b1c90e63",
        "type": "function",
        "z": "9fb701b29f864573",
        "name": "",
        "func": "let monitoreo = flow.get('monitoreo')\nif (monitoreo){\n    if(monitoreo.BOX_COMPLETED){\n        if (monitoreo.BOX_COMPLETED.pph){\n            monitoreo.BOX_COMPLETED.pph=msg.payload\n        }else{\n            monitoreo.BOX_COMPLETED['pph'] = msg.payload\n        }\n    }else{\n        monitoreo['BOX_COMPLETED'] = {'pph' : msg.payload}\n    }\n}else{\n    flow.set('monitoreo',{'BOX_COMPLETED' : {pph : msg.payload}})\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 1000,
        "wires": [
            []
        ]
    },
    {
        "id": "59d71d12c65e1c45",
        "type": "inject",
        "z": "9fb701b29f864573",
        "name": "reset",
        "props": [
            {
                "p": "reset",
                "v": "1",
                "vt": "num"
            }
        ],
        "repeat": "",
        "crontab": "00 07 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 830,
        "y": 1040,
        "wires": [
            [
                "516a55e95199c531"
            ]
        ]
    },
    {
        "id": "516a55e95199c531",
        "type": "counter",
        "z": "9fb701b29f864573",
        "name": "",
        "init": "0",
        "step": "1",
        "lower": "",
        "upper": "",
        "mode": "increment",
        "outputs": 2,
        "x": 980,
        "y": 1040,
        "wires": [
            [
                "a3cecd35b93af0cc",
                "05e701759e0338f2"
            ],
            []
        ]
    },
    {
        "id": "a3cecd35b93af0cc",
        "type": "ui_text",
        "z": "9fb701b29f864573",
        "group": "2622bdaaceca2895",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "PACK_COMPLETED",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1180,
        "y": 1020,
        "wires": []
    },
    {
        "id": "27475159fa8f3073",
        "type": "ui_text",
        "z": "9fb701b29f864573",
        "group": "2e90b06c70c3dd34",
        "order": 6,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "PACK_COMPLETED",
        "format": "{{msg.payload.ppm}}",
        "layout": "row-spread",
        "className": "",
        "x": 640,
        "y": 1780,
        "wires": []
    },
    {
        "id": "6b4e74c0c70eb837",
        "type": "change",
        "z": "9fb701b29f864573",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "monitoreo.BOX_COMPLETED",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 400,
        "y": 1780,
        "wires": [
            [
                "27475159fa8f3073"
            ]
        ]
    },
    {
        "id": "668f139e6193f5f2",
        "type": "ui_text",
        "z": "9fb701b29f864573",
        "group": "0cfb7380f43ae1fd",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "PACK_COMPLETED",
        "label": "",
        "format": "{{msg.payload.pph}}",
        "layout": "col-center",
        "className": "",
        "x": 1300,
        "y": 1780,
        "wires": []
    },
    {
        "id": "20a7e353e7c669c8",
        "type": "change",
        "z": "9fb701b29f864573",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "monitoreo.BOX_COMPLETED",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1060,
        "y": 1780,
        "wires": [
            [
                "668f139e6193f5f2"
            ]
        ]
    },
    {
        "id": "96eb9997c4dc63db",
        "type": "rbe",
        "z": "9fb701b29f864573",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 670,
        "y": 2360,
        "wires": [
            [
                "8249b51e5402b2c4"
            ]
        ]
    },
    {
        "id": "8249b51e5402b2c4",
        "type": "switch",
        "z": "9fb701b29f864573",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 790,
        "y": 2360,
        "wires": [
            [
                "ab023229a56ca4b7"
            ]
        ]
    },
    {
        "id": "4fc1216ad5f11ce3",
        "type": "change",
        "z": "9fb701b29f864573",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "monitoreo.BOX_COMPLETED.ppm",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1800,
        "y": 1640,
        "wires": [
            [
                "f8665e280a900f90"
            ]
        ]
    },
    {
        "id": "f8665e280a900f90",
        "type": "ui_chart",
        "z": "9fb701b29f864573",
        "name": "Boxes",
        "group": "b6f2f3c56f4a2778",
        "order": 0,
        "width": "30",
        "height": "3",
        "label": "Boxes",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "10.5",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#d63d3d",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1990,
        "y": 1640,
        "wires": [
            []
        ]
    },
    {
        "id": "67ba6cf26bb0c0b6",
        "type": "function",
        "z": "9fb701b29f864573",
        "name": ".onoff",
        "func": "let monitoreo = flow.get('monitoreo')\nif (monitoreo){\n    if(monitoreo.HEADER_1){\n        if (monitoreo.HEADER_1.onoff){\n            monitoreo.HEADER_1.onoff=msg.payload\n        }else{\n            monitoreo.HEADER_1['onoff'] = msg.payload\n        }\n    }else{\n        monitoreo['HEADER_1'] = {'onoff' : msg.payload}\n    }\n}else{\n    flow.set('monitoreo',{'HEADER_1' : {onoff : msg.payload}})\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2050,
        "y": 160,
        "wires": [
            [
                "10e62dfaee3cf15f"
            ]
        ]
    },
    {
        "id": "d80d8a198eb1bf2f",
        "type": "function",
        "z": "9fb701b29f864573",
        "name": ".onoff",
        "func": "let monitoreo = flow.get('monitoreo')\nif (monitoreo){\n    if(monitoreo.THREADER_1){\n        if (monitoreo.THREADER_1.onoff){\n            monitoreo.THREADER_1.onoff=msg.payload\n        }else{\n            monitoreo.THREADER_1['onoff'] = msg.payload\n        }\n    }else{\n        monitoreo['THREADER_1'] = {'onoff' : msg.payload}\n    }\n}else{\n    flow.set('monitoreo',{'THREADER_1' : {onoff : msg.payload}})\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2050,
        "y": 360,
        "wires": [
            [
                "10e62dfaee3cf15f"
            ]
        ]
    },
    {
        "id": "5de302113963b56f",
        "type": "function",
        "z": "9fb701b29f864573",
        "name": ".onoff",
        "func": "let monitoreo = flow.get('monitoreo')\nif (monitoreo){\n    if(monitoreo.COLLATOR_1){\n        if (monitoreo.COLLATOR_1.onoff){\n            monitoreo.COLLATOR_1.onoff=msg.payload\n        }else{\n            monitoreo.COLLATOR_1['onoff'] = msg.payload\n        }\n    }else{\n        monitoreo['COLLATOR_1'] = {'onoff' : msg.payload}\n    }\n}else{\n    flow.set('monitoreo',{'COLLATOR_1' : {onoff : msg.payload}})\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2050,
        "y": 520,
        "wires": [
            [
                "10e62dfaee3cf15f"
            ]
        ]
    },
    {
        "id": "0173b44bc0f128f3",
        "type": "function",
        "z": "9fb701b29f864573",
        "name": ".onoff",
        "func": "let monitoreo = flow.get('monitoreo')\nif (monitoreo){\n    if(monitoreo.VISION_STRIP_1){\n        if (monitoreo.VISION_STRIP_1.onoff){\n            monitoreo.VISION_STRIP_1.onoff=msg.payload\n        }else{\n            monitoreo.VISION_STRIP_1['onoff'] = msg.payload\n        }\n    }else{\n        monitoreo['VISION_STRIP_1'] = {'onoff' : msg.payload}\n    }\n}else{\n    flow.set('monitoreo',{'VISION_STRIP_1' : {onoff : msg.payload}})\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2050,
        "y": 680,
        "wires": [
            [
                "10e62dfaee3cf15f"
            ]
        ]
    },
    {
        "id": "9e9bfe10d9310f0a",
        "type": "delay",
        "z": "9fb701b29f864573",
        "name": "",
        "pauseType": "delay",
        "timeout": "400",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1870,
        "y": 980,
        "wires": [
            [
                "f14109dfe0e53e97",
                "58af32dc28a32545"
            ]
        ]
    },
    {
        "id": "02b072d609abe8cd",
        "type": "function",
        "z": "9fb701b29f864573",
        "name": "",
        "func": "let estadoAnterior = context.get('onoff')===undefined? msg.payload : context.get('onoff');\ncontext.set('onoff',msg.payload)\n\nif (estadoAnterior != msg.payload){\n    let msgAnterior={payload:estadoAnterior}\n    msg.payload=null\n    return [msgAnterior, msg];\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1700,
        "y": 920,
        "wires": [
            [
                "f14109dfe0e53e97"
            ],
            [
                "83cec125fe1e9c13"
            ]
        ]
    },
    {
        "id": "f14109dfe0e53e97",
        "type": "function",
        "z": "9fb701b29f864573",
        "name": "",
        "func": "msg.topic='Robot'\nif (msg.payload>0){\n    msg.payload=msg.payload*5\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2060,
        "y": 920,
        "wires": [
            [
                "1eacd060f44f24fd"
            ]
        ]
    },
    {
        "id": "d85e14375f6101d6",
        "type": "function",
        "z": "9fb701b29f864573",
        "name": "",
        "func": "if (msg.topic=='interval'){\n    context.set('onoff',context.get('onoff') || 0)\n    msg.payload = context.get('onoff')\n    return msg;\n}else{\n    //context.set('onoff',msg.payload || 0)\n    //msg.payload = context.get('onoff')\n    msg.topic='ValueChanged'\n    \n    let estadoAnterior = context.get('onoff')===undefined? msg.payload : context.get('onoff');\n    context.set('onoff',msg.payload || 0)\n\n    if (estadoAnterior != msg.payload){\n        msg.estadoAnterior=estadoAnterior;\n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1540,
        "y": 940,
        "wires": [
            [
                "9e9bfe10d9310f0a",
                "02b072d609abe8cd"
            ]
        ]
    },
    {
        "id": "bfd2ae3f58e00360",
        "type": "inject",
        "z": "9fb701b29f864573",
        "name": "interval",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "interval",
        "payload": "",
        "payloadType": "date",
        "x": 1540,
        "y": 900,
        "wires": [
            [
                "d85e14375f6101d6"
            ]
        ]
    },
    {
        "id": "83cec125fe1e9c13",
        "type": "delay",
        "z": "9fb701b29f864573",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1870,
        "y": 940,
        "wires": [
            [
                "f14109dfe0e53e97"
            ]
        ]
    },
    {
        "id": "58af32dc28a32545",
        "type": "function",
        "z": "9fb701b29f864573",
        "name": ".onoff",
        "func": "let monitoreo = flow.get('monitoreo')\nif (monitoreo){\n    if(monitoreo.ROBOT){\n        if (monitoreo.ROBOT.onoff){\n            monitoreo.ROBOT.onoff=msg.payload\n        }else{\n            monitoreo.ROBOT['onoff'] = msg.payload\n        }\n    }else{\n        monitoreo['ROBOT'] = {'onoff' : msg.payload}\n    }\n}else{\n    flow.set('monitoreo',{'ROBOT' : {onoff : msg.payload}})\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2050,
        "y": 980,
        "wires": [
            [
                "10e62dfaee3cf15f"
            ]
        ]
    },
    {
        "id": "33413f4c9e08d5c4",
        "type": "function",
        "z": "9fb701b29f864573",
        "name": ".count",
        "func": "let monitoreo = flow.get('monitoreo')\nif (monitoreo){\n    if(monitoreo.HEADER_1){\n        if (monitoreo.HEADER_1.count){\n            monitoreo.HEADER_1.count=msg.payload\n        }else{\n            monitoreo.HEADER_1['count'] = msg.payload\n        }\n    }else{\n        monitoreo['HEADER_1'] = {'count' : msg.payload}\n    }\n}else{\n    flow.set('monitoreo',{'HEADER_1' : {count : msg.payload}})\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1150,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "d896dd9e70ab56b8",
        "type": "function",
        "z": "9fb701b29f864573",
        "name": ".count",
        "func": "let monitoreo = flow.get('monitoreo')\nif (monitoreo){\n    if(monitoreo.THREADER_1){\n        if (monitoreo.THREADER_1.count){\n            monitoreo.THREADER_1.count=msg.payload\n        }else{\n            monitoreo.THREADER_1['count'] = msg.payload\n        }\n    }else{\n        monitoreo['THREADER_1'] = {'count' : msg.payload}\n    }\n}else{\n    flow.set('monitoreo',{'THREADER_1' : {count : msg.payload}})\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1150,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "ddf05e8512b37086",
        "type": "function",
        "z": "9fb701b29f864573",
        "name": ".count",
        "func": "let monitoreo = flow.get('monitoreo')\nif (monitoreo){\n    if(monitoreo.COLLATOR_1){\n        if (monitoreo.COLLATOR_1.count){\n            monitoreo.COLLATOR_1.count=msg.payload\n        }else{\n            monitoreo.COLLATOR_1['count'] = msg.payload\n        }\n    }else{\n        monitoreo['COLLATOR_1'] = {'count' : msg.payload}\n    }\n}else{\n    flow.set('monitoreo',{'COLLATOR_1' : {count : msg.payload}})\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1130,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "3a41b7d660ae9b22",
        "type": "function",
        "z": "9fb701b29f864573",
        "name": ".count",
        "func": "let monitoreo = flow.get('monitoreo')\nif (monitoreo){\n    if(monitoreo.VISION_STRIP_1){\n        if (monitoreo.VISION_STRIP_1.count){\n            monitoreo.VISION_STRIP_1.count=msg.payload\n        }else{\n            monitoreo.VISION_STRIP_1['count'] = msg.payload\n        }\n    }else{\n        monitoreo['VISION_STRIP_1'] = {'count' : msg.payload}\n    }\n}else{\n    flow.set('monitoreo',{'VISION_STRIP_1' : {count : msg.payload}})\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1130,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "46b3ca28e0361db9",
        "type": "function",
        "z": "9fb701b29f864573",
        "name": ".count",
        "func": "let monitoreo = flow.get('monitoreo')\nif (monitoreo){\n    if(monitoreo.VISION_REJECTED_1){\n        if (monitoreo.VISION_REJECTED_1.count){\n            monitoreo.VISION_REJECTED_1.count=msg.payload\n        }else{\n            monitoreo.VISION_REJECTED_1['count'] = msg.payload\n        }\n    }else{\n        monitoreo['VISION_REJECTED_1'] = {'count' : msg.payload}\n    }\n}else{\n    flow.set('monitoreo',{'VISION_REJECTED_1' : {count : msg.payload}})\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1130,
        "y": 880,
        "wires": [
            []
        ]
    },
    {
        "id": "05e701759e0338f2",
        "type": "function",
        "z": "9fb701b29f864573",
        "name": ".count",
        "func": "let monitoreo = flow.get('monitoreo')\nif (monitoreo){\n    if(monitoreo.BOX_COMPLETED){\n        if (monitoreo.BOX_COMPLETED.count){\n            monitoreo.BOX_COMPLETED.count=msg.payload\n        }else{\n            monitoreo.BOX_COMPLETED['count'] = msg.payload\n        }\n    }else{\n        monitoreo['BOX_COMPLETED'] = {'count' : msg.payload}\n    }\n}else{\n    flow.set('monitoreo',{'BOX_COMPLETED' : {count : msg.payload}})\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1130,
        "y": 1060,
        "wires": [
            []
        ]
    },
    {
        "id": "8c59ed5ae36c24b4",
        "type": "function",
        "z": "9fb701b29f864573",
        "name": "QueryBitSeñal_I",
        "func": "let monitoreo = flow.get(\"monitoreo\") \nlet idCelda = flow.get(\"IdCelda\") \n\nconst date = new Date(); // Or the date you'd like converted.\nconst fecha = new Date(date.getTime() - (date.getTimezoneOffset() * 60000)).toISOString();\n\n\nif (idCelda){\n    msg.payload = \n                {\n                    \"sp_name\":\"AswSch.ASW_BitSeñal_I\",\n                    \"params\":\n                    {\n                        \"psIdCelda\" : idCelda\n    \t\t            ,\"pnHeader_Status\" : monitoreo.HEADER_1.onoff===undefined?null:monitoreo.HEADER_1.onoff\n    \t\t            ,\"pnHeader_Speed\" : monitoreo.HEADER_1.ppm===undefined?null:monitoreo.HEADER_1.ppm\n    \t\t            ,\"pnHeader_Count\" : monitoreo.HEADER_1.count===undefined?null:monitoreo.HEADER_1.count\n    \t\t            ,\"pnThreader_Status\" : monitoreo.THREADER_1.onoff===undefined?null:monitoreo.THREADER_1.onoff\n    \t\t            ,\"pnCollator_Status\" : monitoreo.COLLATOR_1.onoff===undefined?null:monitoreo.COLLATOR_1.onoff\n    \t\t            ,\"pnVision_Strip_Status\" : monitoreo.VISION_STRIP_1.onoff===undefined?null:monitoreo.VISION_STRIP_1.onoff\n    \t\t            ,\"pnVision_Strip_Count\" : monitoreo.VISION_STRIP_1.count===undefined?null:monitoreo.VISION_STRIP_1.count\n    \t\t            ,\"pnVision_Strip_Rejectad\" : monitoreo.VISION_REJECTED_1.count===undefined?null:monitoreo.VISION_REJECTED_1.count\n    \t\t            ,\"pnRobot_Status\" : monitoreo.ROBOT.onoff===undefined?null:monitoreo.ROBOT.onoff\n    \t\t            ,\"pnRobot_Speed\" : monitoreo.ROBOT.speed===undefined?null:monitoreo.ROBOT.speed\n    \t\t            ,\"pnRobot_Nail_Production\" : monitoreo.ROBOT.nails===undefined?null:monitoreo.ROBOT.nails\n    \t\t            ,\"pnRobot_Box_Production\" : monitoreo.ROBOT.boxes===undefined?null:monitoreo.ROBOT.boxes\n    \t\t            ,\"pnRobot_Box_Completed_Count\" : monitoreo.BOX_COMPLETED.count===undefined?null:monitoreo.BOX_COMPLETED.count\n    \t\t            ,\"pnFechaHoraAvisor\" : fecha\n                       \n                    }\n                }\n    \n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1240,
        "y": 2080,
        "wires": [
            [
                "e8a95ee333c7a1b4"
            ]
        ]
    },
    {
        "id": "e8a95ee333c7a1b4",
        "type": "subflow:6271978d.4d6ac8",
        "z": "9fb701b29f864573",
        "name": "",
        "env": [],
        "x": 1430,
        "y": 2080,
        "wires": [
            [
                "11fcb22c6026d8fc"
            ]
        ]
    },
    {
        "id": "11fcb22c6026d8fc",
        "type": "MSSQL",
        "z": "9fb701b29f864573",
        "mssqlCN": "955d262e.b17988",
        "name": "ASWMSSQL",
        "outField": "payload",
        "returnType": "0",
        "throwErrors": "0",
        "query": "",
        "modeOpt": "",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "msg",
        "paramsOpt": "queryParams",
        "paramsOptType": "msg",
        "params": [],
        "x": 1610,
        "y": 2080,
        "wires": [
            []
        ]
    },
    {
        "id": "756ac2b86cd58eee",
        "type": "comment",
        "z": "9fb701b29f864573",
        "name": "Bitacoreo",
        "info": "",
        "x": 1060,
        "y": 1940,
        "wires": []
    },
    {
        "id": "526694724b65edae",
        "type": "inject",
        "z": "9fb701b29f864573",
        "name": "",
        "props": [
            {
                "p": "fecha",
                "v": "$now()",
                "vt": "jsonata"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 1070,
        "y": 2080,
        "wires": [
            [
                "8c59ed5ae36c24b4"
            ]
        ]
    },
    {
        "id": "72ac23fce8356fd3",
        "type": "function",
        "z": "9fb701b29f864573",
        "name": ".speed",
        "func": "let monitoreo = flow.get('monitoreo')\nif (monitoreo){\n    if(monitoreo.ROBOT){\n        if (monitoreo.ROBOT.speed){\n            monitoreo.ROBOT.speed=msg.payload\n        }else{\n            monitoreo.ROBOT['speed'] = msg.payload\n        }\n    }else{\n        monitoreo['ROBOT'] = {'speed' : msg.payload}\n    }\n}else{\n    flow.set('monitoreo',{'ROBOT' : {speed : msg.payload}})\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 2120,
        "wires": [
            []
        ]
    },
    {
        "id": "57c2eb80c28c67cf",
        "type": "function",
        "z": "9fb701b29f864573",
        "name": ".nails",
        "func": "let monitoreo = flow.get('monitoreo')\nif (monitoreo){\n    if(monitoreo.ROBOT){\n        if (monitoreo.ROBOT.nails){\n            monitoreo.ROBOT.nails=msg.payload\n        }else{\n            monitoreo.ROBOT['nails'] = msg.payload\n        }\n    }else{\n        monitoreo['ROBOT'] = {'nails' : msg.payload}\n    }\n}else{\n    flow.set('monitoreo',{'ROBOT' : {nails : msg.payload}})\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 2200,
        "wires": [
            []
        ]
    },
    {
        "id": "5bb47dad924cbcbe",
        "type": "function",
        "z": "9fb701b29f864573",
        "name": ".boxes",
        "func": "let monitoreo = flow.get('monitoreo')\nif (monitoreo){\n    if(monitoreo.ROBOT){\n        if (monitoreo.ROBOT.boxes){\n            monitoreo.ROBOT.boxes=msg.payload\n        }else{\n            monitoreo.ROBOT['boxes'] = msg.payload\n        }\n    }else{\n        monitoreo['ROBOT'] = {'boxes' : msg.payload}\n    }\n}else{\n    flow.set('monitoreo',{'ROBOT' : {boxes : msg.payload}})\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 2280,
        "wires": [
            []
        ]
    },
    {
        "id": "5ad030e525049e16",
        "type": "inject",
        "z": "9fb701b29f864573",
        "name": "ConfVariablesLocales",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1280,
        "y": 1980,
        "wires": [
            [
                "f0d37fc2e5d9f818"
            ]
        ]
    },
    {
        "id": "89287504ba673aa2",
        "type": "function",
        "z": "9fb701b29f864573",
        "name": "ASW_CU4_Pag2_ConfiguracionTablet_Sel",
        "func": "let dirIp = msg.payload.internalIPv4\n\nmsg.payload = {\"sp_name\":\"AswSch.ASW_CU4_Pag2_ConfiguracionTablet_Sel\",\"params\":{\"PsDirIp\":dirIp}}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1750,
        "y": 1980,
        "wires": [
            [
                "43ce3e9cc6728c39"
            ]
        ]
    },
    {
        "id": "43ce3e9cc6728c39",
        "type": "subflow:6271978d.4d6ac8",
        "z": "9fb701b29f864573",
        "name": "",
        "env": [],
        "x": 2070,
        "y": 1980,
        "wires": [
            [
                "1ddd636ee5497683"
            ]
        ]
    },
    {
        "id": "1ddd636ee5497683",
        "type": "MSSQL",
        "z": "9fb701b29f864573",
        "mssqlCN": "955d262e.b17988",
        "name": "ASWMSSQL",
        "outField": "payload",
        "returnType": "0",
        "throwErrors": "0",
        "query": "",
        "modeOpt": "",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "msg",
        "paramsOpt": "queryParams",
        "paramsOptType": "msg",
        "params": [],
        "x": 2250,
        "y": 1980,
        "wires": [
            [
                "f49a16425ef218b4"
            ]
        ]
    },
    {
        "id": "7d941ec505155c35",
        "type": "comment",
        "z": "9fb701b29f864573",
        "name": "SE CONSULTA LA CONFIGURACION EN SQLSERVER Y SE GUARDA EN BD LOCAL",
        "info": "",
        "x": 1460,
        "y": 1940,
        "wires": []
    },
    {
        "id": "f0d37fc2e5d9f818",
        "type": "ip",
        "z": "9fb701b29f864573",
        "name": "ip",
        "https": false,
        "timeout": "5000",
        "internalIPv4": true,
        "internalIPv6": false,
        "publicIPv4": false,
        "publicIPv6": false,
        "x": 1490,
        "y": 1980,
        "wires": [
            [
                "89287504ba673aa2"
            ]
        ]
    },
    {
        "id": "f49a16425ef218b4",
        "type": "function",
        "z": "9fb701b29f864573",
        "name": "SetFlowVariables",
        "func": "flow.set(\"IdCelda\", msg.payload[0].IdCelda)\nflow.set(\"Dispositivo\", msg.payload[0].Dispositivo)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2450,
        "y": 1980,
        "wires": [
            []
        ]
    },
    {
        "id": "fff4e6f68cde9275",
        "type": "switch",
        "z": "9fb701b29f864573",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 570,
        "y": 120,
        "wires": [
            [
                "0dc913400ba047b1"
            ]
        ]
    },
    {
        "id": "afaae209d8e14f67",
        "type": "switch",
        "z": "9fb701b29f864573",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 590,
        "y": 620,
        "wires": [
            [
                "5b0baa27a8283775"
            ]
        ]
    },
    {
        "id": "1d142f685becfd2f",
        "type": "switch",
        "z": "9fb701b29f864573",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 590,
        "y": 800,
        "wires": [
            [
                "d5d10c4de270d2b8"
            ]
        ]
    },
    {
        "id": "681cc817133ec6cd",
        "type": "link out",
        "z": "9fb701b29f864573",
        "name": "",
        "links": [
            "62d54229760bd1c6"
        ],
        "x": 2435,
        "y": 80,
        "wires": []
    },
    {
        "id": "62d54229760bd1c6",
        "type": "link in",
        "z": "9fb701b29f864573",
        "name": "",
        "links": [
            "681cc817133ec6cd"
        ],
        "x": 995,
        "y": 2200,
        "wires": [
            [
                "ceab38497acda3e2"
            ]
        ]
    },
    {
        "id": "1ae4307058ccab28",
        "type": "comment",
        "z": "9fb701b29f864573",
        "name": "OnValueChanged",
        "info": "",
        "x": 1040,
        "y": 2140,
        "wires": []
    },
    {
        "id": "d240437c7c7d00ea",
        "type": "comment",
        "z": "9fb701b29f864573",
        "name": "OnValueChanged",
        "info": "",
        "x": 2500,
        "y": 40,
        "wires": []
    },
    {
        "id": "10e62dfaee3cf15f",
        "type": "switch",
        "z": "9fb701b29f864573",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "ValueChanged",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 2290,
        "y": 220,
        "wires": [
            [
                "681cc817133ec6cd"
            ]
        ]
    },
    {
        "id": "ceab38497acda3e2",
        "type": "delay",
        "z": "9fb701b29f864573",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 1110,
        "y": 2200,
        "wires": [
            [
                "8c59ed5ae36c24b4"
            ]
        ]
    },
    {
        "id": "a75cc7dceb366e7b",
        "type": "change",
        "z": "9fb701b29f864573",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "monitoreo.BOX_COMPLETED.count",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "BOX_COMPLETED",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1800,
        "y": 1720,
        "wires": [
            [
                "ae2831d5df40a6ca"
            ]
        ]
    },
    {
        "id": "ae2831d5df40a6ca",
        "type": "ui_chart",
        "z": "9fb701b29f864573",
        "name": "Boxes",
        "group": "b6f2f3c56f4a2778",
        "order": 0,
        "width": "30",
        "height": "3",
        "label": "Boxes Completed",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "10.5",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#d63d3d",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1990,
        "y": 1720,
        "wires": [
            []
        ]
    },
    {
        "id": "4a61d393cd99dd61",
        "type": "change",
        "z": "9fb701b29f864573",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "monitoreo.ROBOT.boxes",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1800,
        "y": 1760,
        "wires": [
            [
                "e0c3bb4b366cb7f3"
            ]
        ]
    },
    {
        "id": "e0c3bb4b366cb7f3",
        "type": "ui_chart",
        "z": "9fb701b29f864573",
        "name": "Boxes",
        "group": "b6f2f3c56f4a2778",
        "order": 0,
        "width": "30",
        "height": "3",
        "label": "PACK_PRODUCTION",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "10.5",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#d63d3d",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1990,
        "y": 1760,
        "wires": [
            []
        ]
    },
    {
        "id": "ac68eb9a39619280",
        "type": "rpi-gpio in",
        "z": "9fb701b29f864573",
        "name": "HEADER_1",
        "pin": "4",
        "intype": "tri",
        "debounce": "0",
        "read": true,
        "bcm": true,
        "x": 170,
        "y": 160,
        "wires": [
            [
                "f14a1b9aaa47e403"
            ]
        ]
    },
    {
        "id": "f14a1b9aaa47e403",
        "type": "switch",
        "z": "9fb701b29f864573",
        "name": "EsComfile",
        "property": "Dispositivo",
        "propertyType": "flow",
        "rules": [
            {
                "t": "eq",
                "v": "Comfile",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 1,
        "x": 330,
        "y": 160,
        "wires": [
            [
                "fff4e6f68cde9275"
            ]
        ]
    },
    {
        "id": "d5e3e71428b78992",
        "type": "switch",
        "z": "9fb701b29f864573",
        "name": "EsRaspberry",
        "property": "Dispositivo",
        "propertyType": "flow",
        "rules": [
            {
                "t": "eq",
                "v": "Raspberry",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 1,
        "x": 330,
        "y": 120,
        "wires": [
            [
                "fff4e6f68cde9275"
            ]
        ]
    },
    {
        "id": "37a39b03d9ee1d53",
        "type": "switch",
        "z": "9fb701b29f864573",
        "name": "EsRaspberry",
        "property": "Dispositivo",
        "propertyType": "flow",
        "rules": [
            {
                "t": "eq",
                "v": "Raspberry",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 1,
        "x": 350,
        "y": 300,
        "wires": [
            [
                "50fd1824c3b4ddf7"
            ]
        ]
    },
    {
        "id": "48d51ced747d7dc9",
        "type": "switch",
        "z": "9fb701b29f864573",
        "name": "EsComfile",
        "property": "Dispositivo",
        "propertyType": "flow",
        "rules": [
            {
                "t": "eq",
                "v": "Comfile",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 1,
        "x": 350,
        "y": 340,
        "wires": [
            [
                "50fd1824c3b4ddf7"
            ]
        ]
    },
    {
        "id": "5c755a0fe4b2ac57",
        "type": "switch",
        "z": "9fb701b29f864573",
        "name": "EsRaspberry",
        "property": "Dispositivo",
        "propertyType": "flow",
        "rules": [
            {
                "t": "eq",
                "v": "Raspberry",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 1,
        "x": 330,
        "y": 460,
        "wires": [
            [
                "1bf10bd391de6937"
            ]
        ]
    },
    {
        "id": "d97376b2d2230c79",
        "type": "switch",
        "z": "9fb701b29f864573",
        "name": "EsComfile",
        "property": "Dispositivo",
        "propertyType": "flow",
        "rules": [
            {
                "t": "eq",
                "v": "Comfile",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 1,
        "x": 330,
        "y": 500,
        "wires": [
            [
                "1bf10bd391de6937"
            ]
        ]
    },
    {
        "id": "94cfe861d4f17f8a",
        "type": "switch",
        "z": "9fb701b29f864573",
        "name": "EsRaspberry",
        "property": "Dispositivo",
        "propertyType": "flow",
        "rules": [
            {
                "t": "eq",
                "v": "Raspberry",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 1,
        "x": 370,
        "y": 620,
        "wires": [
            [
                "afaae209d8e14f67"
            ]
        ]
    },
    {
        "id": "c1826f7b62225bdf",
        "type": "switch",
        "z": "9fb701b29f864573",
        "name": "EsComfile",
        "property": "Dispositivo",
        "propertyType": "flow",
        "rules": [
            {
                "t": "eq",
                "v": "Comfile",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 1,
        "x": 370,
        "y": 660,
        "wires": [
            [
                "afaae209d8e14f67"
            ]
        ]
    },
    {
        "id": "12507565580b2f54",
        "type": "switch",
        "z": "9fb701b29f864573",
        "name": "EsRaspberry",
        "property": "Dispositivo",
        "propertyType": "flow",
        "rules": [
            {
                "t": "eq",
                "v": "Raspberry",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 1,
        "x": 390,
        "y": 800,
        "wires": [
            [
                "1d142f685becfd2f"
            ]
        ]
    },
    {
        "id": "54a2ea984c07dc70",
        "type": "switch",
        "z": "9fb701b29f864573",
        "name": "EsComfile",
        "property": "Dispositivo",
        "propertyType": "flow",
        "rules": [
            {
                "t": "eq",
                "v": "Comfile",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 1,
        "x": 390,
        "y": 840,
        "wires": [
            [
                "1d142f685becfd2f"
            ]
        ]
    },
    {
        "id": "d78fa8ccc06d6519",
        "type": "rpi-gpio in",
        "z": "9fb701b29f864573",
        "name": "VISION_REJECTED_1",
        "pin": "8",
        "intype": "tri",
        "debounce": "0",
        "read": true,
        "bcm": true,
        "x": 200,
        "y": 840,
        "wires": [
            [
                "54a2ea984c07dc70"
            ]
        ]
    },
    {
        "id": "f40b55dec6955af1",
        "type": "rpi-gpio in",
        "z": "9fb701b29f864573",
        "name": "VISION_STRIP_1",
        "pin": "7",
        "intype": "tri",
        "debounce": "0",
        "read": true,
        "bcm": true,
        "x": 190,
        "y": 660,
        "wires": [
            [
                "c1826f7b62225bdf"
            ]
        ]
    },
    {
        "id": "6aa79c45db059a1f",
        "type": "rpi-gpio in",
        "z": "9fb701b29f864573",
        "name": "COLLATOR_1",
        "pin": "6",
        "intype": "tri",
        "debounce": "1500",
        "read": true,
        "bcm": true,
        "x": 170,
        "y": 500,
        "wires": [
            [
                "d97376b2d2230c79"
            ]
        ]
    },
    {
        "id": "982806b9fe33a4bd",
        "type": "rpi-gpio in",
        "z": "9fb701b29f864573",
        "name": "THREADER_1",
        "pin": "5",
        "intype": "tri",
        "debounce": "1500",
        "read": true,
        "bcm": true,
        "x": 180,
        "y": 340,
        "wires": [
            [
                "48d51ced747d7dc9"
            ]
        ]
    },
    {
        "id": "2194fd8a208821dd",
        "type": "function",
        "z": "9fb701b29f864573",
        "name": "",
        "func": "let monitoreo = flow.get('monitoreo')\nif (monitoreo){\n    if(monitoreo.VISION_REJECTED_1){\n        if (monitoreo.VISION_REJECTED_1.count){\n            monitoreo.VISION_REJECTED_1.count=msg.payload\n        }else{\n            monitoreo.VISION_REJECTED_1['count'] = msg.payload\n        }\n    }else{\n        monitoreo['VISION_REJECTED_1'] = {'count' : msg.payload}\n    }\n}else{\n    flow.set('monitoreo',{'VISION_REJECTED_1' : {count : msg.payload}})\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1540,
        "y": 780,
        "wires": [
            []
        ]
    },
    {
        "id": "427cf73589e735d1",
        "type": "inject",
        "z": "9fb701b29f864573",
        "name": "interval",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "interval",
        "x": 1540,
        "y": 740,
        "wires": [
            [
                "2194fd8a208821dd"
            ]
        ]
    },
    {
        "id": "48c04c7639648f2a",
        "type": "function",
        "z": "9fb701b29f864573",
        "name": "",
        "func": "let monitoreo = flow.get('monitoreo')\nif (monitoreo){\n    if(monitoreo.BOX_COMPLETED){\n        if (monitoreo.BOX_COMPLETED.count){\n            monitoreo.BOX_COMPLETED.count=msg.payload\n        }else{\n            monitoreo.BOX_COMPLETED['count'] = msg.payload\n        }\n    }else{\n        monitoreo['BOX_COMPLETED'] = {'count' : msg.payload}\n    }\n}else{\n    flow.set('monitoreo',{'BOX_COMPLETED' : {count : msg.payload}})\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1540,
        "y": 1060,
        "wires": [
            []
        ]
    },
    {
        "id": "5af9bc432c90c286",
        "type": "inject",
        "z": "9fb701b29f864573",
        "name": "interval",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "interval",
        "x": 1540,
        "y": 1020,
        "wires": [
            [
                "48c04c7639648f2a"
            ]
        ]
    },
    {
        "id": "0d0ce50fe5232ba1",
        "type": "catch",
        "z": "9fb701b29f864573",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 140,
        "y": 2740,
        "wires": [
            [
                "cf92c52364a470ad"
            ]
        ]
    },
    {
        "id": "cf92c52364a470ad",
        "type": "function",
        "z": "9fb701b29f864573",
        "name": "Error Handler",
        "func": "node.warn(`ERROR NO CONTROLADO >  ${env.get(\"NAME\")} > ${JSON.stringify(msg)}`)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 2740,
        "wires": [
            []
        ]
    },
    {
        "id": "ce37455c094853f3",
        "type": "inject",
        "z": "0417ef263c3d97ea",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "300",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 110,
        "y": 220,
        "wires": [
            [
                "cd5d8c6987fba821"
            ]
        ]
    },
    {
        "id": "cd5d8c6987fba821",
        "type": "function",
        "z": "0417ef263c3d97ea",
        "name": "Count tables",
        "func": "msg[\"topic\"] = `\nSELECT COUNT(tbl_name) AS Tablas FROM sqlite_master WHERE tbl_name NOT LIKE 'sqlite_%'\n`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 220,
        "wires": [
            [
                "3a8a6f48721e03a8"
            ]
        ]
    },
    {
        "id": "3a8a6f48721e03a8",
        "type": "sqlite",
        "z": "0417ef263c3d97ea",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "CountTables",
        "x": 430,
        "y": 220,
        "wires": [
            [
                "99835151251274fb"
            ]
        ]
    },
    {
        "id": "99835151251274fb",
        "type": "switch",
        "z": "0417ef263c3d97ea",
        "name": "",
        "property": "payload[0].Tablas",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "gt",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 90,
        "y": 320,
        "wires": [
            [
                "57f59104f624669b"
            ],
            [
                "bbbd8e49bfd9edea"
            ]
        ]
    },
    {
        "id": "cb68e540b4cba904",
        "type": "comment",
        "z": "0417ef263c3d97ea",
        "name": "Ejecutar ultima major version",
        "info": "Si no existe ninguna tabla es una nueva instalacion y de debe crear la bd con el ultimo script de version mayor",
        "x": 320,
        "y": 280,
        "wires": []
    },
    {
        "id": "57f59104f624669b",
        "type": "function",
        "z": "0417ef263c3d97ea",
        "name": "GetMajorVersion",
        "func": "msg.payload = {\"sp_name\":\"AswSch.ASW_CU6_Pag1_ObtenerMajorVersion_Proc\"}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 320,
        "wires": [
            [
                "af610ebef697d7f4"
            ]
        ]
    },
    {
        "id": "af610ebef697d7f4",
        "type": "subflow:6271978d.4d6ac8",
        "z": "0417ef263c3d97ea",
        "name": "",
        "env": [],
        "x": 490,
        "y": 320,
        "wires": [
            [
                "661389f46703ed62"
            ]
        ]
    },
    {
        "id": "661389f46703ed62",
        "type": "MSSQL",
        "z": "0417ef263c3d97ea",
        "mssqlCN": "955d262e.b17988",
        "name": "CU6_Pag1_ObtenerMajorVersion_Proc",
        "outField": "payload",
        "returnType": "0",
        "throwErrors": "0",
        "query": "",
        "modeOpt": "",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "msg",
        "paramsOpt": "queryParams",
        "paramsOptType": "msg",
        "params": [],
        "x": 740,
        "y": 320,
        "wires": [
            [
                "26a7fc381cfee37b"
            ]
        ]
    },
    {
        "id": "26a7fc381cfee37b",
        "type": "function",
        "z": "0417ef263c3d97ea",
        "name": "SetMajorScriptTopic",
        "func": "msg.topic = msg.payload[0].MajorScript\nmsg.MajorVersion={\n    \"IdVersion\":msg.payload[0].IdVersion,\n    \"Version\":msg.payload[0].Version,\n    \"Major\":msg.payload[0].Major,\n    \"Minor\":msg.payload[0].Minor\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 320,
        "wires": [
            [
                "c9399ac1c0609d62"
            ]
        ]
    },
    {
        "id": "c9399ac1c0609d62",
        "type": "sqlite",
        "z": "0417ef263c3d97ea",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "batch",
        "sql": "",
        "name": "ExecuteMajor",
        "x": 1220,
        "y": 320,
        "wires": [
            [
                "9a44d232980be1fe"
            ]
        ]
    },
    {
        "id": "7cfb4bb3417bbad0",
        "type": "catch",
        "z": "0417ef263c3d97ea",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 1100,
        "y": 60,
        "wires": [
            [
                "5b2da0ce2147e01d"
            ]
        ]
    },
    {
        "id": "52a88366e360fb7e",
        "type": "comment",
        "z": "0417ef263c3d97ea",
        "name": "Actualizar en la tabla local la version actual",
        "info": "",
        "x": 360,
        "y": 380,
        "wires": []
    },
    {
        "id": "9a44d232980be1fe",
        "type": "function",
        "z": "0417ef263c3d97ea",
        "name": "DatosVersion",
        "func": "const date = new Date(); // Or the date you'd like converted.\nconst fecha = new Date(date.getTime() - (date.getTimezoneOffset() * 60000)).toISOString();\n\nmsg.params = {\n    $Id:msg.MajorVersion.IdVersion,\n    $Version:msg.MajorVersion.Version,\n    $Major:msg.MajorVersion.Major,\n    $Minor:msg.MajorVersion.Minor,\n    $FechaUltimaMod:fecha\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 420,
        "wires": [
            [
                "c633fd21f94d9acb"
            ]
        ]
    },
    {
        "id": "c633fd21f94d9acb",
        "type": "sqlite",
        "z": "0417ef263c3d97ea",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "prepared",
        "sql": "INSERT INTO ASWLite_TraVersion(Id,Version,Major,Minor,FechaUltimaMod) VALUES($Id, $Version, $Major, $Minor, $FechaUltimaMod)",
        "name": "InsertVersion",
        "x": 450,
        "y": 420,
        "wires": [
            [
                "85add8124f081565"
            ]
        ]
    },
    {
        "id": "f6af4b1c72379f3e",
        "type": "comment",
        "z": "0417ef263c3d97ea",
        "name": "Obtener incrementales",
        "info": "Si ya hay tablas en la BD se deben ejecutar los incrementales, siempre y cuando exista la tabla de versiones\n\nEste node recibe la version en el payload[0].Version",
        "x": 300,
        "y": 720,
        "wires": []
    },
    {
        "id": "60852392e85c0c92",
        "type": "comment",
        "z": "0417ef263c3d97ea",
        "name": "Validar tabla de versiones",
        "info": "Se debe contar con la tabla se versiones para conocer el estado de la BD, si no se tiene no se puede proseguir",
        "x": 310,
        "y": 500,
        "wires": []
    },
    {
        "id": "bbbd8e49bfd9edea",
        "type": "sqlite",
        "z": "0417ef263c3d97ea",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "fixed",
        "sql": "SELECT COUNT(1) AS Resultado FROM sqlite_master WHERE tbl_name = 'ASWLite_TraVersion'",
        "name": "BuscaASWLite_TraVersion",
        "x": 320,
        "y": 540,
        "wires": [
            [
                "1b963195441abdad"
            ]
        ]
    },
    {
        "id": "1b963195441abdad",
        "type": "switch",
        "z": "0417ef263c3d97ea",
        "name": "",
        "property": "payload[0].Resultado",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 530,
        "y": 540,
        "wires": [
            [
                "a976652c7e92c28c"
            ],
            [
                "0ede709802302131"
            ]
        ]
    },
    {
        "id": "a976652c7e92c28c",
        "type": "function",
        "z": "0417ef263c3d97ea",
        "name": "Raiserror: ASWLite_TraVersion NOT FOUND",
        "func": "node.error(\"La base de datos ya existe y no se encontro la tabla de versiones.\",msg);\nreturn msg;",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 540,
        "wires": [],
        "icon": "node-red/alert.svg"
    },
    {
        "id": "48fc8fcf1beb1b88",
        "type": "comment",
        "z": "0417ef263c3d97ea",
        "name": "Buscar última versión",
        "info": "",
        "x": 300,
        "y": 600,
        "wires": []
    },
    {
        "id": "0ede709802302131",
        "type": "sqlite",
        "z": "0417ef263c3d97ea",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "fixed",
        "sql": "SELECT Version FROM ASWLite_TraVersion",
        "name": "VersionFromASWLite_TraVersion",
        "x": 340,
        "y": 640,
        "wires": [
            [
                "5b7a0b2b4ddd50e3"
            ]
        ]
    },
    {
        "id": "85add8124f081565",
        "type": "function",
        "z": "0417ef263c3d97ea",
        "name": "ReturnVersion",
        "func": "\nreturn {payload:[{Version: msg.MajorVersion.Version}]\n    ,esNuevaVersion:1\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 420,
        "wires": [
            [
                "06a142c3ed82b149",
                "1508f58cd61b4136"
            ]
        ]
    },
    {
        "id": "06a142c3ed82b149",
        "type": "link out",
        "z": "0417ef263c3d97ea",
        "name": "Ejecutar incrementales",
        "links": [
            "801551ad1d3a5df8"
        ],
        "x": 755,
        "y": 420,
        "wires": []
    },
    {
        "id": "5b7a0b2b4ddd50e3",
        "type": "link out",
        "z": "0417ef263c3d97ea",
        "name": "Ejecutar incrementales",
        "links": [
            "801551ad1d3a5df8"
        ],
        "x": 515,
        "y": 640,
        "wires": []
    },
    {
        "id": "801551ad1d3a5df8",
        "type": "link in",
        "z": "0417ef263c3d97ea",
        "name": "Ejecutar incrementales",
        "links": [
            "5b7a0b2b4ddd50e3",
            "06a142c3ed82b149"
        ],
        "x": 115,
        "y": 760,
        "wires": [
            [
                "2de9219b46977855"
            ]
        ]
    },
    {
        "id": "2de9219b46977855",
        "type": "function",
        "z": "0417ef263c3d97ea",
        "name": "GetNextVersion",
        "func": "msg.currentVersion = msg.payload[0].Version;\nmsg.payload = {\n    \"sp_name\":\"AswSch.ASW_CU6_Pag1_ObtenerSiguienteVersion_Proc\",\n    \"params\":{\"pnVersion\":msg.payload[0].Version}\n    \n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 760,
        "wires": [
            [
                "a06ddfb3a81849e7"
            ]
        ],
        "info": "Para determinar si es la ultima version ejecutamos un sp que devuelve la siguiente version, si el resultset esta vacio se determina que la actual es la última version."
    },
    {
        "id": "a06ddfb3a81849e7",
        "type": "subflow:6271978d.4d6ac8",
        "z": "0417ef263c3d97ea",
        "name": "",
        "env": [],
        "x": 470,
        "y": 760,
        "wires": [
            [
                "c8efaf929468784b"
            ]
        ]
    },
    {
        "id": "c8efaf929468784b",
        "type": "MSSQL",
        "z": "0417ef263c3d97ea",
        "mssqlCN": "955d262e.b17988",
        "name": "CU6_Pag1_ObtenerSiguienteVersion_Proc",
        "outField": "payload",
        "returnType": "0",
        "throwErrors": "0",
        "query": "",
        "modeOpt": "",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "msg",
        "paramsOpt": "queryParams",
        "paramsOptType": "msg",
        "params": [],
        "x": 750,
        "y": 760,
        "wires": [
            [
                "ce6c9f286e380871"
            ]
        ]
    },
    {
        "id": "d5858a0d02c79980",
        "type": "comment",
        "z": "0417ef263c3d97ea",
        "name": "Ejecutar incrementales",
        "info": "Si ya hay tablas en la BD se deben ejecutar los incrementales, siempre y cuando exista la tabla de versiones\n\nEste node recibe la version en el payload[0].Version",
        "x": 300,
        "y": 840,
        "wires": []
    },
    {
        "id": "4456938e9469c76d",
        "type": "function",
        "z": "0417ef263c3d97ea",
        "name": "for v in Versiones",
        "func": "\nmsg.index = msg.index || 0; \n\nif (msg.Versiones.length > msg.index){\n    return [msg,null];\n}\nelse{\n    return [null\n            ,{\n                payload:msg.currentVersion,\n                esNuevaVersion:msg.esNuevaVersion\n            }\n            ];\n}\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 880,
        "wires": [
            [
                "38724ccb89b73ea9"
            ],
            [
                "f0ef31a514972303"
            ]
        ],
        "info": "controla la interacion en el array de versiones"
    },
    {
        "id": "9461de0e21427094",
        "type": "comment",
        "z": "0417ef263c3d97ea",
        "name": "Notificar servidor",
        "info": "Envia la ultima version actualizada al registro del servidor",
        "x": 280,
        "y": 940,
        "wires": []
    },
    {
        "id": "38724ccb89b73ea9",
        "type": "function",
        "z": "0417ef263c3d97ea",
        "name": "SetIncrementalVersion",
        "func": "msg.payload = msg.Versiones[msg.index];\n\nmsg.topic = msg.payload.IncrementalScript\nmsg.IncrementalVersion={\n    \"IdVersion\":msg.payload.IdVersion,\n    \"Version\":msg.payload.Version,\n    \"Major\":msg.payload.Major,\n    \"Minor\":msg.payload.Minor\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 880,
        "wires": [
            [
                "e03a08d6162d8945"
            ]
        ]
    },
    {
        "id": "fee7d0bcd23967d9",
        "type": "debug",
        "z": "0417ef263c3d97ea",
        "name": "Vesrion confirmada",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1510,
        "y": 880,
        "wires": []
    },
    {
        "id": "e03a08d6162d8945",
        "type": "sqlite",
        "z": "0417ef263c3d97ea",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "batch",
        "sql": "",
        "name": "ExecuteIncremental",
        "x": 740,
        "y": 880,
        "wires": [
            [
                "5bf5885891a0c8a8"
            ]
        ]
    },
    {
        "id": "5bf5885891a0c8a8",
        "type": "function",
        "z": "0417ef263c3d97ea",
        "name": "DatosVersion",
        "func": "const date = new Date(); // Or the date you'd like converted.\nconst fecha = new Date(date.getTime() - (date.getTimezoneOffset() * 60000)).toISOString();\n\nmsg.params = {\n    $Id:msg.IncrementalVersion.IdVersion,\n    $Version:msg.IncrementalVersion.Version,\n    $Major:msg.IncrementalVersion.Major,\n    $Minor:msg.IncrementalVersion.Minor,\n    $FechaUltimaMod:fecha\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 930,
        "y": 880,
        "wires": [
            [
                "eb62e97fa38425ab"
            ]
        ]
    },
    {
        "id": "eb62e97fa38425ab",
        "type": "sqlite",
        "z": "0417ef263c3d97ea",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "prepared",
        "sql": "UPDATE ASWLite_TraVersion\nSET Id = $Id,\n    Version = $Version,\n    Major = $Major,\n    Minor = $Minor,\n    FechaUltimaMod = $FechaUltimaMod\n",
        "name": "UpdateVersion",
        "x": 1100,
        "y": 880,
        "wires": [
            [
                "54be692010e699cf"
            ]
        ]
    },
    {
        "id": "54be692010e699cf",
        "type": "function",
        "z": "0417ef263c3d97ea",
        "name": "SetCurrentVersion",
        "func": "msg.currentVersion = msg.IncrementalVersion.Version;\nmsg.esNuevaVersion = 1;\nmsg.index++;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1290,
        "y": 880,
        "wires": [
            [
                "4456938e9469c76d",
                "fee7d0bcd23967d9"
            ]
        ]
    },
    {
        "id": "16aaed2d45fc6898",
        "type": "comment",
        "z": "0417ef263c3d97ea",
        "name": "Envia alerta de error",
        "info": "",
        "x": 1130,
        "y": 20,
        "wires": []
    },
    {
        "id": "ce6c9f286e380871",
        "type": "function",
        "z": "0417ef263c3d97ea",
        "name": "Set msg.Versiones",
        "func": "if(Array.isArray(msg.payload)){\n    return {Versiones:msg.payload, \n        currentVersion:msg.currentVersion,\n        esNuevaVersion:msg.esNuevaVersion\n    };\n}else{\n    if(msg.payload.length > 0){\n        if(msg.error){\n            //error de conexion cerrada no enviar error\n            if(String(msg.error).includes('Connection is closed')){\n                return null\n            }else{\n                node.error(msg.error, msg)\n            }\n        }\n    }\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 760,
        "wires": [
            [
                "4456938e9469c76d"
            ]
        ]
    },
    {
        "id": "17b932f26b5cc509",
        "type": "comment",
        "z": "0417ef263c3d97ea",
        "name": "Actualizar en la tabla local la version actual",
        "info": "",
        "x": 1020,
        "y": 840,
        "wires": []
    },
    {
        "id": "f0ef31a514972303",
        "type": "function",
        "z": "0417ef263c3d97ea",
        "name": "ConfirmaVersionServidor",
        "func": "if(msg.esNuevaVersion){\n    msg.payload = {\n        \"sp_name\" : \"AswSch.ASW_CU6_Pag1_ConfirmaVersion_Proc\",\n        \"params\" : {\"psIdCelda\" : global.get('celda') || 0\n                    ,\"psVersion\" : msg.payload\n                    ,\"psNombrePcMod\" : global.get('NombrePcMod') || 'unknown'\n        }\n        \n    }\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 980,
        "wires": [
            [
                "45296e9faf357fc4"
            ]
        ],
        "info": "Para determinar si es la ultima version ejecutamos un sp que devuelve la siguiente version, si el resultset esta vacio se determina que la actual es la última version."
    },
    {
        "id": "45296e9faf357fc4",
        "type": "subflow:6271978d.4d6ac8",
        "z": "0417ef263c3d97ea",
        "name": "",
        "env": [],
        "x": 530,
        "y": 980,
        "wires": [
            [
                "92304dd6bf18403b"
            ]
        ]
    },
    {
        "id": "92304dd6bf18403b",
        "type": "MSSQL",
        "z": "0417ef263c3d97ea",
        "mssqlCN": "955d262e.b17988",
        "name": "CU6_Pag1_ConfirmaVersion_Proc",
        "outField": "payload",
        "returnType": "0",
        "throwErrors": "0",
        "query": "",
        "modeOpt": "",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "msg",
        "paramsOpt": "queryParams",
        "paramsOptType": "msg",
        "params": [],
        "x": 780,
        "y": 980,
        "wires": [
            []
        ]
    },
    {
        "id": "5b2da0ce2147e01d",
        "type": "function",
        "z": "0417ef263c3d97ea",
        "name": "AlertaError",
        "func": "msg.payload = {\n    \"sp_name\" : \"AswSch.ASW_CU6_Pag1_ErrorSQLiteUpdate_Proc\",\n    \"params\" : {\"psIdCelda\" : global.get('celda') || 0\n                ,\"psError\" : msg.error.message.replace(/'/gm,`\"`)\n                ,\"psSource\" : msg.error.source.name.replace(/'/gm,`\"`)\n                ,\"psNombrePcMod\" : global.get('NombrePcMod') || 'unknown'\n    }\n    \n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1270,
        "y": 60,
        "wires": [
            [
                "c749671dd45f24cd"
            ]
        ],
        "info": "Para determinar si es la ultima version ejecutamos un sp que devuelve la siguiente version, si el resultset esta vacio se determina que la actual es la última version."
    },
    {
        "id": "c749671dd45f24cd",
        "type": "subflow:6271978d.4d6ac8",
        "z": "0417ef263c3d97ea",
        "name": "",
        "env": [],
        "x": 1450,
        "y": 60,
        "wires": [
            [
                "c27e9c1da8435a21"
            ]
        ]
    },
    {
        "id": "8738332c4566155e",
        "type": "MSSQL",
        "z": "0417ef263c3d97ea",
        "mssqlCN": "955d262e.b17988",
        "name": "CU6_Pag1_ErrorSQLiteUpdate_Proc",
        "outField": "payload",
        "returnType": "0",
        "throwErrors": "0",
        "query": "",
        "modeOpt": "",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "msg",
        "paramsOpt": "queryParams",
        "paramsOptType": "msg",
        "params": [],
        "x": 1910,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "1508f58cd61b4136",
        "type": "debug",
        "z": "0417ef263c3d97ea",
        "name": "Vesrion confirmada",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 830,
        "y": 460,
        "wires": []
    },
    {
        "id": "cfb4e46ad24442ce",
        "type": "catch",
        "z": "0417ef263c3d97ea",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 80,
        "y": 1140,
        "wires": [
            [
                "22ed9954cf018489"
            ]
        ]
    },
    {
        "id": "22ed9954cf018489",
        "type": "function",
        "z": "0417ef263c3d97ea",
        "name": "Error Handler",
        "func": "node.warn(`ERROR NO CONTROLADO >  ${env.get(\"NAME\")} > ${JSON.stringify(msg)}`)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 1140,
        "wires": [
            []
        ]
    },
    {
        "id": "122e09e10647c2b9",
        "type": "inject",
        "z": "0417ef263c3d97ea",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "10",
        "topic": "",
        "payloadType": "date",
        "x": 110,
        "y": 80,
        "wires": [
            [
                "61f9711258bf44d2"
            ]
        ]
    },
    {
        "id": "eda54241343dff8b",
        "type": "comment",
        "z": "0417ef263c3d97ea",
        "name": "Validar tabla de versiones",
        "info": "Se debe contar con la tabla se versiones para conocer el estado de la BD, si no se tiene no se puede proseguir",
        "x": 350,
        "y": 40,
        "wires": []
    },
    {
        "id": "ae85956961fd7f41",
        "type": "switch",
        "z": "0417ef263c3d97ea",
        "name": "",
        "property": "payload[0].Resultado",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 570,
        "y": 80,
        "wires": [
            [],
            [
                "0b5658540e3595bf"
            ]
        ]
    },
    {
        "id": "113c8a2e9328581d",
        "type": "comment",
        "z": "0417ef263c3d97ea",
        "name": "Buscar última versión",
        "info": "",
        "x": 760,
        "y": 40,
        "wires": []
    },
    {
        "id": "0b5658540e3595bf",
        "type": "sqlite",
        "z": "0417ef263c3d97ea",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "fixed",
        "sql": "SELECT Version FROM ASWLite_TraVersion",
        "name": "VersionFromASWLite_TraVersion",
        "x": 800,
        "y": 80,
        "wires": [
            [
                "0d45dafa26a6ca2a"
            ]
        ]
    },
    {
        "id": "61f9711258bf44d2",
        "type": "sqlite",
        "z": "0417ef263c3d97ea",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "fixed",
        "sql": "SELECT COUNT(1) AS Resultado FROM sqlite_master WHERE tbl_name = 'ASWLite_TraVersion'",
        "name": "BuscaASWLite_TraVersion",
        "x": 360,
        "y": 80,
        "wires": [
            [
                "ae85956961fd7f41"
            ]
        ]
    },
    {
        "id": "0d45dafa26a6ca2a",
        "type": "function",
        "z": "0417ef263c3d97ea",
        "name": "ConfirmaVersionServidor",
        "func": " msg.payload = {\n        \"sp_name\" : \"AswSch.ASW_CU6_Pag1_ConfirmaVersion_Proc\",\n        \"params\" : {\"psIdCelda\" : global.get('celda') || 0\n                    ,\"psVersion\" : msg.payload[0].Version\n                    ,\"psNombrePcMod\" : global.get('NombrePcMod') || 'unknown'\n        }\n        \n    }\n    return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 140,
        "wires": [
            [
                "5afa148dc1a1c018"
            ]
        ],
        "info": "Para determinar si es la ultima version ejecutamos un sp que devuelve la siguiente version, si el resultset esta vacio se determina que la actual es la última version."
    },
    {
        "id": "5afa148dc1a1c018",
        "type": "subflow:6271978d.4d6ac8",
        "z": "0417ef263c3d97ea",
        "name": "",
        "env": [],
        "x": 570,
        "y": 140,
        "wires": [
            [
                "4780bed1fbe170e7"
            ]
        ]
    },
    {
        "id": "4780bed1fbe170e7",
        "type": "MSSQL",
        "z": "0417ef263c3d97ea",
        "mssqlCN": "955d262e.b17988",
        "name": "CU6_Pag1_ConfirmaVersion_Proc",
        "outField": "payload",
        "returnType": "0",
        "throwErrors": "0",
        "query": "",
        "modeOpt": "",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "msg",
        "paramsOpt": "queryParams",
        "paramsOptType": "msg",
        "params": [],
        "x": 820,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "649a34769eda19e0",
        "type": "comment",
        "z": "0417ef263c3d97ea",
        "name": "confirma version",
        "info": "confirma la version de la bd local al arranque",
        "x": 100,
        "y": 40,
        "wires": []
    },
    {
        "id": "c27e9c1da8435a21",
        "type": "switch",
        "z": "0417ef263c3d97ea",
        "name": "",
        "property": "payload.params.psError",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "\"operation timed out for an unknown reason\"",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1650,
        "y": 60,
        "wires": [
            [
                "8738332c4566155e"
            ]
        ]
    },
    {
        "id": "8c8595e979ea6658",
        "type": "function",
        "z": "afaa7b91ac218e5e",
        "name": "CU1_Pag6_Deployments_Sel",
        "func": "let idcelda = global.get('celda');\nlet ClaUbicacion = global.get('ClaUbicacion');\n\nmsg.payload = {\"sp_name\":\"AswSch.ASW_CU1_Pag6_Deployments_Sel\",\"params\":{'PsIdCelda':idcelda}}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 100,
        "wires": [
            [
                "7cb1cb70fb1c9ebc"
            ]
        ]
    },
    {
        "id": "d92c6383e67e472f",
        "type": "inject",
        "z": "afaa7b91ac218e5e",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 100,
        "wires": [
            [
                "8c8595e979ea6658"
            ]
        ]
    },
    {
        "id": "7cb1cb70fb1c9ebc",
        "type": "subflow:22430c84.47da24",
        "z": "afaa7b91ac218e5e",
        "name": "",
        "x": 590,
        "y": 100,
        "wires": [
            [
                "b4e5f1d9ae38f752"
            ]
        ]
    },
    {
        "id": "b4e5f1d9ae38f752",
        "type": "sqlite",
        "z": "afaa7b91ac218e5e",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 750,
        "y": 100,
        "wires": [
            [
                "4ca76e92c1d66a16"
            ]
        ]
    },
    {
        "id": "4ca76e92c1d66a16",
        "type": "function",
        "z": "afaa7b91ac218e5e",
        "name": "QryObtenerRecursosActualizar",
        "func": "msg.topic = `SELECT * \nFROM ASWLite_TraDeployment\nWHERE estatus = 1\n`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 100,
        "wires": [
            [
                "a9dddc31fa1e5188"
            ]
        ]
    },
    {
        "id": "a9dddc31fa1e5188",
        "type": "sqlite",
        "z": "afaa7b91ac218e5e",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 130,
        "y": 220,
        "wires": [
            [
                "643af1571fbf56c4"
            ]
        ]
    },
    {
        "id": "643af1571fbf56c4",
        "type": "split",
        "z": "afaa7b91ac218e5e",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 270,
        "y": 220,
        "wires": [
            [
                "304320127c0c8cf2"
            ]
        ]
    },
    {
        "id": "8c1fcda1f4eb392c",
        "type": "switch",
        "z": "afaa7b91ac218e5e",
        "name": "TipoRecurso",
        "property": "payload.TipoRecurso",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "nodered",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "zip",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "carpeta",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "archivo",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "app",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 5,
        "x": 650,
        "y": 220,
        "wires": [
            [
                "869da6cca09e18eb"
            ],
            [
                "1bbd452f1c0ef688"
            ],
            [
                "8d897d79e07f6c32"
            ],
            [
                "1215d1232ffc66a3"
            ],
            [
                "403bf1298c2e9a73"
            ]
        ]
    },
    {
        "id": "1bbd452f1c0ef688",
        "type": "link out",
        "z": "afaa7b91ac218e5e",
        "name": "EsZip",
        "links": [
            "c428780b5e885b56"
        ],
        "x": 870,
        "y": 220,
        "wires": [],
        "l": true
    },
    {
        "id": "c428780b5e885b56",
        "type": "link in",
        "z": "afaa7b91ac218e5e",
        "name": "EsZip",
        "links": [
            "1bbd452f1c0ef688",
            "e80f88b5f5f265be"
        ],
        "x": 120,
        "y": 380,
        "wires": [
            [
                "284dda2fb6174511"
            ]
        ],
        "l": true
    },
    {
        "id": "284dda2fb6174511",
        "type": "function",
        "z": "afaa7b91ac218e5e",
        "name": "DeployZip",
        "func": "\nlet strOrigen = msg.payload.Origen\n\n\nmsg.archivoZip = strOrigen.substr(strOrigen.lastIndexOf('/') + 1);\n\nmsg.archivoZip = `${msg.payload.Destino}${msg.archivoZip}`\n\nmsg.payload = `${msg.payload.Origen} ${msg.payload.Destino}`\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 380,
        "wires": [
            [
                "5bd43e1aafd18f81"
            ]
        ]
    },
    {
        "id": "5bd43e1aafd18f81",
        "type": "exec",
        "z": "afaa7b91ac218e5e",
        "command": "cp",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "CP ZIP",
        "x": 420,
        "y": 380,
        "wires": [
            [],
            [],
            [
                "2195c86c85e24ecc"
            ]
        ]
    },
    {
        "id": "2195c86c85e24ecc",
        "type": "function",
        "z": "afaa7b91ac218e5e",
        "name": "FnDeploymentResult",
        "func": "if(msg.payload.code==0){\n   \n    msg.payload =`-oq ${msg.archivoZip} -d /home/pi/ASW && chmod 777 /home/pi/ASW/App/asw`\n    \n    return [msg,null]\n   \n}else{\n    node.error(`${msg.topic}: OCURRIO UN ERROR EN EL DEPLOYMENT -> ${msg.payload.message}`)\n    \n    msg.ClaEstatus = 3\n    \n    return [null,msg]\n}\n\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 400,
        "wires": [
            [
                "719c67d42cb6a96b"
            ],
            [
                "00737db9d5f79b8f"
            ]
        ]
    },
    {
        "id": "719c67d42cb6a96b",
        "type": "exec",
        "z": "afaa7b91ac218e5e",
        "command": "unzip",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "UNZIP - Rename",
        "x": 810,
        "y": 400,
        "wires": [
            [],
            [],
            [
                "bb0f14b98e6e31fd"
            ]
        ]
    },
    {
        "id": "304320127c0c8cf2",
        "type": "change",
        "z": "afaa7b91ac218e5e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "IdRecurso",
                "pt": "msg",
                "to": "payload.Id",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 220,
        "wires": [
            [
                "8c1fcda1f4eb392c"
            ]
        ]
    },
    {
        "id": "17756d678cf2f980",
        "type": "link in",
        "z": "afaa7b91ac218e5e",
        "name": "EsCarpeta",
        "links": [
            "8d897d79e07f6c32"
        ],
        "x": 120,
        "y": 540,
        "wires": [
            [
                "6a82b7acc592353d"
            ]
        ],
        "l": true
    },
    {
        "id": "6a82b7acc592353d",
        "type": "function",
        "z": "afaa7b91ac218e5e",
        "name": "DeployCarpeta",
        "func": "\nmsg.payload = `-r ${msg.payload.Origen} ${msg.payload.Destino}`\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 540,
        "wires": [
            [
                "40dec90dbda70ae5"
            ]
        ]
    },
    {
        "id": "40dec90dbda70ae5",
        "type": "exec",
        "z": "afaa7b91ac218e5e",
        "command": "cp",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "CP Carpeta",
        "x": 450,
        "y": 540,
        "wires": [
            [],
            [],
            [
                "77017aab21576bcf"
            ]
        ]
    },
    {
        "id": "77017aab21576bcf",
        "type": "function",
        "z": "afaa7b91ac218e5e",
        "name": "FnDeploymentResult",
        "func": "if(msg.payload.code==0){\n   \n    \n    msg.payload =`-oq /home/pi/ASW/asw-linux-armv7l-1.0.0.zip && mv /home/pi/ASW/asw-linux-armv7l /home/pi/ASW/App\" `\n   \n    msg.ClaEstatus = 2\n    \n}else{\n    node.error(`${msg.topic}: OCURRIO UN ERROR EN EL DEPLOYMENT -> ${msg.payload.message}`)\n    \n    msg.ClaEstatus = 3\n    \n}\n\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 560,
        "wires": [
            [
                "3b2e197f919d5f4c"
            ]
        ]
    },
    {
        "id": "7336c8694710d2c1",
        "type": "link in",
        "z": "afaa7b91ac218e5e",
        "name": "EsArchivo",
        "links": [
            "1215d1232ffc66a3"
        ],
        "x": 120,
        "y": 680,
        "wires": [
            [
                "e9a5c917fa486887"
            ]
        ],
        "l": true
    },
    {
        "id": "e9a5c917fa486887",
        "type": "function",
        "z": "afaa7b91ac218e5e",
        "name": "DeployArchivo",
        "func": "\nmsg.payload = `${msg.payload.Origen} ${msg.payload.Destino}`\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 680,
        "wires": [
            [
                "4275eed09f6a58cd"
            ]
        ]
    },
    {
        "id": "4275eed09f6a58cd",
        "type": "exec",
        "z": "afaa7b91ac218e5e",
        "command": "cp",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "CP archivo",
        "x": 450,
        "y": 680,
        "wires": [
            [],
            [],
            [
                "d593e54d41226e36"
            ]
        ]
    },
    {
        "id": "8d897d79e07f6c32",
        "type": "link out",
        "z": "afaa7b91ac218e5e",
        "name": "EsCarpeta",
        "links": [
            "17756d678cf2f980"
        ],
        "x": 890,
        "y": 260,
        "wires": [],
        "l": true
    },
    {
        "id": "1215d1232ffc66a3",
        "type": "link out",
        "z": "afaa7b91ac218e5e",
        "name": "EsArchivo",
        "links": [
            "7336c8694710d2c1"
        ],
        "x": 880,
        "y": 300,
        "wires": [],
        "l": true
    },
    {
        "id": "bb0f14b98e6e31fd",
        "type": "function",
        "z": "afaa7b91ac218e5e",
        "name": "FnDeploymentResult",
        "func": "if(msg.payload.code==0){\n  \n    msg.ClaEstatus = 2\n   \n}else{\n    node.error(`${msg.topic}: OCURRIO UN ERROR EN EL DEPLOYMENT -> ${msg.payload.message}`)\n    msg.ClaEstatus = 3\n}\n\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 420,
        "wires": [
            [
                "39d44f748d7e32c3"
            ]
        ]
    },
    {
        "id": "d593e54d41226e36",
        "type": "function",
        "z": "afaa7b91ac218e5e",
        "name": "FnDeploymentResult",
        "func": "if(msg.payload.code==0){\n\n    \n    msg.payload =`-oq /home/pi/ASW/asw-linux-armv7l-1.0.0.zip && mv /home/pi/ASW/asw-linux-armv7l /home/pi/ASW/App\" `\n   \n    msg.ClaEstatus = 2\n    \n}else{\n    node.error(`${msg.topic}: OCURRIO UN ERROR EN EL DEPLOYMENT -> ${msg.payload.message}`)\n    \n    msg.ClaEstatus = 3\n    \n}\n\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 700,
        "wires": [
            [
                "3d132302715d920e"
            ]
        ]
    },
    {
        "id": "4a91e8601337646f",
        "type": "link in",
        "z": "afaa7b91ac218e5e",
        "name": "FinDeploy",
        "links": [
            "00737db9d5f79b8f",
            "39d44f748d7e32c3",
            "3b2e197f919d5f4c",
            "3d132302715d920e",
            "d81c9a2822781057",
            "99af4a6ef97a20e8",
            "3bb45c7b83528bcc"
        ],
        "x": 120,
        "y": 1020,
        "wires": [
            [
                "a482dae80af6b7d9"
            ]
        ],
        "l": true
    },
    {
        "id": "5772be694203423a",
        "type": "function",
        "z": "afaa7b91ac218e5e",
        "name": "ASW_CU1_Pag6_Deployments_Upd",
        "func": "let idcelda = global.get('celda');\nlet ClaUbicacion = global.get('ClaUbicacion');\nlet NombrePcMod = global.get('NombrePcMod');\nmsg.payload = {\"sp_name\":\"AswSch.ASW_CU1_Pag6_Deployments_Upd\"\n                ,\"params\":{\"PnIdCelda\":idcelda\n                          ,\"PnIdRecurso\":msg.IdRecurso\n                          ,\"PnClaEstatus\":msg.ClaEstatus\n                          ,\"PnVersionInstalada\":msg.version\n                          ,\"PsNombrePcMod\": NombrePcMod\n                          }\n    \n              }\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1430,
        "y": 1020,
        "wires": [
            [
                "d81174431f59f8ec"
            ]
        ]
    },
    {
        "id": "d81174431f59f8ec",
        "type": "subflow:6271978d.4d6ac8",
        "z": "afaa7b91ac218e5e",
        "name": "",
        "env": [],
        "x": 1670,
        "y": 1020,
        "wires": [
            [
                "ba7302849cc28cd9"
            ]
        ]
    },
    {
        "id": "ba7302849cc28cd9",
        "type": "MSSQL",
        "z": "afaa7b91ac218e5e",
        "mssqlCN": "955d262e.b17988",
        "name": "ASWMSSQL",
        "outField": "payload",
        "returnType": "0",
        "throwErrors": "0",
        "query": "",
        "modeOpt": "",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "msg",
        "paramsOpt": "queryParams",
        "paramsOptType": "msg",
        "params": [],
        "x": 1830,
        "y": 1020,
        "wires": [
            [
                "8e46a0a4eb7620d8",
                "3915c88b49953b28"
            ]
        ]
    },
    {
        "id": "4ce70346cc022af8",
        "type": "function",
        "z": "afaa7b91ac218e5e",
        "name": "DeployNodeRed",
        "func": "\nmsg.payload = `-v -X POST http://localhost:18800/flows -H 'Content-Type: application/json' --data '@${msg.payload.Origen}'`\n\nreturn msg;",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 780,
        "wires": [
            [
                "fa9dde06afc0e7a6"
            ],
            [
                "3bb45c7b83528bcc"
            ]
        ]
    },
    {
        "id": "fa9dde06afc0e7a6",
        "type": "exec",
        "z": "afaa7b91ac218e5e",
        "command": "curl",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "curl nodered",
        "x": 890,
        "y": 780,
        "wires": [
            [],
            [],
            [
                "d81c9a2822781057"
            ]
        ]
    },
    {
        "id": "2551cd7ef7c64a69",
        "type": "link in",
        "z": "afaa7b91ac218e5e",
        "name": "EsNodeRed",
        "links": [
            "869da6cca09e18eb",
            "454105bd6018c7c8"
        ],
        "x": 130,
        "y": 780,
        "wires": [
            [
                "4ce70346cc022af8",
                "f98eeab0c3404c7c"
            ]
        ],
        "l": true
    },
    {
        "id": "869da6cca09e18eb",
        "type": "link out",
        "z": "afaa7b91ac218e5e",
        "name": "EsNodeRed",
        "links": [
            "2551cd7ef7c64a69"
        ],
        "x": 890,
        "y": 180,
        "wires": [],
        "l": true
    },
    {
        "id": "7fa4cdd2419499ac",
        "type": "http in",
        "z": "afaa7b91ac218e5e",
        "name": "CU1_Pag6_Deployments_Proc",
        "url": "/CU1_Pag6_Deployments_Proc",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 200,
        "y": 40,
        "wires": [
            [
                "a2bb348d88a9409d"
            ]
        ]
    },
    {
        "id": "39d44f748d7e32c3",
        "type": "link out",
        "z": "afaa7b91ac218e5e",
        "name": "FinDeploy",
        "links": [
            "4a91e8601337646f"
        ],
        "x": 1230,
        "y": 420,
        "wires": [],
        "l": true
    },
    {
        "id": "3b2e197f919d5f4c",
        "type": "link out",
        "z": "afaa7b91ac218e5e",
        "name": "FinDeploy",
        "links": [
            "4a91e8601337646f"
        ],
        "x": 940,
        "y": 560,
        "wires": [],
        "l": true
    },
    {
        "id": "3d132302715d920e",
        "type": "link out",
        "z": "afaa7b91ac218e5e",
        "name": "FinDeploy",
        "links": [
            "4a91e8601337646f"
        ],
        "x": 850,
        "y": 700,
        "wires": [],
        "l": true
    },
    {
        "id": "d81c9a2822781057",
        "type": "link out",
        "z": "afaa7b91ac218e5e",
        "name": "FinDeploy",
        "links": [
            "4a91e8601337646f"
        ],
        "x": 1050,
        "y": 800,
        "wires": [],
        "l": true
    },
    {
        "id": "8e46a0a4eb7620d8",
        "type": "http response",
        "z": "afaa7b91ac218e5e",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 2010,
        "y": 1020,
        "wires": []
    },
    {
        "id": "00737db9d5f79b8f",
        "type": "link out",
        "z": "afaa7b91ac218e5e",
        "name": "FinDeployErr",
        "links": [
            "4a91e8601337646f"
        ],
        "x": 790,
        "y": 460,
        "wires": [],
        "l": true
    },
    {
        "id": "5644f5ba3cee2ee1",
        "type": "function",
        "z": "afaa7b91ac218e5e",
        "name": "fnUpdateTraDeployment",
        "func": "msg.topic = `UPDATE ASWLite_TraDeployment\nSET Estatus = ${msg.ClaEstatus}\nWHERE Id = ${msg.IdRecurso}`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 1020,
        "wires": [
            [
                "3a1147402fde62fa"
            ]
        ]
    },
    {
        "id": "3a1147402fde62fa",
        "type": "sqlite",
        "z": "afaa7b91ac218e5e",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 1190,
        "y": 1020,
        "wires": [
            [
                "5772be694203423a"
            ]
        ]
    },
    {
        "id": "403bf1298c2e9a73",
        "type": "link out",
        "z": "afaa7b91ac218e5e",
        "name": "EsApp",
        "links": [
            "cbc3e45ac6da3c10"
        ],
        "x": 870,
        "y": 340,
        "wires": [],
        "l": true
    },
    {
        "id": "cbc3e45ac6da3c10",
        "type": "link in",
        "z": "afaa7b91ac218e5e",
        "name": "EsApp",
        "links": [
            "403bf1298c2e9a73",
            "0be2500529d92f50"
        ],
        "x": 110,
        "y": 920,
        "wires": [
            [
                "595bd53df85dcec8"
            ]
        ],
        "l": true
    },
    {
        "id": "595bd53df85dcec8",
        "type": "exec",
        "z": "afaa7b91ac218e5e",
        "command": "export XDG_RUNTIME_DIR=/run/user/1000  && systemctl --user restart asw.service",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "reiniciar app",
        "x": 270,
        "y": 920,
        "wires": [
            [],
            [],
            [
                "82e8f984db3f0119"
            ]
        ]
    },
    {
        "id": "82e8f984db3f0119",
        "type": "function",
        "z": "afaa7b91ac218e5e",
        "name": "FnDeploymentResult",
        "func": "if(msg.payload.code==0){\n    msg.ClaEstatus = 2\n}else{\n    node.error(`${msg.topic}: OCURRIO UN ERROR EN EL DEPLOYMENT -> ${msg.payload.message}`)\n    \n    msg.ClaEstatus = 3\n    \n}\n\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 940,
        "wires": [
            [
                "99af4a6ef97a20e8"
            ]
        ]
    },
    {
        "id": "99af4a6ef97a20e8",
        "type": "link out",
        "z": "afaa7b91ac218e5e",
        "name": "FinDeploy",
        "links": [
            "4a91e8601337646f"
        ],
        "x": 700,
        "y": 940,
        "wires": [],
        "l": true
    },
    {
        "id": "a2bb348d88a9409d",
        "type": "function",
        "z": "afaa7b91ac218e5e",
        "name": "guardarVersion",
        "func": "msg.version = msg.payload.versionUpd\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 40,
        "wires": [
            [
                "8c8595e979ea6658"
            ]
        ]
    },
    {
        "id": "3bb45c7b83528bcc",
        "type": "link out",
        "z": "afaa7b91ac218e5e",
        "name": "FinDeployErr",
        "links": [
            "4a91e8601337646f"
        ],
        "x": 890,
        "y": 840,
        "wires": [],
        "l": true
    },
    {
        "id": "1cef5743b7ef4c77",
        "type": "catch",
        "z": "afaa7b91ac218e5e",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 140,
        "y": 1820,
        "wires": [
            [
                "f252d4523ceff525"
            ]
        ]
    },
    {
        "id": "f252d4523ceff525",
        "type": "function",
        "z": "afaa7b91ac218e5e",
        "name": "Error Handler",
        "func": "node.warn(`ERROR NO CONTROLADO >  ${env.get(\"NAME\")} > ${JSON.stringify(msg)}`)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 1820,
        "wires": [
            []
        ]
    },
    {
        "id": "f98eeab0c3404c7c",
        "type": "function",
        "z": "afaa7b91ac218e5e",
        "name": "ActualizarEstatus",
        "func": "msg.topic = `UPDATE ASWLite_TraDeployment\nSET Estatus = 4\nWHERE Id = ${msg.IdRecurso}`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 820,
        "wires": [
            [
                "19e72b478ddb7979"
            ]
        ]
    },
    {
        "id": "19e72b478ddb7979",
        "type": "sqlite",
        "z": "afaa7b91ac218e5e",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 630,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "97159d30dd58cd6a",
        "type": "inject",
        "z": "afaa7b91ac218e5e",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 1360,
        "wires": [
            [
                "99a6e4bb4a4c98ef"
            ]
        ]
    },
    {
        "id": "99a6e4bb4a4c98ef",
        "type": "function",
        "z": "afaa7b91ac218e5e",
        "name": "fnUpdateTraDeployment",
        "func": "msg.topic = `SELECT Id , descripcion as VersionLocal\nFROM ASWLite_TraDeployment\nWHERE Estatus = 1`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 1360,
        "wires": [
            [
                "ed42bd4f99e145da"
            ]
        ]
    },
    {
        "id": "ed42bd4f99e145da",
        "type": "sqlite",
        "z": "afaa7b91ac218e5e",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 570,
        "y": 1360,
        "wires": [
            [
                "cb6fe0ca6799e398"
            ]
        ]
    },
    {
        "id": "5b339e27ba4f15d3",
        "type": "function",
        "z": "afaa7b91ac218e5e",
        "name": "GetDeploymentData",
        "func": "msg.IdRecurso = msg.payload[0].Id;\nmsg.ClaEstatus = ( msg.payload[0].VersionLocal == env.get(\"VersionNR\") ) ? 2 : 3 ; //si las versiones no coinciden se manda 3 como error\nmsg.version = env.get(\"VersionNR\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 1360,
        "wires": [
            [
                "e2cb54035c80f660"
            ]
        ]
    },
    {
        "id": "e2cb54035c80f660",
        "type": "function",
        "z": "afaa7b91ac218e5e",
        "name": "ASW_CU1_Pag6_Deployments_Upd",
        "func": "let idcelda = global.get('celda');\nlet ClaUbicacion = global.get('ClaUbicacion');\nlet NombrePcMod = global.get('NombrePcMod');\n\nmsg.payload = {\"sp_name\":\"AswSch.ASW_CU1_Pag6_Deployments_Upd\"\n                ,\"params\":{\"PnIdCelda\":idcelda\n                          ,\"PnIdRecurso\":msg.IdRecurso\n                          ,\"PnClaEstatus\":msg.ClaEstatus\n                          ,\"PnVersionInstalada\":msg.version\n                          ,\"PsNombrePcMod\": NombrePcMod\n                          }\n    \n              }\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1370,
        "y": 1360,
        "wires": [
            [
                "c39b1aafce55efef"
            ]
        ]
    },
    {
        "id": "c39b1aafce55efef",
        "type": "subflow:6271978d.4d6ac8",
        "z": "afaa7b91ac218e5e",
        "name": "",
        "env": [],
        "x": 1610,
        "y": 1360,
        "wires": [
            [
                "17fd08d68bc6efa8"
            ]
        ]
    },
    {
        "id": "17fd08d68bc6efa8",
        "type": "MSSQL",
        "z": "afaa7b91ac218e5e",
        "mssqlCN": "955d262e.b17988",
        "name": "ASWMSSQL",
        "outField": "payload",
        "returnType": "0",
        "throwErrors": "0",
        "query": "",
        "modeOpt": "",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "msg",
        "paramsOpt": "queryParams",
        "paramsOptType": "msg",
        "params": [],
        "x": 1790,
        "y": 1360,
        "wires": [
            [
                "4a6fcbfad202b236",
                "49f15491a37f5c94"
            ]
        ]
    },
    {
        "id": "4a6fcbfad202b236",
        "type": "http response",
        "z": "afaa7b91ac218e5e",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1950,
        "y": 1360,
        "wires": []
    },
    {
        "id": "cb6fe0ca6799e398",
        "type": "switch",
        "z": "afaa7b91ac218e5e",
        "name": "IdExists",
        "property": "payload.length",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 760,
        "y": 1360,
        "wires": [
            [
                "5b339e27ba4f15d3"
            ],
            [
                "ca76240aa76c2950"
            ]
        ]
    },
    {
        "id": "e61b4dde0bed5547",
        "type": "comment",
        "z": "afaa7b91ac218e5e",
        "name": "Deploy autonomo al iniciar",
        "info": "",
        "x": 210,
        "y": 1540,
        "wires": []
    },
    {
        "id": "25d1e70d9adabeec",
        "type": "function",
        "z": "afaa7b91ac218e5e",
        "name": "CU1_Pag6_Deployments_Sel",
        "func": "let idcelda = global.get('celda');\nlet ClaUbicacion = global.get('ClaUbicacion');\n\nmsg.payload = {\"sp_name\":\"AswSch.ASW_CU1_Pag6_Deployments_Sel\",\"params\":{'PsIdCelda':idcelda}}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 1600,
        "wires": [
            [
                "ec6db93f73297e45"
            ]
        ]
    },
    {
        "id": "ec6db93f73297e45",
        "type": "subflow:22430c84.47da24",
        "z": "afaa7b91ac218e5e",
        "name": "",
        "x": 630,
        "y": 1600,
        "wires": [
            [
                "130093177b9dc09c"
            ]
        ]
    },
    {
        "id": "130093177b9dc09c",
        "type": "sqlite",
        "z": "afaa7b91ac218e5e",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 790,
        "y": 1600,
        "wires": [
            [
                "077749f2f4396367"
            ]
        ]
    },
    {
        "id": "077749f2f4396367",
        "type": "function",
        "z": "afaa7b91ac218e5e",
        "name": "QryObtenerRecursosActualizar",
        "func": "msg.topic = `SELECT * \nFROM ASWLite_TraDeployment\nWHERE estatus = 1\n`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 1600,
        "wires": [
            [
                "384ee6e6ccf9ce61"
            ]
        ]
    },
    {
        "id": "e01b784177d55c0c",
        "type": "function",
        "z": "afaa7b91ac218e5e",
        "name": "revisaRecursoDeployar",
        "func": "let zip = msg.payload.filter( r => r.TipoRecurso == 'zip' )\nlet nodered = msg.payload.filter( r => r.TipoRecurso == 'nodered' )\nlet reiniciar = msg.payload.filter( r => r.TipoRecurso == 'app' )\n\nlet VersionLocalNodeRed = env.get(\"VersionNR\");\n\nmsg.EsAutonomo = 1\nmsg.version = \"atm\"\n\nmsg.ClaEstatus = 2\n\nif(nodered.length > 0){\n    \n    //Revisar la version a deployar vs la version actual, si es la misma no hacer nada para evitar ciclo infinito\n    if ( VersionLocalNodeRed == msg.payload.Descripcion || !VersionLocalNodeRed || !msg.payload.Descripcion){\n        node.warn(\"ES LA MISMA VERSION\")\n        return null\n    }\n    \n    msg.payload = nodered[0];\n    msg.IdRecurso = msg.payload.Id\n    \n    \n    return [msg,null,null]\n    \n}else if(zip.length > 0){\n    \n    msg.payload = zip[0]\n    msg.IdRecurso = msg.payload.Id\n    \n    return [null,msg,null]\n    \n}else if(reiniciar.length > 0){\n    \n    msg.payload = reiniciar[0]\n    msg.IdRecurso = msg.payload.Id\n    \n    return [null,null,msg]\n}\n\nreturn null\n",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1390,
        "y": 1600,
        "wires": [
            [
                "454105bd6018c7c8"
            ],
            [
                "e80f88b5f5f265be"
            ],
            [
                "0be2500529d92f50"
            ]
        ],
        "outputLabels": [
            "nodered",
            "zip",
            "reiniciar"
        ]
    },
    {
        "id": "384ee6e6ccf9ce61",
        "type": "sqlite",
        "z": "afaa7b91ac218e5e",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 1210,
        "y": 1600,
        "wires": [
            [
                "e01b784177d55c0c"
            ]
        ]
    },
    {
        "id": "454105bd6018c7c8",
        "type": "link out",
        "z": "afaa7b91ac218e5e",
        "name": "EsNodeRed_Atm",
        "mode": "link",
        "links": [
            "2551cd7ef7c64a69"
        ],
        "x": 1650,
        "y": 1580,
        "wires": [],
        "l": true
    },
    {
        "id": "5929aea037b67220",
        "type": "link in",
        "z": "afaa7b91ac218e5e",
        "name": "EsAutonomo_In",
        "links": [
            "b3b5cc226a771265",
            "c677ab705d105724",
            "b855574053756637",
            "0a3014a684ad93a3",
            "3915c88b49953b28"
        ],
        "x": 740,
        "y": 1560,
        "wires": [
            [
                "7a33d7624b3508fa"
            ]
        ],
        "l": true
    },
    {
        "id": "e80f88b5f5f265be",
        "type": "link out",
        "z": "afaa7b91ac218e5e",
        "name": "EsZip_atm",
        "mode": "link",
        "links": [
            "c428780b5e885b56"
        ],
        "x": 1640,
        "y": 1620,
        "wires": [],
        "l": true
    },
    {
        "id": "0be2500529d92f50",
        "type": "link out",
        "z": "afaa7b91ac218e5e",
        "name": "EsApp_atm",
        "mode": "link",
        "links": [
            "cbc3e45ac6da3c10"
        ],
        "x": 1640,
        "y": 1660,
        "wires": [],
        "l": true
    },
    {
        "id": "b9f7dbf79ca7a1dd",
        "type": "function",
        "z": "afaa7b91ac218e5e",
        "name": "SetContadorDeploy",
        "func": "//VARIABLE PARA EVITAR QUE SE CICLE EL DEPLOY AUTONOMO\nmsg.topic = `UPDATE ASWLite_TraDeployment\nSET ContadorDeploy = 0` \nreturn msg;",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 1660,
        "wires": []
    },
    {
        "id": "7a33d7624b3508fa",
        "type": "switch",
        "z": "afaa7b91ac218e5e",
        "name": "",
        "property": "ContadorDeploy",
        "propertyType": "flow",
        "rules": [
            {
                "t": "lt",
                "v": "10",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 890,
        "y": 1560,
        "wires": [
            [
                "764ab3647443f50a"
            ]
        ]
    },
    {
        "id": "764ab3647443f50a",
        "type": "function",
        "z": "afaa7b91ac218e5e",
        "name": "AumentaContadorDeploy",
        "func": "//aumentamos el contador de deploys\nlet contador = flow.get('ContadorDeploy') + 1\n\nflow.set('ContadorDeploy',contador)\n\nnode.warn(`El contador es: ${contador}`)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 1560,
        "wires": [
            [
                "077749f2f4396367"
            ]
        ]
    },
    {
        "id": "7e4ffc8daafddf01",
        "type": "link in",
        "z": "afaa7b91ac218e5e",
        "name": "DeployAtm_in",
        "links": [
            "49f15491a37f5c94",
            "ca76240aa76c2950"
        ],
        "x": 160,
        "y": 1600,
        "wires": [
            [
                "25d1e70d9adabeec",
                "b9f7dbf79ca7a1dd"
            ]
        ],
        "l": true
    },
    {
        "id": "49f15491a37f5c94",
        "type": "link out",
        "z": "afaa7b91ac218e5e",
        "name": "DeployAtm_out",
        "mode": "link",
        "links": [
            "7e4ffc8daafddf01"
        ],
        "x": 1980,
        "y": 1420,
        "wires": [],
        "l": true
    },
    {
        "id": "3915c88b49953b28",
        "type": "link out",
        "z": "afaa7b91ac218e5e",
        "name": "EsAutonomo_out",
        "mode": "link",
        "links": [
            "5929aea037b67220"
        ],
        "x": 2110,
        "y": 920,
        "wires": [],
        "l": true
    },
    {
        "id": "a482dae80af6b7d9",
        "type": "switch",
        "z": "afaa7b91ac218e5e",
        "name": "SwitchRecursos",
        "property": "payload.TipoRecurso",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "zip",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "carpeta",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "archivo",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "app",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 4,
        "x": 420,
        "y": 1020,
        "wires": [
            [
                "5644f5ba3cee2ee1"
            ],
            [
                "5644f5ba3cee2ee1"
            ],
            [
                "5644f5ba3cee2ee1"
            ],
            [
                "5644f5ba3cee2ee1"
            ]
        ]
    },
    {
        "id": "ca76240aa76c2950",
        "type": "link out",
        "z": "afaa7b91ac218e5e",
        "name": "DeployAtm_out",
        "mode": "link",
        "links": [
            "7e4ffc8daafddf01"
        ],
        "x": 940,
        "y": 1420,
        "wires": [],
        "l": true
    },
    {
        "id": "bd1397307d600e21",
        "type": "comment",
        "z": "afaa7b91ac218e5e",
        "name": "Revisar la version de NodeRed al iniciar",
        "info": "",
        "x": 210,
        "y": 1320,
        "wires": []
    },
    {
        "id": "976f30b806f1f75f",
        "type": "http in",
        "z": "afaa7b91ac218e5e",
        "name": "CU1_Pag2_ActualizaVersion",
        "url": "/CU1_Pag2_ActualizaVersion",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 180,
        "y": 1260,
        "wires": [
            [
                "ad84f010b3954b68"
            ]
        ]
    },
    {
        "id": "ad84f010b3954b68",
        "type": "function",
        "z": "afaa7b91ac218e5e",
        "name": "GetAppVersion",
        "func": "msg.versionAppLocal =  msg.payload.version\n\nmsg.topic = `\nSELECT  descripcion AS VersionEnviada \nFROM ASWLite_TraDeployment\nwhere IdRecurso = 1`\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 1260,
        "wires": [
            [
                "be97b229d6f84fee"
            ]
        ]
    },
    {
        "id": "701bc17f0de12a77",
        "type": "comment",
        "z": "afaa7b91ac218e5e",
        "name": "Revisar la version de app instalada",
        "info": "",
        "x": 200,
        "y": 1200,
        "wires": []
    },
    {
        "id": "3ee06a964d79c51d",
        "type": "http response",
        "z": "afaa7b91ac218e5e",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1690,
        "y": 1260,
        "wires": []
    },
    {
        "id": "be97b229d6f84fee",
        "type": "sqlite",
        "z": "afaa7b91ac218e5e",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 570,
        "y": 1260,
        "wires": [
            [
                "2ddb069c4963320b"
            ]
        ]
    },
    {
        "id": "2ddb069c4963320b",
        "type": "function",
        "z": "afaa7b91ac218e5e",
        "name": "ComparadorVersiones",
        "func": "msg.version = msg.versionAppLocal \nmsg.IdRecurso = 1 // zip/app\n\nif(msg.versionAppLocal == msg.payload.VersionEnviada){\n    msg.ClaEstatus = 2;\n}else{\n    msg.ClaEstatus = 3;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 1260,
        "wires": [
            [
                "39fbfa7cb427e49e"
            ]
        ]
    },
    {
        "id": "39fbfa7cb427e49e",
        "type": "function",
        "z": "afaa7b91ac218e5e",
        "name": "ASW_CU1_Pag6_Deployments_Upd",
        "func": "let idcelda = global.get('celda');\nlet ClaUbicacion = global.get('ClaUbicacion');\nlet NombrePcMod = global.get('NombrePcMod');\n\nmsg.payload = {\"sp_name\":\"AswSch.ASW_CU1_Pag6_Deployments_Upd\"\n                ,\"params\":{\"PsIdCelda\":idcelda\n                          ,\"PnIdRecurso\":msg.IdRecurso\n                          ,\"PnClaEstatus\":msg.ClaEstatus\n                          ,\"PnVersionInstalada\":msg.version\n                          ,\"PsNombrePcMod\": NombrePcMod\n                          }\n    \n              }\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 1260,
        "wires": [
            [
                "6f827a028dccf312"
            ]
        ]
    },
    {
        "id": "6f827a028dccf312",
        "type": "subflow:6271978d.4d6ac8",
        "z": "afaa7b91ac218e5e",
        "name": "",
        "env": [],
        "x": 1350,
        "y": 1260,
        "wires": [
            [
                "0bbdb5f4bda10894"
            ]
        ]
    },
    {
        "id": "0bbdb5f4bda10894",
        "type": "MSSQL",
        "z": "afaa7b91ac218e5e",
        "mssqlCN": "955d262e.b17988",
        "name": "ASWMSSQL",
        "outField": "payload",
        "returnType": "0",
        "throwErrors": "0",
        "query": "",
        "modeOpt": "",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "msg",
        "paramsOpt": "queryParams",
        "paramsOptType": "msg",
        "params": [],
        "x": 1550,
        "y": 1260,
        "wires": [
            [
                "3ee06a964d79c51d"
            ]
        ]
    },
    {
        "id": "c7e45d5ec87a61f5",
        "type": "inject",
        "z": "16b4315fad4e3401",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "3600",
        "crontab": "",
        "once": true,
        "onceDelay": "60",
        "topic": "",
        "payloadType": "date",
        "x": 150,
        "y": 140,
        "wires": [
            [
                "de786c04a3c07f45"
            ]
        ]
    },
    {
        "id": "43fe7e495caf3541",
        "type": "function",
        "z": "16b4315fad4e3401",
        "name": "ASW_CU102_Pag1_ValidaOPActual_Proc",
        "func": "let idcelda = global.get('celda');\nlet ClaUbicacion = global.get('ClaUbicacion');\nlet SinOrden = flow.get('SinOrden');\n\nmsg.payload = {\"sp_name\":\"AswSch.ASW_CU102_Pag1_ValidaOPActual_Proc\",\"params\":{PnClaUbicacion:ClaUbicacion, PnIdCelda:idcelda, PnSinOrden:SinOrden}}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 220,
        "wires": [
            [
                "0137708ba094e4b8"
            ]
        ]
    },
    {
        "id": "0137708ba094e4b8",
        "type": "subflow:6271978d.4d6ac8",
        "z": "16b4315fad4e3401",
        "name": "",
        "env": [],
        "x": 610,
        "y": 220,
        "wires": [
            [
                "a1e5cd42b41a7e51"
            ]
        ]
    },
    {
        "id": "a1e5cd42b41a7e51",
        "type": "MSSQL",
        "z": "16b4315fad4e3401",
        "mssqlCN": "955d262e.b17988",
        "name": "ASWMSSQL",
        "outField": "payload",
        "returnType": "0",
        "throwErrors": "0",
        "query": "",
        "modeOpt": "",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "msg",
        "paramsOpt": "queryParams",
        "paramsOptType": "msg",
        "params": [],
        "x": 770,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "de786c04a3c07f45",
        "type": "function",
        "z": "16b4315fad4e3401",
        "name": "OPActiva",
        "func": "msg[\"topic\"] = \n'SELECT * FROM ASWLite_TraOrdenProduccion WHERE ClaEstatus = 2;';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 140,
        "wires": [
            [
                "0562cb5ea0403e70"
            ]
        ]
    },
    {
        "id": "0562cb5ea0403e70",
        "type": "sqlite",
        "z": "16b4315fad4e3401",
        "mydb": "ca8c668f.a8c948",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SQLite",
        "x": 530,
        "y": 140,
        "wires": [
            [
                "486a6a0563f514c8"
            ]
        ]
    },
    {
        "id": "486a6a0563f514c8",
        "type": "function",
        "z": "16b4315fad4e3401",
        "name": "AsignaSinOrden",
        "func": "\nif(msg.payload.length < 1){\n    flow.set('SinOrden',1); \n}else{\n    flow.set('SinOrden',0); \n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 140,
        "wires": [
            [
                "43fe7e495caf3541"
            ]
        ]
    },
    {
        "id": "e202be6b2ee10d14",
        "type": "catch",
        "z": "16b4315fad4e3401",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 120,
        "y": 600,
        "wires": [
            [
                "99400fc4268583e1"
            ]
        ]
    },
    {
        "id": "99400fc4268583e1",
        "type": "function",
        "z": "16b4315fad4e3401",
        "name": "Error Handler",
        "func": "node.warn(`ERROR NO CONTROLADO >  ${env.get(\"NAME\")} > ${JSON.stringify(msg)}`)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "792ade77ae3b578f",
        "type": "exec",
        "z": "16b4315fad4e3401",
        "command": "df -hT /home",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "Space Alert",
        "x": 350,
        "y": 380,
        "wires": [
            [
                "2c707e537607944d"
            ],
            [],
            []
        ]
    },
    {
        "id": "6f2dda6129bb4708",
        "type": "inject",
        "z": "16b4315fad4e3401",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 09 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 380,
        "wires": [
            [
                "792ade77ae3b578f"
            ]
        ]
    },
    {
        "id": "2c707e537607944d",
        "type": "function",
        "z": "16b4315fad4e3401",
        "name": "",
        "func": "let message = msg.payload;\nmessage = message.split('%')[1];\nmessage = message.slice(-2);\nmessage = parseFloat(message);\nmsg.payload = message;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 360,
        "wires": [
            [
                "a6a9020bf4d7599e"
            ]
        ]
    },
    {
        "id": "2352224abf5bdc35",
        "type": "function",
        "z": "16b4315fad4e3401",
        "name": "ASW_CU8_Pag1_AlertaEspacioRB_Proc",
        "func": "let idcelda = global.get('celda');\nlet ClaUbicacion = global.get('ClaUbicacion');\nlet SinOrden = flow.get('SinOrden');\n\nmsg.payload = {\"sp_name\":\"AswSch.ASW_CU8_Pag1_AlertaEspacioRB_Proc\",\"params\":{PnClaUbicacion:ClaUbicacion, PnIdCelda:idcelda, PnEspacioOcupado:msg.payload}}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 360,
        "wires": [
            [
                "15fd83fe0edfa5d7"
            ]
        ]
    },
    {
        "id": "15fd83fe0edfa5d7",
        "type": "subflow:6271978d.4d6ac8",
        "z": "16b4315fad4e3401",
        "name": "",
        "env": [],
        "x": 730,
        "y": 440,
        "wires": [
            [
                "40f8073b014c31a2"
            ]
        ]
    },
    {
        "id": "40f8073b014c31a2",
        "type": "MSSQL",
        "z": "16b4315fad4e3401",
        "mssqlCN": "955d262e.b17988",
        "name": "ASWMSSQL",
        "outField": "payload",
        "returnType": "0",
        "throwErrors": "0",
        "query": "",
        "modeOpt": "",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "msg",
        "paramsOpt": "queryParams",
        "paramsOptType": "msg",
        "params": [],
        "x": 890,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "a6a9020bf4d7599e",
        "type": "switch",
        "z": "16b4315fad4e3401",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gte",
                "v": "60",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 630,
        "y": 360,
        "wires": [
            [
                "2352224abf5bdc35"
            ]
        ]
    }
]